<as:CAM
 xmlns:as="http://www.oasis-open.org/committees/cam"
 xmlns:camed="http://jcam.org.uk/editor"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema" compiled="true" CAMlevel="1" version="1.0">
  <as:Header>
    <as:Description>Ford UDB File</as:Description>
    <as:Owner>Motive Retail LLC</as:Owner>
    <as:Version>3.21R+</as:Version>
    <as:DateTime>2013-02-11T09:33:49</as:DateTime>
  </as:Header>
  <as:Namespaces>
    <as:namespace prefix="xsd">http://www.w3.org/2001/XMLSchema</as:namespace>
    <as:namespace prefix="as">http://www.oasis-open.org/committees/cam</as:namespace>
    <as:namespace prefix="xml">http://www.w3.org/XML/1998/namespace</as:namespace>
    <as:namespace prefix="camed">http://jcam.org.uk/editor</as:namespace>
  </as:Namespaces>
  <as:AssemblyStructure>
    <as:Structure ID="UDBFile" reference="" taxonomy="XML">
      <as:Element name="UDBFile" printMessage_1="This Test Case requires that the first OTC Part Record used in the Part Kit have a Part Sale Dealer Cost equal to 0.?not(//ERROR) and (                         not(                         ./OTCPartsInvoicePart[1]/DealerCostAmount = 0))" printMessage_2="This Test Case requires that the first OTC Part Record used in the Part Kit have a Part Sale Price equal to 0.?not(//ERROR) and (                         not(                         ./OTCPartsInvoicePart[1]/SaleAmount = 0))" printMessage_3="This Test Case requires a single OTC Part sale to be present in the file.  The file must include both OTC Header and OTC Part records.?not(//ERROR) and (                         not(./OTCPartInvoiceHeader) or                          not(./OTCPartsInvoicePart))" printMessage_4="This Test Case requires that the first OTC Part Record used in the Part Kit have a Part Quantity equal to 1.?not(//ERROR) and (                         not(                         ./OTCPartsInvoicePart[1]/Quantity = 1))" printMessage_5="This Test Case requires that the words 'Part Kit' be placed at the beginning of the Part Description field for all OTC Part Records used in the Part Kit.?not(//ERROR) and (                         not(                         ./OTCPartsInvoicePart[1]/Description[matches(.,'^Part Kit')] and                         ./OTCPartsInvoicePart[2]/Description[matches(.,'^Part Kit')]))">
        <as:Attribute name="version" makeMandatory="true" />
        <as:Element name="ERROR" makeOptional_1="true" makeRepeatable="//UDBFile/ERROR">
          <as:Attribute name="errorType" makeMandatory="true" />
          <as:Attribute name="errorClass" makeMandatory="true" />
          <as:Attribute name="foundHeaderPosition" makeOptional_1="true" />
          <as:Attribute name="foundTrailerPosition" makeOptional_1="true" />
          <as:Attribute name="lineCount" makeOptional_1="true" />
          <as:Attribute name="foundHeaderRecordCount" makeOptional_1="true" />
          <as:Attribute name="foundTrailerRecordCount" makeOptional_1="true" />
          <as:Attribute name="foundHeaderFileDate" makeOptional_1="true" />
          <as:Attribute name="foundHeaderFileDate-2" makeOptional_1="true" />
          <as:Attribute name="foundTrailerFileDate" makeOptional_1="true" />
          <as:Attribute name="foundHeaderFileNumber" makeOptional_1="true" />
          <as:Attribute name="foundHeaderFileNumber-2" makeOptional_1="true" />
          <as:Attribute name="foundTrailerFileNumber" makeOptional_1="true" />
          <as:Attribute name="foundHeaderPACode" makeOptional_1="true" />
          <as:Attribute name="foundTrailerPACode" makeOptional_1="true" />
          <as:Attribute name="foundHeaderSubDealerPACode" makeOptional_1="true" />
          <as:Attribute name="foundTrailerSubDealerPACode" makeOptional_1="true" />
          <as:Attribute name="foundHeaderGeographicSalesAreaCode" makeOptional_1="true" />
          <as:Attribute name="foundTrailerGeographicSalesAreaCode" makeOptional_1="true" />
          <as:Attribute name="foundLineLength" makeOptional_1="true" />
          <as:Attribute name="possibleLineLength" makeOptional_1="true" />
          <as:Attribute name="foundRecordType" makeOptional_1="true" />
          <as:Attribute name="possibleRecordType" makeOptional_1="true" />
          <as:Attribute name="foundPrecedeFileLineRecordType" makeOptional_1="true" />
          <as:Attribute name="foundDate" makeOptional_1="true" />
          <as:Element name="ERROR" makeOptional_1="true" makeRepeatable="//ERROR/ERROR">
            <as:Attribute name="errorType" makeMandatory="true" />
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="errorClass" makeMandatory="true" />
          </as:Element>
          <as:Element name="FileHeader" makeOptional_1="true" makeRepeatable="//FileHeader">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="PACode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL01" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL02" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL03" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL04" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FileDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FileNumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL05" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL06" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL05-2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL07" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL08" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FileDate-2" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FileNumber-2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RecordCount" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SubDealerPACode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL09" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL10" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL11" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="GeographicSalesAreaCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FranchiseCode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DSPSoftwareReleaseVersion" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL12" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL13" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL14" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL02-2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL15" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="VendorID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FileTypeFlag" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="MultiByteIndicator" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL16" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="RepairOrderHeader" makeOptional_1="true" makeRepeatable="//RepairOrderHeader">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="VIN" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RONumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ROXRef" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="ServiceWriterSocialID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="ROOpenDate" makeOptional_1="true" makeNillable_2="xsd">
              <as:Attribute name="truncROOpenDate" makeOptional_1="true" makeNillable_2="xsd" />
            </as:Element>
            <as:Element name="ROCloseDate" makeOptional_1="true" makeNillable_2="xsd">
              <as:Attribute name="truncROCloseDate" makeOptional_1="true" makeNillable_2="xsd" />
            </as:Element>
            <as:Element name="OdometerReading" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OdometerIndicator" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="NetCustomerPaidAmount" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TaxAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LicensePlateNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RepairOrderOpenTime" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RepairOrderCloseTime" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AppointmentTypeCode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AppointmentInitiatedDate" makeOptional_1="true" makeNillable_2="xsd">
              <as:Attribute name="truncApptInitDate" makeOptional_1="true" makeNillable_2="xsd" />
            </as:Element>
            <as:Element name="ServiceCustomerTypeCode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="ServiceWriterLocalID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ServiceWriterSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DateOfAppointment" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TimeOfAppointment" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="InitialEstimateAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="WaiterIndicator" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="ROInvoiceDate-VehicleReady" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="ROInvoiceTime-ROReady" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddWorkRequestDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddWorkRequestTime" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AddWorkRequestEstimate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="PromisedDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="PromisedTime" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="VehiclePickupDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="VehiclePickupTime" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerNumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL16-2" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="RepairOrderService" makeOptional_1="true" printMessage_2="Sublet / Miscellaneous #1 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription01)) and ./SubletOrMiscAmount01 = 0) or (not(./SubletOrMiscAmount01 = 0) and not(string(normalize-space(./SubletOrMiscDescription01))))" makeRepeatable="//RepairOrderService" printMessage_4="Sublet / Miscellaneous #5 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription05)) and ./SubletOrMiscAmount05 = 0) or (not(./SubletOrMiscAmount05 = 0) and not(string(normalize-space(./SubletOrMiscDescription05))))" printMessage_5="Sublet / Miscellaneous #4 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription04)) and ./SubletOrMiscAmount04 = 0) or (not(./SubletOrMiscAmount04 = 0) and not(string(normalize-space(./SubletOrMiscDescription04))))" printMessage_6="Sublet / Miscellaneous #6 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription06)) and ./SubletOrMiscAmount06 = 0) or (not(./SubletOrMiscAmount06 = 0) and not(string(normalize-space(./SubletOrMiscDescription06))))" printMessage_7="Sublet / Miscellaneous #8 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription08)) and ./SubletOrMiscAmount08 = 0) or (not(./SubletOrMiscAmount08 = 0) and not(string(normalize-space(./SubletOrMiscDescription08))))" printMessage_8="Sublet / Miscellaneous #2 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription02)) and ./SubletOrMiscAmount02 = 0) or (not(./SubletOrMiscAmount02 = 0) and not(string(normalize-space(./SubletOrMiscDescription02))))" printMessage_9="Sublet / Miscellaneous #3 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription03)) and ./SubletOrMiscAmount03 = 0) or (not(./SubletOrMiscAmount03 = 0) and not(string(normalize-space(./SubletOrMiscDescription03))))" printMessage_10="Sublet / Miscellaneous #7 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription07)) and ./SubletOrMiscAmount07 = 0) or (not(./SubletOrMiscAmount07 = 0) and not(string(normalize-space(./SubletOrMiscDescription07))))" printMessage_11="Sublet / Miscellaneous #10 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription10)) and ./SubletOrMiscAmount10 = 0) or (not(./SubletOrMiscAmount10 = 0) and not(string(normalize-space(./SubletOrMiscDescription10))))" printMessage_12="Sublet / Miscellaneous #9 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription09)) and ./SubletOrMiscAmount09 = 0) or (not(./SubletOrMiscAmount09 = 0) and not(string(normalize-space(./SubletOrMiscDescription09))))" printMessage_13="Sublet / Miscellaneous Descriptions and Amounts must start at number 1 and be sent in order without skipping numbers.?                                     (string(normalize-space(./SubletOrMiscDescription02)) and not(string(normalize-space(./SubletOrMiscDescription01)))) or                                     (string(normalize-space(./SubletOrMiscDescription03)) and not(string(normalize-space(./SubletOrMiscDescription02)))) or                                     (string(normalize-space(./SubletOrMiscDescription04)) and not(string(normalize-space(./SubletOrMiscDescription03)))) or                                     (string(normalize-space(./SubletOrMiscDescription05)) and not(string(normalize-space(./SubletOrMiscDescription04)))) or                                     (string(normalize-space(./SubletOrMiscDescription05)) and not(string(normalize-space(./SubletOrMiscDescription05)))) or                                     (string(normalize-space(./SubletOrMiscDescription07)) and not(string(normalize-space(./SubletOrMiscDescription06)))) or                                     (string(normalize-space(./SubletOrMiscDescription08)) and not(string(normalize-space(./SubletOrMiscDescription07)))) or                                     (string(normalize-space(./SubletOrMiscDescription09)) and not(string(normalize-space(./SubletOrMiscDescription08)))) or                                     (string(normalize-space(./SubletOrMiscDescription10)) and not(string(normalize-space(./SubletOrMiscDescription09))))">
            <as:Attribute name="awaID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
            <as:Attribute name="bundledlaborID" makeOptional_1="true" makeOptional_2="true" makeNillable_3="xsd" />
            <as:Attribute name="menupriceID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
            <as:Attribute name="espwarrantydeductible" makeOptional_1="true" makeOptional_2="true" makeNillable_3="xsd" />
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SequenceNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RepairTypeCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TechnicianSocialID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="ServicingDepartmentCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="LaborOperationCode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LaborChargeAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="BilledHours" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription01" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription02" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription03" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription04" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription05" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SubletOrMiscDescription06" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription07" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SubletOrMiscDescription08" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription09" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscDescription10" makeNillable_1="xsd" />
            <as:Element name="SubletOrMiscAmount01" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscAmount02" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SubletOrMiscAmount03" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SubletOrMiscAmount04" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SubletOrMiscAmount05" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscAmount06" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SubletOrMiscAmount07" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscAmount08" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscAmount09" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubletOrMiscAmount10" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="LaborDescription" makeNillable_1="xsd" makeOptional_2="true">
              <as:Element name="IsAWASplit" makeNillable_1="xsd" makeOptional_2="true" />
              <as:Element name="AWAFordPercentage" makeNillable_1="true" makeOptional_2="true" makeNillable_3="xsd" />
              <as:Element name="AWADealerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" />
              <as:Element name="AWACustomerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" />
              <as:Element name="LaborDescriptionText" makeNillable_1="xsd" makeOptional_2="true" />
            </as:Element>
            <as:Element name="TechnicianLocalID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="TechnicianSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TechnicianStartDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TechnicianStartTime" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="TechnicianFinishDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TechnicianFinishTime" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="DeclinedServOpCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="DeclinedServOpCodeDesc" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL16-3" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="RepairOrderPart" makeRepeatable="//RepairOrderPart" makeOptional_2="true">
            <as:Attribute name="awaID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
            <as:Attribute name="bundledlaborID" makeOptional_1="true" makeOptional_2="true" makeNillable_3="xsd" />
            <as:Attribute name="partcoresaleID" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
            <as:Attribute name="partsreturn" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
            <as:Attribute name="partskitID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
            <as:Attribute name="menupriceID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Quantity" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DealerCostAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Description" makeOptional_1="true" makeNillable_2="xsd">
              <as:Element name="IsAWASplit" makeNillable_1="xsd" makeOptional_2="true" />
              <as:Element name="AWAFordPercentage" makeOptional_1="true" makeNillable_2="true" makeOptional_3="true" makeNillable_4="xsd" />
              <as:Element name="AWADealerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" makeOptional_4="true" />
              <as:Element name="AWACustomerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" makeOptional_4="true" />
              <as:Element name="DescriptionText" makeNillable_1="xsd" makeOptional_2="true" />
            </as:Element>
            <as:Element name="CausalCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CounterPersonSocialID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CounterPersonLocalID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CounterPersonSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ROPartAddDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ROPartAddTime" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL16-4" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="OTCPartInvoiceHeader" makeRepeatable="//OTCPartInvoiceHeader" makeOptional_2="true">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="InvoiceNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="InvoiceDate" makeNillable_1="xsd" makeOptional_2="true">
              <as:Attribute name="truncInvoiceDate" makeNillable_1="xsd" makeOptional_2="true" />
            </as:Element>
            <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerTypeCode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerTaxID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TaxAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CounterPersonSocialID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CounterPersonLocalID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CounterPersonSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="DiscountAmount" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ShippingAmount" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleType" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleTypeDescription" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerNumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL16-5" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="OTCPartsInvoicePart" makeRepeatable="//OTCPartsInvoicePart" makeOptional_2="true">
            <as:Attribute name="partcoresaleID" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
            <as:Attribute name="partsreturn" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
            <as:Attribute name="partskitID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Quantity" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DealerCostAmount" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Description" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL16-6" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="PartsInventory" makeRepeatable="//PartsInventory" makeOptional_2="true">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="QuantityDate" makeOptional_1="true" makeNillable_2="xsd">
              <as:Attribute name="truncInventoryDate" makeOptional_1="true" makeNillable_2="xsd" />
            </as:Element>
            <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="PackedServicePartNumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartStockingIndicator" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="BestStockingLevel" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Quantity" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DealerExtendedCost" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DailyInboundQuantity" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DailyOutboundQuantity" makeMandatory="true" />
            <as:Element name="QuantityAdjustment" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="QuantityAdjustmentType" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="DateLastSale" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-0" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-4" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-5" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-6" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-7" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-8" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-9" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-10" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-11" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-12" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL16-7" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="ServiceAppointments" makeOptional_1="true" makeRepeatable="//ServiceAppointments">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AppointmentID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AppointmentType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="DateAppointmentInitiated" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="DateOfAppointment" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TimeOfAppointment" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AppointmentSchedulerLocalID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AppointmentSchedulerSTARSID" makeNillable_1="xsd" />
            <as:Element name="AppointmentSchedulerSocialID" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="VIN" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="VehicleMake" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="VehicleModel" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="VehicleYear" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OdometerReading" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OdometerIndicator" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AppointmentConfirmationEmail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedLOP1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedLOP2" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerSelectedLOP3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedLOP4" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedLOP5" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedRepair1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedRepair2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedRepair3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerSelectedRepair4" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerSelectedRepair5" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerSelectedRepairAmount1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedRepairAmount2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedRepairAmount3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedRepairAmount4" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerSelectedRepairAmount5" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AppointmentStatus" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FILECONTROL16-9" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="UsedVehicleSales" makeOptional_1="true" makeRepeatable="//UsedVehicleSales">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="UsedVehicleInvoiceNumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleType" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SalesPersonSocialID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SalesPersonLocalID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SalesPersonSTARSID" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SoldVIN" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SoldOdometerReading" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SoldOdometerIndicator" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TradeInVIN" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="TradeInOdometerReading" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="TradeInOdometerIndicator" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerNumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="ContractType" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleTypeDescription" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="InventoryType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL16-8" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="PartsInitialQuantity" makeOptional_1="true" makeRepeatable="//PartsInitialQuantity">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="QuantityDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="QuantityOnHand" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-0" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-1" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-2" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-3" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-4" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-5" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-6" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-7" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-8" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-9" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-10" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SaleQuantityCurrentMonth-11" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="SaleQuantityCurrentMonth-12" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL16-9" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="FileTrailer" makeOptional_1="true" makeRepeatable="//FileTrailer">
            <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL18" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="PACode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="SubDealerPACode" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="GeographicSalesAreaCode" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FileDate" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FileNumber" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="RecordCount" makeOptional_1="true" makeNillable_2="xsd" />
            <as:Element name="FileTypeFlag" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="FILECONTROL16-10" makeMandatory="true" />
          </as:Element>
        </as:Element>
        <as:Element name="FileHeader" makeOptional_1="true" makeRepeatable="//FileHeader" printMessage_3="The DSP Software Release Number field in the File Header Record must be left justified with right space fill.?string(normalize-space(./DSPSoftwareReleaseVersion)) and ./DSPSoftwareReleaseVersion[matches(.,'^\s.*$')]" printMessage_4="The Franchise Code in positions (132-133) of the File Header Record must be from the enumerated list ('1', '3' and 'U').?string(normalize-space(./FranchiseCode)) and (not(normalize-space(./FranchiseCode) = '1' or normalize-space(./FranchiseCode) = '3' or normalize-space(./FranchiseCode) = 'U'))" printMessage_5="The Multibyte Indicator must be either M (Multibyte) or S (Single Byte).?not(./MultiByteIndicator[matches(.,'^[MS]$')])" printMessage_6="The Sub Dealer P &amp; A Code field in the File Header Record must be left justified with right space fill.?string(normalize-space(./SubDealerPACode)) and ./SubDealerPACode[matches(.,'^\s.*$')]" printMessage_7="The File Number in positions (57-58) of the File Header Record (number of the current file in process) must be a 2 digit numeric value greater than 0.?not(./FileNumber[matches(.,'^0[1-9]|[1-9][0-9]$')])" printMessage_8="The Franchise Code field in the File Header Record must be left justified with right space fill.?string(normalize-space(./FranchiseCode)) and ./FranchiseCode[matches(.,'^\s.*$')]" printMessage_9="The DSP Software Release Version (DSP internal software release number) is a required field.?not(string(normalize-space(./DSPSoftwareReleaseVersion)))" printMessage_10="The Geographic Sales Area Code in positions (129-131) of the File Header Record must be upper case.?not(./GeographicSalesAreaCode[matches(normalize-space(.),'^[A-Z]{3}$')])" printMessage_11="The File Type Flag must be either D (daily) or H (history).?not(./FileTypeFlag[matches(.,'^[DH]$')])" printMessage_12="The File Date (date the file was created) in positions (51-56) of the File Header Record must be a valid date in the format MMDDYY.?not(./FileDate[matches(.,'^((((0[13578]|1[02])(0[1-9]|[12]\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\d|30)|02(0[1-9]|1\d|2[0-8]))\d{2})|0229([02468][048]|[13579][26]))$')])" printMessage_13="The File Date (date the file was created) in positions (92-97) of the File Header Record must be a valid date in the format MMDDYY.?not(./FileDate-2[matches(.,'^((((0[13578]|1[02])(0[1-9]|[12]\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\d|30)|02(0[1-9]|1\d|2[0-8]))\d{2})|0229([02468][048]|[13579][26]))$')])" printMessage_14="The Sub Dealer P &amp; A Code in the File Header Record must be an alpha-numeric value.?string(normalize-space(./SubDealerPACode)) and not(./SubDealerPACode[matches(normalize-space(.),'^[0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$')])" printMessage_15="The File Number in positions (98-99) of the File Header Record (number of the current file in process) must be a 2 digit numeric value greater than 0.?not(./FileNumber-2[matches(.,'^0[1-9]|[1-9][0-9]$')])" printMessage_16="The Record Count in the File Header Record (total number of records submitted) must be an 8 digit numeric value greater than 2.?not(./RecordCount[matches(.,'^[0-9]{8}$')])" printMessage_17="The Ford Parts and Accessories Code in the File Header Record must be a 5 character alpha-numeric value.?not(./PACode[matches(.,'^[0-9A-Za-z]{5}$')])" printMessage_18="The VendorID (as assigned by the CDS Analyst) must be a 6 character alpha-numeric value.?not(./VendorID[matches(.,'^[0-9A-Za-z]{6}$')])">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="PACode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL01" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL02" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL03" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL04" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FileDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FileNumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL05" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL06" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL05-2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL07" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL08" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FileDate-2" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FileNumber-2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RecordCount" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SubDealerPACode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL09" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL10" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL11" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="GeographicSalesAreaCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FranchiseCode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DSPSoftwareReleaseVersion" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL12" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL13" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL14" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL02-2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL15" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="VendorID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FileTypeFlag" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="MultiByteIndicator" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL16" makeNillable_1="xsd" makeOptional_2="true" />
        </as:Element>
        <as:Element name="RepairOrderHeader" makeOptional_1="true" makeRepeatable="//RepairOrderHeader" printMessage_3="The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 765-794 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_4="The Multibyte Indicator is 'S' (Single Byte) but the data in the Service Writer - Local ID field at positions 543-552 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./ServiceWriterLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ServiceWriterLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_5="The Repair Order Number in the Repair Order Header Record was either empty or all zeros. A Repair Order Number is required.?./RONumber = '0000000000000000'" printMessage_6="The Customer Email in the Repair Order Header Record must be a valid email address.?string(normalize-space(./CustomerEmail)) and not(./CustomerEmail[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])" printMessage_7="The Work Phone field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]" printMessage_8="The Time Of Appointment in the Repair Order Header Record is required Appointment Type Code in the Repair Order Header Record equals to 'A' 'I' 'P' or 'S' values.?./AppointmentTypeCode[matches(.,'^[AIPS]$')] and ./TimeOfAppointment[matches(.,'^0{4}$')]" printMessage_9="The Zip / Postal Code field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]" printMessage_10="The Home Phone field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]" printMessage_11="The RO Open Date (date repair order created) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.?not(./ROOpenDate[matches(normalize-space(.),'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_12="WARNING: The Dealer Permission/Opt In/SMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-SMS)))" printMessage_13="The Promised Date in the Repair Order Header Record must be a valid date in the format YYYYMMDD.?not(./PromisedDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_14="WARNING: The Corporate Express/Opt In/Business Email in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-BusEmail)))" printMessage_15="The Dealer Permission/Opt In/Email 3 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])" printMessage_16="The Waiter Indicator in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?not(./WaiterIndicator[matches(.,'^[YNU]$')])" printMessage_17="The Address 2 field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]" printMessage_18="The Business Email field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]" printMessage_19="The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 795-894 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_20="The Business Email in the Repair Order Header Record must be a valid email address.?string(normalize-space(./BusinessEmail)) and not(./BusinessEmail[matches(normalize-space(.),'@')]) and not(./BusinessEmail[matches(normalize-space(.),'\.')])" printMessage_21="WARNING: The Corporate Express/Opt In/MMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-MMS)))" printMessage_22="The Service Writer - National ID in the Repair Order Header Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.?string(normalize-space(./ServiceWriterNationalID)) and (./ServiceWriterNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!&gt;|}{()]')] or contains(./ServiceWriterNationalID,'[') or contains(./ServiceWriterNationalID,']'))" printMessage_23="The Customer Country Code in the Repair Order Header Record must be upper case characters from the ISO 3166-1 alpha-3 list or space filled.?string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])" printMessage_24="The Work Phone in the Repair Order Header Record must be numeric only. Do NOT fill in extra spaces with zeros.?not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_25="The Date of Appointment (Date the appointment was scheduled for) in the Repair Order Header Record must not be earlier than the Date Appointment Initiated (Date the customer set the appointment) in the Repair Order Header Record.?not(./DateOfAppointment[matches(.,'^0{8}$')]) and not(./AppointmentInitiatedDate[matches(.,'^0{8}$')]) and number(./DateOfAppointment) &lt; number(./AppointmentInitiatedDate)" printMessage_26="The Corporate Express/Opt In/Mail in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])" printMessage_27="The Corporate Express/Opt In/Cell Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])" printMessage_28="The Dealer Permission/Opt In/Email 1 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])" printMessage_29="The VIN in the Repair Order Header Record should be alpha-numeric only.?not(./VIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])" printMessage_30="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 895-994 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_31="The State/Province in the Repair Order Header Record must not contain numbers.?./StateOrProvince[matches(.,'[0-9]')]" printMessage_32="The Service Writer # (SSN OR SIN) in the Repair Order Header Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Service Writer - STARS ID.?string(normalize-space(./ServiceWriterSocialID)) and (string(normalize-space(./ServiceWriterSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))" printMessage_33="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 995-1094 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_34="The Customer Email 2 field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]" printMessage_35="The VIN field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./VIN)) and ./VIN[matches(.,'^\s.*$')]" printMessage_36="The Repair Order Open Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59). ?not(./RepairOrderOpenTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_37="The Vehicle Pick-Up Date (date customer gets vehicle back) in the Repair Order Header Record must not be earlier than the Date Appointment Initiated in the Repair Order Header Record.?not(./VehiclePickupDate[matches(.,'^0{8}$')]) and number(./VehiclePickupDate) &lt; number(./AppointmentInitiatedDate)" printMessage_38="The Net Customer Paid Amount (amount which the customer is expected to pay) in the Repair Order Header Record is invalid. Only numerals are allowed or a '-' in the first position.?string(./NetCustomerPaidAmount) and not(./NetCustomerPaidAmount[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_39="WARNING: The Dealer Permission/Opt In/Work Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))" printMessage_40="The Initial Estimate Amount in the Repair Order Header Record allows positive numeric values only.?not(./InitialEstimateAmount[matches(.,'^[0-9]{14}$')])" printMessage_41="WARNING: The Dealer Permission/Opt In/Home Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-HomePhone)))" printMessage_42="The Dealer Permission/Opt In/Work Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])" printMessage_43="WARNING: The Dealer Permission/Opt In/Email 3 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email3)))" printMessage_44="The Multibyte Indicator is 'S' (Single Byte) but the data in the Vehicle License Plate Number field at positions 505-524 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LicensePlateNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LicensePlateNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_45="The Dealer Permission/Opt In/Business Email in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])" printMessage_46="The Service Writer - Local ID field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./ServiceWriterLocalID)) and ./ServiceWriterLocalID[matches(.,'^\s.*$')]" printMessage_47="WARNING: The Corporate Express/Opt In/Home Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-HomePhone)))" printMessage_48="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Number field at positions 1204-1213 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_49="The Service Writer # (SSN OR SIN) in the Repair Order Header Record is required and should be numeric only.?not(./ServiceWriterSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./ServiceWriterSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]" printMessage_50="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 277-356 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_51="The Corporate Express/Opt In/Email 1 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])" printMessage_52="The Corporate Express/Opt In/Business Email in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])" printMessage_53="The Service Writer - Local ID or Service Writer STARS ID in the Repair Order Header Record must be not empty.?not(string(normalize-space(./ServiceWriterLocalID))) and not(string(normalize-space(./ServiceWriterSTARSID)))" printMessage_54="The Vehicle Pick-Up Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?not(./VehiclePickupTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_55="The Record Type in the Repair Order Header Record allows 'C1' value only.?not(./RecordType[matches(.,'^C1$')])" printMessage_56="The Cell Phone in the Repair Order Header Record must be numeric only. Do NOT fill in extra spaces with zeros.?not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_57="The RO Close Date (date repair order closed) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.?not(./ROCloseDate[matches(normalize-space(.),'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_58="The Tax Amount (amount as it appears on the Repair Order)  in the Repair Order Header Record is invalid. Only numerals are allowed or a '-' in the first position.?string(./TaxAmount) and not(./TaxAmount[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_59="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email field at positions 562-661 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_60="The City in the Repair Order Header Record must not contain numbers.?./City[matches(.,'[0-9]')]" printMessage_61="The Date Appointment Initiated (date customer contacted dealership for appointment) in the Repair Order Header Record must not be later than the RO Open Date.?not(./AppointmentInitiatedDate[matches(.,'^0{8}$')]) and number(./AppointmentInitiatedDate) &gt; number(./ROOpenDate)" printMessage_62="The Time Of Appointment in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?string(./TimeOfAppointment) and not(./TimeOfAppointment[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_63="WARNING: The Corporate Express/Opt In/Email 1 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email1)))" printMessage_64="The Promised Date (date repairs are to be finished) in the Repair Order Header Record must not be earlier than the Date Appointment Initiated in the Repair Order Header Record.?number(./PromisedDate) &lt; number(./AppointmentInitiatedDate)" printMessage_65="The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 81-110 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_66="The Service Writer STARS ID in the Repair Order Header Record allows numerical or spaces filled values only.?not(./ServiceWriterSTARSID[matches(.,'^([0-9]{9}|\s*)$')])" printMessage_67="The City field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]" printMessage_68="The Vehicle License Plate Number field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./LicensePlateNumber)) and ./LicensePlateNumber[matches(.,'^\s.*$')]" printMessage_69="WARNING: The Corporate Express/Opt In/Cell Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-CellPhone)))" printMessage_70="The Dealer Permission/Opt In/Email 2 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])" printMessage_71="The Additional Work Request Estimate in the Repair Order Header Record allows positive numeric values only.?not(./AddWorkRequestEstimate[matches(.,'^[0-9]{14}$')])" printMessage_72="The Customer Email 2 in the Repair Order Header Record must be a valid email address.?string(normalize-space(./CustomerEmail2)) and not(./CustomerEmail2[matches(normalize-space(.),'@')]) and not(./CustomerEmail2[matches(normalize-space(.),'\.')])" printMessage_73="The Dealer Permission/Opt In/SMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])" printMessage_74="The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1184-1203 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LoyaltyProgramMemberNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_75="The Cell Phone field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]" printMessage_76="The Corporate Express/Opt In/MMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])" printMessage_77="The Customer Email field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail)) and ./CustomerEmail[matches(.,'^\s.*$')]" printMessage_78="The Customer Email 3 field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]" printMessage_79="The Home Phone in the Repair Order Header Record must be numeric only. Do NOT fill in extra spaces with zeros.?not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_80="The Additional Work Request Date in the Repair Order Header Record must be a valid date in the format YYYYMMDD..?not(./AddWorkRequestDate[matches(.,'^0{8}$')]) and not(./AddWorkRequestDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_81="The Customer Email 3 in the Repair Order Header Record must be a valid email address.?string(normalize-space(./CustomerEmail3)) and not(./CustomerEmail3[matches(normalize-space(.),'@')]) and not(./CustomerEmail3[matches(normalize-space(.),'\.')])" printMessage_82="The Promised Time in the Repair Order Header Record must be a valid time in the format HHMM (HH: 00-23, MM: 00-59).?not(./PromisedTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_83="MultiByte characters are not allowed in the Zip/Postal Code field of the Repair Order Header Record.?not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_84="The Date of Appointment (Date the appointment was scheduled for) in the Repair Order Header Record is required when Appointment Type Code in the Repair Order Header Record equals to 'A' 'I' 'P' or 'S' values.?./AppointmentTypeCode[matches(.,'^[AIPS]$')] and ./DateOfAppointment[matches(.,'^0{8}$')]" printMessage_85="WARNING: The Additional Work Request Time in the Repair Order Header Record is 0000. This means the additional work was requested at midnight.?(not(./AddWorkRequestDate[matches(.,'^0{8}$')]) or not(./AddWorkRequestEstimate[matches(.,'^0{14}$')])) and ./AddWorkRequestTime[matches(.,'^0{4}$')]" printMessage_86="The Corporate Express/Opt In/Email 3 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])" printMessage_87="The Service Customer Type Code (type of customer the service is being performed for) in the Repair Order Header Record is not from the enumerated list ('D', 'F', 'G', 'I', 'R', 'U', 'B', 'J', 'W', 'A').?not(./ServiceCustomerTypeCode[matches(.,'^[DFGIRUBJWA]$')])" printMessage_88="The RO Invoice Date (Vehicle Ready) (Date when charges have been applied) in the Repair Order Header Record must not be later than the File Date (Date the file was created) in the File Header Record.?number(substring(./ROInvoiceDate-VehicleReady, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_89="The Repair Order Close Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59). ?not(./RepairOrderCloseTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_90="The Address 3 field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]" printMessage_91="The RO Open Date in the Repair Order Header Record cannot be later than RO Close Date in the Repair Order Header Record.?number(./ROOpenDate) &gt; number(./ROCloseDate)" printMessage_92="WARNING: The Dealer Permission/Opt In/Email 1 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email1)))" printMessage_93="The RO Invoice Date (Vehicle Ready) in the Repair Order Header Record must not be earlier than the RO Close Date in the Repair Order Header Record.?number(./ROInvoiceDate-VehicleReady) &lt; number(./ROCloseDate)" printMessage_94="The RO Close Date (date repair order closed) in the Repair Order Header Record must not be greater than the File Date.?number(substring(./ROCloseDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_95="The Loyalty Program Member Number field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]" printMessage_96="The RO Close Date (date repair order closed) in the Repair Order Header Record is earlier than the corresponding RO Open Date (date the repair order was opened) in the RO Header Record. ?./ROOpenDate/@truncROOpenDate &gt; ./ROCloseDate/@truncROCloseDate" printMessage_97="WARNING: The Dealer Permission/Opt In/MMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-MMS)))" printMessage_98="The Service Writer STARS ID field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./ServiceWriterSTARSID)) and ./ServiceWriterSTARSID[matches(.,'^\s.*$')]" printMessage_99="The Title field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]" printMessage_100="The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 111 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_101="The Promised Date (date repairs are to be finished) in the Repair Order Header Record must not be earlier than the RO Open Date in the Repair Order Header Record.?number(./PromisedDate) &lt; number(./ROOpenDate)" printMessage_102="The Dealer Permission/Opt In/MMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])" printMessage_103="The First Name field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]" printMessage_104="The Appointment Initiated Date in the Repair Order Header Record is required when Appointment Type in the Repair Order Header Record equals to 'A' 'I' 'P' or 'S' values.?./AppointmentTypeCode[matches(.,'^[AIPS]$')] and ./AppointmentInitiatedDate[matches(.,'^0{8}$')]" printMessage_105="The Vehicle Pick-Up Date (date customer gets vehicle back) in the Repair Order Header Record must not be earlier than the RO Close Date in the Repair Order Header Record.?not(./VehiclePickupDate[matches(.,'^0{8}$')]) and number(./VehiclePickupDate) &lt; number(./ROCloseDate)" printMessage_106="The RO Invoice Date (Vehicle Ready) (Date when charges have been applied) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.?not(./ROInvoiceDate-VehicleReady[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_107="The Additional Work Request Date in the Repair Order Header Record is required when Additional Work Request Estimate or Additional Work Request Time in the Repair Order Header Record is not zero.?(not(./AddWorkRequestTime[matches(.,'^0{4}$')]) or not(./AddWorkRequestEstimate[matches(.,'^0{14}$')])) and ./AddWorkRequestDate[matches(.,'^0{8}$')]" printMessage_108="WARNING: The Corporate Express/Opt In/Email 2 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email2)))" printMessage_109="The Vehicle Pick-Up Date (date customer gets vehicle back) in the Repair Order Header Record must not be earlier than the RO Open Date in the Repair Order Header Record.?not(./VehiclePickupDate[matches(.,'^0{8}$')]) and number(./VehiclePickupDate) &lt; number(./ROOpenDate)" printMessage_110="WARNING: The Dealer Permission/Opt In/Business Email in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-BusEmail)))" printMessage_111="The Date Appointment Initiated (date customer contacted dealership for appointment) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.?not(./AppointmentInitiatedDate[matches(.,'^0{8}$')]) and not(./AppointmentInitiatedDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_112="The Corporate Express/Opt In/Home Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])" printMessage_113="The Address 1 field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]" printMessage_114="The Repair Order Number in the Repair Order Header Record should be alpha-numeric only.?not(./RONumber[matches(.,'^[a-zA-Z0-9]*$')])" printMessage_115="The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 357-386 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_116="WARNING: The Corporate Express/Opt In/Mail in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Mail)))" printMessage_117="The Corporate Express/Opt In/Email 2 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])" printMessage_118="The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 192-196 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_119="WARNING: The Corporate Express/Opt In/Email 3 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email3)))" printMessage_120="The Dealer Permission/Opt In/Mail in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])" printMessage_121="The Dealer Permission/Opt In/Home Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])" printMessage_122="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 685-764 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_123="The Additional Work Request Date in the Repair Order Header Record must not be earlier than the RO Open Date in the Repair Order Header Record and not later than the RO Invoice Date (Vehicle Ready) in the Repair Order Header Record.?not(./AddWorkRequestDate[matches(.,'^0{8}$')]) and (number(./AddWorkRequestDate) &lt; number(./ROOpenDate) or number(./AddWorkRequestDate) &gt; number(./ROInvoiceDate-VehicleReady))" printMessage_124="The RO Open Date (date repair order opened) in the Repair Order Header Record must not be greater than the File Date.?number(substring(./ROOpenDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_125="The Odometer Reading in the Repair Order Header record should be numeric only.?not(./OdometerReading[matches(normalize-space(.),'^[0-9]{6}$')])" printMessage_126="WARNING: The Dealer Permission/Opt In/Email 2 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email2)))" printMessage_127="The Company Description field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]" printMessage_128="The State/Province field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]" printMessage_129="The Date of Appointment (Date the appointment was scheduled for) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.?not(./DateOfAppointment[matches(.,'^0{8}$')]) and not(./DateOfAppointment[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_130="The Repair Order Cross-Reference Number in the Repair Order Header Record should be alpha-numeric only.?not(./ROXRef[matches(.,'^[a-zA-Z0-9]*$')])" printMessage_131="The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 112-191 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_132="The Middle Initial in the Repair Order Header Record must be an alpha or multibyte character.?./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!&gt;|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)" printMessage_133="The Corporate Express/Opt In/Work Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])" printMessage_134="The Multibyte Indicator is 'S' (Single Byte) but the data in the State/Province field at positions 387-416 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_135="WARNING: The Dealer Permission/Opt In/Mail in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Mail)))" printMessage_136="The Vehicle Pick-Up Date in the Repair Order Header Record must be a valid date in the format YYYYMMDD.?not(./VehiclePickupDate[matches(.,'^0{8}$')]) and not(./VehiclePickupDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_137="The Last Name field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]" printMessage_138="The RO Invoice Time (vehicle ready)  in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?not(./ROInvoiceTime-ROReady[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_139="The Corporate Express/Opt In/SMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])" printMessage_140="WARNING: The Corporate Express/Opt In/Work Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-WorkPhone)))" printMessage_141="WARNING: The Dealer Permission/Opt In/Cell Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-CellPhone)))" printMessage_142="The Promised Date (date repairs are to be finished) in the Repair Order Header Record must not be earlier than the Date Of Appointment in the Repair Order Header Record.?number(./PromisedDate) &lt; number(./DateOfAppointment)" printMessage_143="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 197-276 of the Repair Order Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_144="The Date Appointment Initiated (date customer contacted dealership for appointment) in the Repair Order Header Record must not be greater than the File Date.?number(substring(./AppointmentInitiatedDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_145="The Appointment Type (method used to initiate an appointment) in the Repair Order Header Record is not from the enumerated list ('A', 'I', 'P', 'W', 'U', 'S').?not(./AppointmentTypeCode[matches(.,'^[AIPWUS]$')])" printMessage_146="The Customer Number field in the Repair Order Header Record must be left justified with right space fill.?string(normalize-space(./CustomerNumber)) and ./CustomerNumber[matches(.,'^\s.*$')]" printMessage_147="The Dealer Permission/Opt In/Cell Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])" printMessage_148="The Additional Work Request Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?string(./AddWorkRequestTime) and not(./AddWorkRequestTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_149="The Odometer Indicator (miles or kilometer)  in the Repair Order Header Record must be either M or K.?not(./OdometerIndicator[matches(normalize-space(.),'^[MK]$')])" printMessage_150="WARNING: The Corporate Express/Opt In/SMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-SMS)))">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="VIN" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RONumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ROXRef" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="ServiceWriterSocialID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="ROOpenDate" makeOptional_1="true" makeNillable_2="xsd">
            <as:Attribute name="truncROOpenDate" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="ROCloseDate" makeOptional_1="true" makeNillable_2="xsd">
            <as:Attribute name="truncROCloseDate" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="OdometerReading" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OdometerIndicator" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="NetCustomerPaidAmount" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TaxAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LicensePlateNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RepairOrderOpenTime" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RepairOrderCloseTime" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AppointmentTypeCode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AppointmentInitiatedDate" makeOptional_1="true" makeNillable_2="xsd">
            <as:Attribute name="truncApptInitDate" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="ServiceCustomerTypeCode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="ServiceWriterLocalID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ServiceWriterSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DateOfAppointment" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TimeOfAppointment" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="InitialEstimateAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="WaiterIndicator" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="ROInvoiceDate-VehicleReady" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="ROInvoiceTime-ROReady" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddWorkRequestDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddWorkRequestTime" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AddWorkRequestEstimate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="PromisedDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="PromisedTime" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="VehiclePickupDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="VehiclePickupTime" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerNumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL16-2" makeNillable_1="xsd" makeOptional_2="true" />
        </as:Element>
        <as:Element name="RepairOrderService" makeOptional_1="true" printMessage_2="Sublet / Miscellaneous #1 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription01)) and ./SubletOrMiscAmount01 = 0) or (not(./SubletOrMiscAmount01 = 0) and not(string(normalize-space(./SubletOrMiscDescription01))))" makeRepeatable="//RepairOrderService" printMessage_4="Sublet / Miscellaneous #5 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription05)) and ./SubletOrMiscAmount05 = 0) or (not(./SubletOrMiscAmount05 = 0) and not(string(normalize-space(./SubletOrMiscDescription05))))" printMessage_5="Sublet / Miscellaneous #4 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription04)) and ./SubletOrMiscAmount04 = 0) or (not(./SubletOrMiscAmount04 = 0) and not(string(normalize-space(./SubletOrMiscDescription04))))" printMessage_6="Sublet / Miscellaneous #6 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription06)) and ./SubletOrMiscAmount06 = 0) or (not(./SubletOrMiscAmount06 = 0) and not(string(normalize-space(./SubletOrMiscDescription06))))" printMessage_7="Sublet / Miscellaneous #8 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription08)) and ./SubletOrMiscAmount08 = 0) or (not(./SubletOrMiscAmount08 = 0) and not(string(normalize-space(./SubletOrMiscDescription08))))" printMessage_8="Sublet / Miscellaneous #2 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription02)) and ./SubletOrMiscAmount02 = 0) or (not(./SubletOrMiscAmount02 = 0) and not(string(normalize-space(./SubletOrMiscDescription02))))" printMessage_9="Sublet / Miscellaneous #3 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription03)) and ./SubletOrMiscAmount03 = 0) or (not(./SubletOrMiscAmount03 = 0) and not(string(normalize-space(./SubletOrMiscDescription03))))" printMessage_10="Sublet / Miscellaneous #7 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription07)) and ./SubletOrMiscAmount07 = 0) or (not(./SubletOrMiscAmount07 = 0) and not(string(normalize-space(./SubletOrMiscDescription07))))" printMessage_11="Sublet / Miscellaneous #10 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription10)) and ./SubletOrMiscAmount10 = 0) or (not(./SubletOrMiscAmount10 = 0) and not(string(normalize-space(./SubletOrMiscDescription10))))" printMessage_12="Sublet / Miscellaneous #9 must have both a Description and an Amount.?(string(normalize-space(./SubletOrMiscDescription09)) and ./SubletOrMiscAmount09 = 0) or (not(./SubletOrMiscAmount09 = 0) and not(string(normalize-space(./SubletOrMiscDescription09))))" printMessage_13="Sublet / Miscellaneous Descriptions and Amounts must start at number 1 and be sent in order without skipping numbers.?                                     (string(normalize-space(./SubletOrMiscDescription02)) and not(string(normalize-space(./SubletOrMiscDescription01)))) or                                     (string(normalize-space(./SubletOrMiscDescription03)) and not(string(normalize-space(./SubletOrMiscDescription02)))) or                                     (string(normalize-space(./SubletOrMiscDescription04)) and not(string(normalize-space(./SubletOrMiscDescription03)))) or                                     (string(normalize-space(./SubletOrMiscDescription05)) and not(string(normalize-space(./SubletOrMiscDescription04)))) or                                     (string(normalize-space(./SubletOrMiscDescription05)) and not(string(normalize-space(./SubletOrMiscDescription05)))) or                                     (string(normalize-space(./SubletOrMiscDescription07)) and not(string(normalize-space(./SubletOrMiscDescription06)))) or                                     (string(normalize-space(./SubletOrMiscDescription08)) and not(string(normalize-space(./SubletOrMiscDescription07)))) or                                     (string(normalize-space(./SubletOrMiscDescription09)) and not(string(normalize-space(./SubletOrMiscDescription08)))) or                                     (string(normalize-space(./SubletOrMiscDescription10)) and not(string(normalize-space(./SubletOrMiscDescription09))))" printMessage_14="The Declined Services Labor Operation Code field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./DeclinedServOpCode)) and ./DeclinedServOpCode[matches(.,'^\s.*$')]" printMessage_15="The Technician Finishes Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record must not be later than the RO Close Date in the Repair Order Header Record.?not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and number(./TechnicianFinishDate) &gt; number(//RepairOrderHeader/ROCloseDate)" printMessage_16="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 3 field at positions 81-95 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription03[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription03[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_17=" The Technician STARS ID in the Repair Order Service Record allows numerical or spaces filled values only.?not(./TechnicianSTARSID[matches(.,'^([0-9]{9}|\s*)$')])" printMessage_18="The Technician Finishes Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record must not be later than the File Date in the File Header Record.?not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and number(substring(./TechnicianFinishDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_19="The Sequence Number (used with Bundled and Sub Labor Operations) must be a 2 digit numeric value.?not(./SequenceNumber[matches(.,'^[0-9][0-9]$')])" printMessage_20="The Sublet / Misc Description #09 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription09)) and ./SubletOrMiscDescription09[matches(.,'^\s.*$')]" printMessage_21="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 2 field at positions 66-80 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription02[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription02[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_22="The Technician # (SSN OR SIN) in the Repair Order Service Record is required and should be numeric only.?not(./TechnicianSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./TechnicianSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]" printMessage_23="The Sublet / Misc Description #01 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription01)) and ./SubletOrMiscDescription01[matches(.,'^\s.*$')]" printMessage_24="The Sublet / Misc Description #03 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription03)) and ./SubletOrMiscDescription03[matches(.,'^\s.*$')]" printMessage_25="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 7 field at positions 141-155 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription07[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription07[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_26="The Labor Charge (amount charged for this service as it appears on the Repair Order) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./LaborChargeAmount[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_27="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 8 field at positions 156-170 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription08[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription08[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_28="The Sublet Misc. Amount #9 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount09[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_29="The Technician Start Time in the Repair Order Service Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?string(normalize-space(./TechnicianStartTime)) and not(./TechnicianStartTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_30=" The Part cannot both be a parts kit and menu pricing.?string(normalize-space(@partskit)) and string(normalize-space(@menuprice))" printMessage_31="The Technician Local ID or Technician STARS ID in the Repair Order Service Record must be not empty.?not(string(normalize-space(./TechnicianLocalID))) and not(string(normalize-space(./TechnicianSTARSID)))" printMessage_32="The Technician STARS ID field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./TechnicianSTARSID)) and ./TechnicianSTARSID[matches(.,'^\s.*$')]" printMessage_33="WARNING: Unusually high hours billed.?./BilledHours &gt; 99" printMessage_34="The Technician Starts Job/Sign In Date (date technician starts work) in the Repair Order Service Record must not be later than the RO Close Date in the Repair Order Header Record.?not(./TechnicianStartDate[matches(.,'^0{8}$')]) and number(./TechnicianStartDate) &gt; number(//RepairOrderHeader/ROCloseDate)" printMessage_35="The Billed Hours in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./BilledHours[matches(.,'^[-0-9][0-9]{3}$')])" printMessage_36="The Sublet Misc. Amount #7 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount07[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_37="The Technician Local ID field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./TechnicianLocalID)) and ./TechnicianLocalID[matches(.,'^\s.*$')]" printMessage_38="The Labor Operation Code field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./LaborOperationCode)) and ./LaborOperationCode[matches(.,'^\s.*$')]" printMessage_39="The Labor Description field in the Repair Order Service Record must be left justified with right space fill.?normalize-space(./LaborDescription/LaborDescriptionText) and ./LaborDescription/LaborDescriptionText[matches(.,'^\s.*$')]" printMessage_40="The Sublet / Misc Description #02 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription02)) and ./SubletOrMiscDescription02[matches(.,'^\s.*$')]" printMessage_41="The Servicing Department Code in the Repair Order Service Record is not from the enumerated list ('B', 'D', 'O', 'Q', 'S', 'U', 'M').?not(./ServicingDepartmentCode[matches(.,'^[BDOQSUM]$')])" printMessage_42="The Billed Hours field in the Repair Order Service Record is required if the Labor Charge (amount charged for this service as it appears on the Repair Order) in the Repair Order Service Record is not zero.?./BilledHours[matches(.,'^0{4}$')] and not(./LaborChargeAmount[matches(.,'^0{14}$')])" printMessage_43="The Technician Finish Time in the Repair Order Service Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?string(normalize-space(./TechnicianFinishTime)) and not(./TechnicianFinishTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_44="The Sublet / Misc Description #10 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription10)) and ./SubletOrMiscDescription10[matches(.,'^\s.*$')]" printMessage_45=" The Service cannot both be bundled labor operation and menu pricing.?string(normalize-space(@blonumber)) and string(normalize-space(@menuprice))" printMessage_46="The Declined Services Labor Operation Code Description field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./DeclinedServOpCodeDesc)) and ./DeclinedServOpCodeDesc[matches(.,'^\s.*$')]" printMessage_47="The Declined Services Labor Operation Code in the Repair Order Service Record is required if the Declined Services Labor Operation Code Description in the Repair Order Service Record is not empty.?not(string(normalize-space(./DeclinedServOpCode))) and string(normalize-space(./DeclinedServOpCodeDesc))" printMessage_48="MultiByte characters are not allowed in the Labor Operation Code field of the Repair Order Service Record.?not(./LaborOperationCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LaborOperationCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_49="The Technician Finish Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record must be a valid date in the format YYYYMMDD.?not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and not(./TechnicianFinishDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_50="The Technician - National ID in the Repair Order Service Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.?string(normalize-space(./TechnicianNationalID)) and (./TechnicianNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!&gt;|}{()]')] or contains(./TechnicianNationalID,'[') or contains(./TechnicianNationalID,']'))" printMessage_51="The Sublet Misc. Amount #8 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount08[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_52="The Multibyte Indicator is 'S' (Single Byte) but the data in the Declined Services Labor Operation Code Description field at positions 660-915 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./DeclinedServOpCodeDesc[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./DeclinedServOpCodeDesc[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_53="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 9 field at positions 171-185 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription09[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription09[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_54="The Sublet Misc. Amount #10 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount10[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_55="MultiByte characters are not allowed in the Declined Services Labor Operation Code field of the Repair Order Service Record.?not(./DeclinedServOpCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./DeclinedServOpCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_56="The Sublet Misc. Amount #3 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount03[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_57="The Sublet / Misc Description #04 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription04)) and ./SubletOrMiscDescription04[matches(.,'^\s.*$')]" printMessage_58="The Sublet Misc. Amount #4 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount04[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_59="The Technician Finishes Job/Sign Out Date (date technician finishes work) in the Repair Order Service Record must not be earlier than the RO Open Date in the Repair Order Header Record.?not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and number(./TechnicianFinishDate) &lt; number(//RepairOrderHeader/ROOpenDate)" printMessage_60="The Sublet Misc. Amount #6 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount06[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_61="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 10 field at positions 186-200 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription10[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription10[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_62="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 5 field at positions 111-125 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription05[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription05[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_63="The Sublet Misc. Amount #5 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount05[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_64="The Technician Starts Job/Sign In Date (date when technician starts work) in the Repair Order Service Record must not be later than the File Date in the File Header Record.?not(./TechnicianStartDate[matches(.,'^0{8}$')]) and number(substring(./TechnicianStartDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_65="The Record Type in the Repair Order Service Record allows '01' value only.?not(./RecordType[matches(.,'^01$')])" printMessage_66="The Sublet Misc. Amount #2 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount02[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_67="The Sublet / Misc Description #08 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription08)) and ./SubletOrMiscDescription08[matches(.,'^\s.*$')]" printMessage_68="The Technician Starts Time in the Repair Order Service Record is required if the Technician Start Job/Sign In Date (date when technician starts work) or Technician Finish Job/Sign Out Date (date when technician finishes work) or Technician Finish Time in the Repair Order Service Record is not zero filled.?./TechnicianStartTime[matches(.,'^0{4}$')] and (not(./TechnicianStartDate[matches(.,'^00000000$')]) or not(./TechnicianFinishDate[matches(.,'^00000000$')]) or not(./TechnicianFinishTime[matches(.,'^0000$')]))" printMessage_69="The Multibyte Indicator is 'S' (Single Byte) but the data in the Labor Description field at positions 341-596 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LaborDescription/LaborDescriptionText[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LaborDescription/LaborDescriptionText[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_70="The Technician Finishes Time in the Repair Order Service Record is required if the Technician Start Job/Sign In Date (date when technician starts work) or Technician Start Time or Technician Finish Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record is not zero filled.?./TechnicianFinishTime[matches(.,'^0{4}$')] and (not(./TechnicianStartDate[matches(.,'^00000000$')]) or not(./TechnicianStartTime[matches(.,'^0000$')]) or not(./TechnicianFinishDate[matches(.,'^00000000$')]))" printMessage_71="The Technician # (SSN OR SIN) in the Repair Order Service Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Technician - STARS ID.?string(normalize-space(./TechnicianSocialID)) and (string(normalize-space(./TechnicianSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))" printMessage_72="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 1 field at positions 51-65 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription01[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription01[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_73="The Multibyte Indicator is 'S' (Single Byte) but the data in the Technician Local ID field at positions 597-606 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./TechnicianLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./TechnicianLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_74="The Repair Type Code (type of customer the service is being performed for) in the Repair Order Service Record is not from the enumerated list ('A', 'C', 'E', 'I', 'U', 'W').?not(./RepairTypeCode[matches(.,'^[ACEIUW]$')])" printMessage_75="The Sublet / Misc Description #07 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription07)) and ./SubletOrMiscDescription07[matches(.,'^\s.*$')]" printMessage_76="The Technician Starts Job/Sign In Date (date technician starts work) in the Repair Order Service Record must not be earlier than the RO Open Date in the Repair Order Header Record.?not(./TechnicianStartDate[matches(.,'^0{8}$')]) and number(./TechnicianStartDate) &lt; number(//RepairOrderHeader/ROOpenDate)" printMessage_77="The Technician Start Job/Sign In Date (date when technician starts work) in the Repair Order Service Record must be a valid date in the format YYYYMMDD.?not(./TechnicianStartDate[matches(.,'^0{8}$')]) and not(./TechnicianStartDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_78="The Technician Finishes Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record is required if the Technician Start Job/Sign In Date (date when technician starts work) or Technician Start Time or Technician Finish Time in the Repair Order Service Record is not zero filled.?./TechnicianFinishDate[matches(.,'^0{8}$')] and (not(./TechnicianStartDate[matches(.,'^00000000$')]) or not(./TechnicianStartTime[matches(.,'^0000$')]) or not(./TechnicianFinishTime[matches(.,'^0000$')]))" printMessage_79="The Sublet / Misc Description #06 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription06)) and ./SubletOrMiscDescription06[matches(.,'^\s.*$')]" printMessage_80="The Technician Starts Job/Sign In Date (date when technician starts work) in the Repair Order Service Record is required if the Technician Start Time or Technician Finish Job/Sign Out Date (date when technician finishes work) or Technician Finish Time in the Repair Order Service Record is not zero filled.?./TechnicianStartDate[matches(.,'^0{8}$')] and (not(./TechnicianStartTime[matches(.,'^0000$')]) or not(./TechnicianFinishDate[matches(.,'^00000000$')]) or not(./TechnicianFinishTime[matches(.,'^0000$')]))" printMessage_81="The Sublet Misc. Amount #1 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SubletOrMiscAmount01[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_82="The Sublet / Misc Description #05 field in the Repair Order Service Record must be left justified with right space fill.?string(normalize-space(./SubletOrMiscDescription05)) and ./SubletOrMiscDescription05[matches(.,'^\s.*$')]" printMessage_83="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 4 field at positions 96-110 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription04[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription04[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_84="The Declined Services Labor Operation Code Description in the Repair Order Service Record is required the if Declined Services Labor Operation Code in the Repair Order Service Record is not empty.?not(string(normalize-space(./DeclinedServOpCodeDesc))) and string(normalize-space(./DeclinedServOpCode))" printMessage_85="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 6 field at positions 126-140 of the Repair Order Service Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription06[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription06[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])">
          <as:Attribute name="awaID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
          <as:Attribute name="bundledlaborID" makeOptional_1="true" makeOptional_2="true" makeNillable_3="xsd" />
          <as:Attribute name="menupriceID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
          <as:Attribute name="espwarrantydeductible" makeOptional_1="true" makeOptional_2="true" makeNillable_3="xsd" />
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SequenceNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RepairTypeCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TechnicianSocialID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="ServicingDepartmentCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="LaborOperationCode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LaborChargeAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="BilledHours" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription01" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription02" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription03" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription04" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription05" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SubletOrMiscDescription06" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription07" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SubletOrMiscDescription08" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription09" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscDescription10" makeNillable_1="xsd" />
          <as:Element name="SubletOrMiscAmount01" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscAmount02" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SubletOrMiscAmount03" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SubletOrMiscAmount04" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SubletOrMiscAmount05" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscAmount06" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SubletOrMiscAmount07" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscAmount08" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscAmount09" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubletOrMiscAmount10" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="LaborDescription" printMessage_1=" The RepairOrderService AWA split between ford dealer and customer does not total 100%.?(number(normalize-space(./AWAFordPercentage)) + number(normalize-space(./AWADealerPercentage)) + number(normalize-space(./AWACustomerPercentage))!=100) and string(normalize-space(./IsAWASplit))='1'" printMessage_2=" The AWA Labor Description is missing SPLIT NN-NN-NN wording?not(./LaborDescriptionText[matches(.,'.*SPLIT.\d\d-\d\d-\d\d.*')]) and string(normalize-space(./IsAWASplit))='1'" makeNillable_3="xsd" makeOptional_4="true">
            <as:Element name="IsAWASplit" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AWAFordPercentage" makeNillable_1="true" makeOptional_2="true" makeNillable_3="xsd" />
            <as:Element name="AWADealerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" />
            <as:Element name="AWACustomerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" />
            <as:Element name="LaborDescriptionText" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="TechnicianLocalID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="TechnicianSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TechnicianStartDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TechnicianStartTime" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="TechnicianFinishDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TechnicianFinishTime" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="DeclinedServOpCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="DeclinedServOpCodeDesc" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL16-3" makeOptional_1="true" makeNillable_2="xsd" />
        </as:Element>
        <as:Element name="RepairOrderPart" printMessage_1="The Part Person - STARS ID or Part Person - Local ID in the Repair Order Part Record must be not empty.?not(string(normalize-space(./CounterPersonSTARSID))) and not(string(normalize-space(./CounterPersonLocalID)))" printMessage_2="RO Part Kit: Part Kit lines can not have a quantity equal to 0.?number(./Quantity) = 0 and normalize-space(./@partskitID)" printMessage_3="Part Sale Price is Negative. For a Part Return the Part Quantity should also be Negative. If this is not a Part Return the Part Sale Price should be positive.?number(./Quantity) &gt; 0 and number(./SaleAmount) &lt; 0" printMessage_4="The Part Description field in the Repair Order Part Record must be left justified with right space fill.?normalize-space(./Description/DescriptionText) and ./Description/DescriptionText[matches(.,'^\s.*$')]" printMessage_5="The Part Person - Local ID field in the Repair Order Part Record must be left justified with right space fill.?string(normalize-space(./CounterPersonLocalID)) and ./CounterPersonLocalID[matches(.,'^\s.*$')]" printMessage_6="Part Kit: The Dealer Part Cost for the Part Kit should always be 0. All costs should be listed next to each part in the kit.?number(//RepairOrderPart[1]/DealerCostAmount) &gt; 0 and normalize-space(./@partskitID)" printMessage_7="The Part Quantity in the Repair Order Part Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./Quantity[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_8="The Part Causal Indicator in the Repair Order Part Record must be alpha-numeric.?string(normalize-space(./CausalCode)) and not(./CausalCode[matches(normalize-space(.),'^[a-zA-Z0-9]{1,2}$')])" printMessage_9="MultiByte characters are not allowed in the Part Suffix field of the Repair Order Part Record.?not(./PartNumberSuffix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberSuffix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_10="The Record Type in the Repair Order Part Record allows '02' value only.?not(./RecordType[matches(.,'^02$')])" printMessage_11="If Part Suffix is sent in the Repair Order Part Record the Part Base is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))" printMessage_12="The Dealer Part Cost (dealer cost for a single part) in the Repair Order Part Record is invalid. Only positive numerals are allowed.?not(./DealerCostAmount[matches(.,'^[0-9]{14}$')])" printMessage_13="Part Quantity is Negative. For a Part Return the Part Sale Price should also be Negative. If this is not a Part Return the Part Quantity should be positive.?number(./Quantity) &lt; 0 and number(./SaleAmount) &gt; 0" printMessage_14="The Part Person # (SSN OR SIN) in the Repair Order Part Record is required and should be numeric only.?not(./CounterPersonSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./CounterPersonSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]" printMessage_15="MultiByte characters are not allowed in the Part Base field of the Repair Order Part Record.?not(./PartNumberBase[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberBase[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_16="The Part Person # (SSN OR SIN) in the Repair Order Part Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Part Person - STARS ID.?string(normalize-space(./CounterPersonSocialID)) and (string(normalize-space(./CounterPersonSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))" printMessage_17="Part Kit: The Part Sale Price for the Part Kit should always be 0. All pricing should be listed next to each part in the kit.?number(//RepairOrderPart[1]/SaleAmount) &gt; 0 and normalize-space(./@partskitID)" printMessage_18="WARNING: The Part Sale Price should be greater than or equal to the Dealer Part Cost.?not(abs(./SaleAmount) &gt; (abs(./DealerCostAmount) - 1))" printMessage_19="The Time Part Added To RO (time when part added to repair order) in the Repair Order Part Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?not(./ROPartAddTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_20="The Part Prefix field in the Repair Order Part Record must be right justified with left space fill.?string(normalize-space(./PartNumberPrefix)) and ./PartNumberPrefix[matches(.,'^.*\s$')]" printMessage_21="Parts Prefix Part Base and Part Suffix in the Repair Order Part Record are all empty. A Part Number is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))" printMessage_22="The Date Part Added To RO (date when part added to repair order) in the Repair Order Part Record must be a valid date in the format YYYYMMDD.?not(./ROPartAddDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_23="The Part Causal Indicator field in the Repair Order Part Record must be left justified with right space fill.?string(normalize-space(./CausalCode)) and ./CausalCode[matches(.,'^\s.*$')]" printMessage_24="The Part Person - STARS ID in the Repair Order Part Record allows numerical or spaces filled values only.?not(./CounterPersonSTARSID[matches(.,'^([0-9]{9}|\s*)$')])" printMessage_25="Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be earlier than the Date Appointment Initiated in the Repair Order Header Record.?number(./ROPartAddDate) &lt; number(//RepairOrderHeader/AppointmentInitiatedDate)" printMessage_26="The Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be later than the File Date in the File Header Record.?number(substring(./ROPartAddDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_27="The Part Sale Price (extended part price) in the Repair Order Part Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleAmount[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_28="Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be earlier than the RO Open Date in the Repair Order Header Record.?number(./ROPartAddDate) &lt; number(//RepairOrderHeader/ROOpenDate)" printMessage_29="The Part Person - National ID in the Repair Order Part Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.?string(normalize-space(./CounterPersonNationalID)) and (./CounterPersonNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!&gt;|}{()]')] or contains(./CounterPersonNationalID,'[') or contains(./CounterPersonNationalID,']'))" printMessage_30="The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Person - Local ID field at positions 118-127 of the Repair Order Part Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CounterPersonLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CounterPersonLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_31="Parts Kit: All Parts Kits must have at least 2 parts included in the kit to be listed with the Part Kit Number shown in the first Repair Order Part record marked Part Kit.?count(//RepairOrderPart/@partskitID) = 1 or count(//RepairOrderPart/@partskitID) = 2" printMessage_32="MultiByte characters are not allowed in the Part Prefix field of the Repair Order Part Record.?not(./PartNumberPrefix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberPrefix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_33="If Parts Prefix and Part Suffix are sent in the Repair Order Part Record the Part Base is required.?string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))" printMessage_34="The Dealer Part Cost in the Repair Order Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the Repair Order Part Record has a value.?(not(./@lineNumber = //RepairOrderPart[1]/@lineNumber) or not(normalize-space(./@partskitID))) and ./DealerCostAmount[matches(.,'^0{14}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))" printMessage_35="The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Description field at positions 60-109 of the Repair Order Part Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./Description/DescriptionText[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Description/DescriptionText[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_36="The Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be later than the RO Close Date in the Repair Order Header Record.?number(./ROPartAddDate) &gt; number(//RepairOrderHeader/ROCloseDate)" printMessage_37="The Part Base field in the Repair Order Part Record must be right justified with left space fill.?string(normalize-space(./PartNumberBase)) and ./PartNumberBase[matches(.,'^.*\s$')]" printMessage_38="The Part Suffix field in the Repair Order Part Record must be right justified with left space fill.?string(normalize-space(./PartNumberSuffix)) and ./PartNumberSuffix[matches(.,'^.*\s$')]" printMessage_39="The Part Quantity in the Repair Order Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the Repair Order Part Record has a value.?(./@lineNumber = //RepairOrderPart[1]/@lineNumber or not(normalize-space(./@awaID))) and ./Quantity[matches(.,'^0{7}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))" makeRepeatable="//RepairOrderPart" makeOptional_41="true">
          <as:Attribute name="awaID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
          <as:Attribute name="bundledlaborID" makeOptional_1="true" makeOptional_2="true" makeNillable_3="xsd" />
          <as:Attribute name="partcoresaleID" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
          <as:Attribute name="partsreturn" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
          <as:Attribute name="partskitID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
          <as:Attribute name="menupriceID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Quantity" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DealerCostAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Description" makeOptional_1="true" makeNillable_2="xsd" printMessage_3=" The AWA Part Description is missing SPLIT NN-NN-NN wording?not(./DescriptionText[matches(.,'.*SPLIT.\d\d-\d\d-\d\d.*')]) and string(normalize-space(./IsAWASplit))='1'" printMessage_4=" The RepairOrderPart AWA split between ford dealer and customer does not total 100%.?(number(normalize-space(./AWAFordPercentage)) + number(normalize-space(./AWADealerPercentage)) + number(normalize-space(./AWACustomerPercentage))!=100) and string(normalize-space(./IsAWASplit))='1'">
            <as:Element name="IsAWASplit" makeNillable_1="xsd" makeOptional_2="true" />
            <as:Element name="AWAFordPercentage" makeOptional_1="true" makeNillable_2="true" makeOptional_3="true" makeNillable_4="xsd" />
            <as:Element name="AWADealerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" makeOptional_4="true" />
            <as:Element name="AWACustomerPercentage" makeOptional_1="true" makeNillable_2="true" makeNillable_3="xsd" makeOptional_4="true" />
            <as:Element name="DescriptionText" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="CausalCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CounterPersonSocialID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CounterPersonLocalID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CounterPersonSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ROPartAddDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ROPartAddTime" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL16-4" makeOptional_1="true" makeNillable_2="xsd" />
        </as:Element>
        <as:Element name="OTCPartInvoiceHeader" makeRepeatable="//OTCPartInvoiceHeader" makeOptional_2="true" printMessage_3="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 187-266 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_4="The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 267-296 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_5="The State/Province field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]" printMessage_6="The Zip / Postal Code field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]" printMessage_7="The Sale Type in the OTC Header Record is not from the enumerated list ('E', 'P', 'W', 'Q').?not(./SaleType[matches(normalize-space(.),'^[EPWQ]$')])" printMessage_8="WARNING: The Corporate Express/Opt In/Email 2 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email2)))" printMessage_9="The Dealer Permission/Opt In/Email 1 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])" printMessage_10="The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Person - Local ID field at positions 383-392 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CounterPersonLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CounterPersonLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_11="The Home Phone field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]" printMessage_12="WARNING: The Corporate Express/Opt In/Email 3 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email3)))" printMessage_13="The Customer Identification Code field in the OTC Header Record must be right justified with left space fill.?string(normalize-space(./CustomerTaxID)) and ./CustomerTaxID[matches(.,'^.*\s$')]" printMessage_14="The Customer Country Code in the OTC Header Record must be upper case alpha and from the ISO 3166-1 alpha-3 list or space filled.?string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])" printMessage_15="The Part Person - STARS ID or Part Person - Local ID in the OTC Header Record must be not empty.?not(string(normalize-space(./CounterPersonSTARSID))) and not(string(normalize-space(./CounterPersonLocalID)))" printMessage_16="The Corporate Express/Opt In/Work Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])" printMessage_17="The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 726-755 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_18="The Customer Number field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CustomerNumber)) and ./CustomerNumber[matches(.,'^\s.*$')]" printMessage_19="WARNING: The Dealer Permission/Opt In/Mail in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Mail)))" printMessage_20="The Part Person - STARS ID in the OTC Header Record allows numerical or spaces filled values only.?not(./CounterPersonSTARSID[matches(.,'^([0-9]{9}|\s*)$')])" printMessage_21="The Record Type in the OTC Header Record allows 'P1' value only.?not(./RecordType[matches(.,'^P1$')])" printMessage_22="The Part Person - National ID in the OTC Header Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.?string(normalize-space(./CounterPersonNationalID)) and (./CounterPersonNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!&gt;|}{()]')] or contains(./CounterPersonNationalID,'[') or contains(./CounterPersonNationalID,']'))" printMessage_23="The Corporate Express/Opt In/Email 1 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])" printMessage_24="The Part Person # (SSN OR SIN) in the OTC Header Record is required and should be numeric only.?not(./CounterPersonSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./CounterPersonSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]" printMessage_25="The Address 2 field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]" printMessage_26="The Shipping Amount (amount charged for transporting the part to the customer)  in the OTC Header Record is invalid. Only numerals are allowed or a '-' in the first position.?string(normalize-space(./ShippingAmount)) and not(./ShippingAmount[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_27="The Customer Email 3 in the OTC Header Record must be a valid email address.?string(normalize-space(./CustomerEmail3)) and not(./CustomerEmail3[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])" printMessage_28="WARNING: The Corporate Express/Opt In/Email 1 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email1)))" printMessage_29="WARNING: The Dealer Permission/Opt In/Business Email in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-BusEmail)))" printMessage_30="The Invoice Number in the OTC Header Record was either empty or all zeros. An Invoice Number is required.?not(string(normalize-space(./InvoiceNumber)))" printMessage_31="The Home Phone in the OTC Header Record should be numeric only. Do NOT fill in extra spaces with zeros.?not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_32="The Corporate Express/Opt In/Email 2 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])" printMessage_33="The Title field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]" printMessage_34="WARNING: The Corporate Express/Opt In/MMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-MMS)))" printMessage_35="The Customer Identification Code in the OTC Header Record was empty. This field is required if the Parts Customer Type Code is either 'D' 'F' 'G' or 'W'.?not(string(normalize-space(./CustomerTaxID))) and ./CustomerTypeCode[matches(.,'^[DFGW]$')]" printMessage_36="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 956-1055 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_37="The Cell Phone in the OTC Header Invoice Record should be numeric only. Do NOT fill in extra spaces with zeros.?not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_38="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 646-725 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_39="The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 402-431 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_40="The Company Description field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]" printMessage_41="The Customer Email 2 field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]" printMessage_42="WARNING: The Dealer Permission/Opt In/SMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-SMS)))" printMessage_43="WARNING: The Dealer Permission/Opt In/Email 3 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email3)))" printMessage_44="The Customer Email 3 field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]" printMessage_45="WARNING: The Dealer Permission/Opt In/MMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-MMS)))" printMessage_46="The Customer Email 2 in the OTC Header Record must be a valid email address.?string(normalize-space(./CustomerEmail2)) and not(./CustomerEmail2[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])" printMessage_47="MultiByte characters are not allowed in the Invoice Number field of the OTC Header Record.?not(./InvoiceNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./InvoiceNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_48="The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 433-437 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_49="The Multibyte Indicator is 'S' (Single Byte) but the data in the State / Province field at positions 297-326 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_50="WARNING: The Dealer Permission/Opt In/Email 1 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email1)))" printMessage_51="The Loyalty Program Member Number field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]" printMessage_52="The Corporate Express/Opt In/Email 3 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])" printMessage_53="The Dealer Permission/Opt In/Home Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])" printMessage_54="MultiByte Characters are not allowed in the Customer Identification Code field of the OTC Header record.?not(./CustomerTaxID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerTaxID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_55="The Work Phone in the OTC Header Record should be numeric only. Do NOT fill in extra spaces with zeros.?not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_56="The Customer Email field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail)) and ./CustomerEmail[matches(.,'^\s.*$')]" printMessage_57="The Invoice Number field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./InvoiceNumber)) and ./InvoiceNumber[matches(.,'^\s.*$')]" printMessage_58="The Corporate Express/Opt In/Home Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])" printMessage_59="The Address 3 field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]" printMessage_60="The Cell Phone field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]" printMessage_61="The Dealer Permission/Opt In/Cell Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])" printMessage_62="The Sale Type Description field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./SaleTypeDescription)) and ./SaleTypeDescription[matches(.,'^\s.*$')]" printMessage_63="The Parts Customer Type Code (type of customer that purchased the part(s)) in the OTC Header Record is not from the enumerated list ('D', 'F', 'G', 'I', 'R', 'W', 'U', 'B', 'J').?not(./CustomerTypeCode[matches(.,'^[DFGIRWUBJ]$')])" printMessage_64="The Corporate Express/Opt In/Cell Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])" printMessage_65="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sale Type Description field at positions 631-645 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SaleTypeDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SaleTypeDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_66="The Sale Type field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./SaleType)) and ./SaleType[matches(.,'^\s.*$')]" printMessage_67="The Tax Amount (amount as it appears on the Parts Invoice)  in the OTC Header Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./TaxAmount[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_68="The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 756-855 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_69="WARNING: The Corporate Express/Opt In/Work Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-WorkPhone)))" printMessage_70="The Corporate Express/Opt In/Business Email in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])" printMessage_71="WARNING: The Corporate Express/Opt In/Mail in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Mail)))" printMessage_72="The Dealer Permission/Opt In/Mail in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])" printMessage_73="The Work Phone field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]" printMessage_74="The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 432 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_75="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Number field at positions 1076-1085 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_76="WARNING: The Dealer Permission/Opt In/Cell Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-CellPhone)))" printMessage_77="The State/Province in the OTC Header Record must not contain numbers.?./StateOrProvince[matches(.,'[0-9]')]" printMessage_78="The Part Person - STARS ID field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CounterPersonSTARSID)) and ./CounterPersonSTARSID[matches(.,'^\s.*$')]" printMessage_79="The Part Sale Invoice Date (date invoice was opened) in the OTC Header Record must not be greater than the File Date.?number(substring(./InvoiceDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_80="WARNING: The Dealer Permission/Opt In/Work Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))" printMessage_81="The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1056-1075 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LoyaltyProgramMemberNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_82="MultiByte characters are not allowed in the Zip / Postal Code field of the OTC Header Record.?not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_83="The First Name field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]" printMessage_84="WARNING: The Dealer Permission/Opt In/Home Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-HomePhone)))" printMessage_85="WARNING: The Corporate Express/Opt In/Business Email in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-BusEmail)))" printMessage_86="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 107-186 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_87="The Last Name field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]" printMessage_88="The Corporate Express/Opt In/MMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])" printMessage_89="The Dealer Permission/Opt In/Email 3 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])" printMessage_90="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email field at positions 501-600 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_91="The Discount Amount (sum of all discounts for the invoice.)  in the OTC Header Record is invalid. Only numerals are allowed or a '-' in the first position.?string(normalize-space(./DiscountAmount)) and not(./DiscountAmount[matches(.,'^[-0-9][0-9]{13}$')])" printMessage_92="The City field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]" printMessage_93="The Part Person # (SSN OR SIN) in the OTC Header Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Part Person - STARS ID.?string(normalize-space(./CounterPersonSocialID)) and (string(normalize-space(./CounterPersonSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))" printMessage_94="The Business Email field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]" printMessage_95="The Dealer Permission/Opt In/SMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])" printMessage_96="The Business Email in the OTC Header Record must be a valid email address.?string(normalize-space(./BusinessEmail)) and not(./BusinessEmail[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])" printMessage_97="WARNING: The Dealer Permission/Opt In/Email 2 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email2)))" printMessage_98="The Dealer Permission/Opt In/Work Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])" printMessage_99="The Dealer Permission/Opt In/Email 2 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])" printMessage_100="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 856-955 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_101="The Part Sale Invoice Date (date invoice was opened) in the OTC Header Record must be a valid date in the format YYYYMMDD.?not(./InvoiceDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_102="WARNING: The Corporate Express/Opt In/Cell Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-CellPhone)))" printMessage_103="WARNING: The Corporate Express/Opt In/Home Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-HomePhone)))" printMessage_104="The Part Person - Local ID field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./CounterPersonLocalID)) and ./CounterPersonLocalID[matches(.,'^\s.*$')]" printMessage_105="The Dealer Permission/Opt In/Business Email in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])" printMessage_106="The Middle Initial in the OTC Header Record must be an alpha or multibyte character.?./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!&gt;|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)" printMessage_107="The Customer Email in the OTC Header Record must be a valid email address.?string(normalize-space(./CustomerEmail)) and not(./CustomerEmail[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])" printMessage_108="The Corporate Express/Opt In/Mail in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])" printMessage_109="The Dealer Permission/Opt In/MMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])" printMessage_110="The Address 1 field in the OTC Header Record must be left justified with right space fill.?string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]" printMessage_111="WARNING: The Corporate Express/Opt In/SMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-SMS)))" printMessage_112="The City in the OTC Header Record must not contain numbers.?./City[matches(.,'[0-9]')]" printMessage_113="The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 27-106 of the OTC Header Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_114="The Corporate Express/Opt In/SMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="InvoiceNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="InvoiceDate" makeNillable_1="xsd" makeOptional_2="true">
            <as:Attribute name="truncInvoiceDate" makeNillable_1="xsd" makeOptional_2="true" />
          </as:Element>
          <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerTypeCode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerTaxID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TaxAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CounterPersonSocialID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CounterPersonLocalID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CounterPersonSTARSID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="DiscountAmount" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ShippingAmount" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleType" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleTypeDescription" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerNumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL16-5" makeNillable_1="xsd" makeOptional_2="true" />
        </as:Element>
        <as:Element name="OTCPartsInvoicePart" makeRepeatable="//OTCPartsInvoicePart" makeOptional_2="true" printMessage_3="MultiByte characters are not allowed in the Part Base field of the OTC Part Record.?not(./PartNumberBase[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberBase[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_4="The Part Quantity in the OTC Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the OTC Part Record has a value.?./Quantity[matches(.,'^0{7}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))" printMessage_5="Parts Prefix Part Base and Part Suffix in the OTC Part Record are all empty. A Part Number is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))" printMessage_6="The Part Quantity (quantity of parts as it appears on the OTC Invoice)  in the OTC Part Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./Quantity[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_7="The Part Suffix field in the OTC Part Record must be right justified with left space fill.?string(normalize-space(./PartNumberSuffix)) and ./PartNumberSuffix[matches(.,'^.*\s$')]" printMessage_8="The Part Prefix field in the OTC Part Record must be right justified with left space fill.?string(normalize-space(./PartNumberPrefix)) and ./PartNumberPrefix[matches(.,'^.*\s$')]" printMessage_9="The Part Base field in the OTC Part Record must be right justified with left space fill.?string(normalize-space(./PartNumberBase)) and ./PartNumberBase[matches(.,'^.*\s$')]" printMessage_10="WARNING: The Part Sale Price should be greater than or equal to the Part Sale Dealer Cost.?not(abs(./SaleAmount) &gt; (abs(./DealerCostAmount) - 1))" printMessage_11="If Part Suffix is sent in the OTC Part Record the Part Base is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))" printMessage_12="The Dealer Cost Amount (dealer net cost) in the OTC Part Record is invalid. Only positive numerals are allowed.?not(./DealerCostAmount[matches(.,'^[0-9]{14}$')])" printMessage_13="The Part Description field in the OTC Part Record must be left justified with right space fill.?string(normalize-space(./Description)) and ./Description[matches(.,'^\s.*$')]" printMessage_14="The Part Sale Dealer Cost in the OTC Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the OTC Part Record has a value.?(not(./@lineNumber = //OTCPartsInvoicePart[1]/@lineNumber) or not(normalize-space(./@partskitID))) and ./DealerCostAmount[matches(.,'^0{14}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))" printMessage_15="OTC Part Kit: Part Kit lines can not have a quantiy equal to 0.?normalize-space(./@partskitID) and number(./Quantity) = 0" printMessage_16="MultiByte characters are not allowed in the Part Suffix field of the OTC Part Record.?not(./PartNumberSuffix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberSuffix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_17="If Parts Prefix and Part Suffix are sent in the OTC Part Record the Part Base is required.?string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))" printMessage_18="The Record Type in the OTC Parts Invoice Part allows '03' value only.?not(./RecordType[matches(.,'^03$')])" printMessage_19="Part Kit: The Part Sale Price for the Part Kit should always be 0. All pricing should be listed next to each part in the kit.?normalize-space(./@partskitID) and number(//OTCPartsInvoicePart[1]/SaleAmount) &gt; 0" printMessage_20="The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Description field at positions 60-109 of the OTC Part Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./Description[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Description[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_21="The Sale Amount (actual unit sale price charged for a single part as it appears on the invoice) in the OTC Part Record is invalid. Only positive numerals are allowed.?not(./SaleAmount[matches(.,'^[0-9]{14}$')])" printMessage_22="MultiByte characters are not allowed in the Part Prefix field of the OTC Part Record.?not(./PartNumberPrefix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberPrefix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_23="Parts Kit: All Parts Kits must have at least 2 parts included in the kit to be listed with the Part Kit Number shown in the first Repair Order Part record marked Part Kit.?count(//OTCPartsInvoicePart/@partskitID) = 1 or count(//OTCPartsInvoicePart/@partskitID) = 2" printMessage_24="Part Kit: The Dealer Part Cost for the Part Kit should always be 0. All costs should be listed next to each part in the kit.?normalize-space(./@partskitID) and number(//OTCPartsInvoicePart[1]/DealerCostAmount) &gt; 0">
          <as:Attribute name="partcoresaleID" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
          <as:Attribute name="partsreturn" makeOptional_1="true" makeNillable_2="xsd" makeOptional_3="true" />
          <as:Attribute name="partskitID" makeNillable_1="xsd" makeOptional_2="true" makeOptional_3="true" />
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Quantity" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DealerCostAmount" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Description" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL16-6" makeOptional_1="true" makeNillable_2="xsd" />
        </as:Element>
        <as:Element name="PartsInventory" makeRepeatable="//PartsInventory" makeOptional_2="true" printMessage_3="The Dealer Landed Cost (Extended) in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./DealerExtendedCost[matches(.,'^[0-9]{14}$')])" printMessage_4="MultiByte characters are not allowed in the Part Prefix field of the Parts Inventory Record.?not(./PartNumberPrefix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberPrefix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_5="The Quantity Sold Current Month in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-0[matches(.,'^[0-9]{7}$')])" printMessage_6="The Daily Quantity Adjustment (Not Sale) in the Parts Inventory Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./QuantityAdjustment[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_7="The Monthly Quantity Sold 6 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-6[matches(.,'^[0-9]{7}$')])" printMessage_8="The Quantity (count of this part at the end of the daily processing)  in the Parts Inventory Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./Quantity[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_9="The Monthly Quantity Sold 11 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-11[matches(.,'^[0-9]{7}$')])" printMessage_10="The Monthly Quantity Sold 10 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-10[matches(.,'^[0-9]{7}$')])" printMessage_11="The Daily Inbound Quantity in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./DailyInboundQuantity[matches(.,'^[0-9]{7}$')])" printMessage_12="The Monthly Quantity Sold 2 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-2[matches(.,'^[0-9]{7}$')])" printMessage_13="The Quantity Date (date the quantity is being reported for) in the Parts Inventory Record must be a valid date in the format YYYYMMDD.?not(./QuantityDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_14="The Date Of Last Sale (date part last sold) in the Parts Inventory Record must not be later than the File Date in the File Header Record.?not(./DateLastSale[matches(.,'^0{8}$')]) and number(substring(./DateLastSale, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_15="The Packed Service Part Number field in the Parts Inventory Record must be left justified with right space fill.?string(normalize-space(./PackedServicePartNumber)) and ./PackedServicePartNumber[matches(.,'^\s.*$')]" printMessage_16="The Monthly Quantity Sold 8 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-8[matches(.,'^[0-9]{7}$')])" printMessage_17="The Date Of Last Sale (date part last sold) in the Parts Inventory Record must be a valid date in the format YYYYMMDD.?not(./DateLastSale[matches(.,'^0{8}$')]) and not(./DateLastSale[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_18="The Daily Outbound Quantity in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./DailyOutboundQuantity[matches(.,'^[0-9]{7}$')])" printMessage_19="The Quantity Date (date the quantity is being reported for) in the Parts Inventory Record must not be greater than the File Date.?number(substring(./QuantityDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_20="The Part Base field in the Parts Inventory Record must be right justified with left space fill.?string(normalize-space(./PartNumberBase)) and ./PartNumberBase[matches(.,'^.*\s$')]" printMessage_21="The Record Type in the Parts Inventory Record allows 'IN' value only.?not(./RecordType[matches(.,'^IN$')])" printMessage_22="If Part Suffix is sent in the Parts Inventory Record the Part Base is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))" printMessage_23="MultiByte characters are not allowed in the Part Base field of the Parts Inventory Record.?not(./PartNumberBase[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberBase[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_24="The Best Stocking Level in the Parts Inventory Record allows positive numeric values only.?not(./BestStockingLevel[matches(.,'^[0-9]{7}$')])" printMessage_25="The Monthly Quantity Sold 4 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-4[matches(.,'^[0-9]{7}$')])" printMessage_26="The Daily Quantity Adjustment Type in the Parts Inventory Record is invalid. Only 'LOSS' 'OTHER' 'POPP' 'SCRAP' 'UNKNOWN' values are allowed.?string(normalize-space(./QuantityAdjustmentType)) and not(./QuantityAdjustmentType[matches(normalize-space(.),'^(LOSS|OTHER|POPP|SCRAP|UNKNOWN)$')])" printMessage_27="The Monthly Quantity Sold 3 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-3[matches(.,'^[0-9]{7}$')])" printMessage_28="The Monthly Quantity Sold 12 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-12[matches(.,'^[0-9]{7}$')])" printMessage_29="The Date of Last Sale (date the part was last sold) in the Parts Inventory Record must not be greater than the Quantity Date in the Parts Inventory Record.?number(./DateLastSale) &gt; number(./QuantityDate)" printMessage_30="The Part Suffix field in the Parts Inventory Record must be right justified with left space fill.?string(normalize-space(./PartNumberSuffix)) and ./PartNumberSuffix[matches(.,'^.*\s$')]" printMessage_31="The Monthly Quantity Sold Last Month in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-1[matches(.,'^[0-9]{7}$')])" printMessage_32="The Part Prefix field in the Parts Inventory Record must be right justified with left space fill.?string(normalize-space(./PartNumberPrefix)) and ./PartNumberPrefix[matches(.,'^.*\s$')]" printMessage_33="The Monthly Quantity Sold 5 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-5[matches(.,'^[0-9]{7}$')])" printMessage_34="The Part Stocking Indicator in the Parts Inventory Record is not from the enumerated list ('Y', 'N', 'U').?not(./PartStockingIndicator[matches(.,'^[YNU]$')])" printMessage_35="The Daily Quantity Adjustment Type in the Parts Inventory Record is required if the Daily Quantity Adjustment (Not Sale) in the Parts Inventory Record is not zero.?not(string(normalize-space(./QuantityAdjustmentType))) and not(./QuantityAdjustment[matches(.,'^0{7}$')])" printMessage_36="Parts Prefix Part Base and Part Suffix in the Parts Inventory Record are all empty. A Part Number is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))" printMessage_37="MultiByte characters are not allowed in the Part Suffix field of the Parts Inventory Record.?not(./PartNumberSuffix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberSuffix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_38="The Packed Service Part Number in the Parts Inventory Record is invalid (it cannot have dashes, spaces or multiByte characters).?not(./PackedServicePartNumber[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{()\]\[`~&amp;&quot;&lt;]*$')]) or ./PackedServicePartNumber[matches(normalize-space(.),'[-\s]')]" printMessage_39="The Monthly Quantity Sold 9 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-9[matches(.,'^[0-9]{7}$')])" printMessage_40="The Monthly Quantity Sold 7 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.?not(./SaleQuantityCurrentMonth-7[matches(.,'^[0-9]{7}$')])" printMessage_41="The Daily Quantity Adjustment (Not Sale) in the Parts Inventory Record is required if the Daily Quantity Adjustment Type in the Parts Inventory Record is not empty.?./QuantityAdjustment[matches(.,'^0{7}$')] and string(normalize-space(./QuantityAdjustmentType))" printMessage_42="If Parts Prefix and Part Suffix are sent in the Parts Inventory Record the Part Base is required.?string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="QuantityDate" makeOptional_1="true" makeNillable_2="xsd">
            <as:Attribute name="truncInventoryDate" makeOptional_1="true" makeNillable_2="xsd" />
          </as:Element>
          <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="PackedServicePartNumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartStockingIndicator" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="BestStockingLevel" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Quantity" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DealerExtendedCost" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DailyInboundQuantity" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DailyOutboundQuantity" makeMandatory="true" />
          <as:Element name="QuantityAdjustment" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="QuantityAdjustmentType" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="DateLastSale" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-0" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-4" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-5" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-6" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-7" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-8" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-9" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-10" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-11" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-12" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL16-7" makeNillable_1="xsd" makeOptional_2="true" />
        </as:Element>
        <as:Element name="ServiceAppointments" makeOptional_1="true" makeRepeatable="//ServiceAppointments" printMessage_3="The Appointment Scheduler - STARS ID field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./AppointmentSchedulerSTARSID)) and ./AppointmentSchedulerSTARSID[matches(.,'^\s.*$')]" printMessage_4="The VIN field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./VIN)) and ./VIN[matches(.,'^\s.*$')]" printMessage_5="The Corporate Express/Opt In/Email 2 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])" printMessage_6="The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 1399-1498 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_7="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 1 field at positions 629-728 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_8="The Customer Email 2 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]" printMessage_9="The Time Of Appointment in the Service Appointment Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).?not(./TimeOfAppointment[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])" printMessage_10="WARNING: The Corporate Express/Opt In/Business Email in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-BusEmail)))" printMessage_11="The Customer Email 3 in the Service Appointment Record must be a valid email address.?string(normalize-space(./CustomerEmail3)) and (not(./CustomerEmail3[matches(normalize-space(.),'@')]) or not(./CustomerEmail3[matches(normalize-space(.),'\.')]))" printMessage_12="The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1349-1368 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LoyaltyProgramMemberNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_13="The Customer Selected Svc Appt Repair Labor Operation Code #5 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedLOP5)) and ./CustomerSelectedLOP5[matches(.,'^\s.*$')]" printMessage_14="WARNING: The Dealer Permission/Opt In/Email 2 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email2)))" printMessage_15="WARNING: The Corporate Express/Opt In/Home Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-HomePhone)))" printMessage_16="The Dealer Permission/Opt In/Email 3 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])" printMessage_17="The Address 3 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]" printMessage_18="The Dealer Permission/Opt In/Cell Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])" printMessage_19="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #4 field at positions 1219-1248 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair4[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair4[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_20="The Customer Selected Svc Appt Repair Labor Operation Code #1 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedLOP1)) and ./CustomerSelectedLOP1[matches(.,'^\s.*$')]" printMessage_21="The Cell Phone field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]" printMessage_22="MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #3 field of the Service Appointment Record.?not(./CustomerSelectedLOP3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_23="The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 130-159 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_24="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 326-405 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_25="The Dealer Permission/Opt In/Work Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])" printMessage_26="The Odometer Indicator (miles or kilometer) in the Service Appointment Record must be either M or K.?not(./OdometerIndicator[matches(.,'^[KM]$')])" printMessage_27="WARNING: The Corporate Express/Opt In/MMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-MMS)))" printMessage_28="The Customer Email 1 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail1)) and ./CustomerEmail1[matches(.,'^\s.*$')]" printMessage_29="The Appointment Scheduler # (SSN OR SIN) in the Service Appointment Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Appointment Scheduler - STARS ID.?string(normalize-space(./AppointmentSchedulerSocialID)) and (string(normalize-space(./AppointmentSchedulerSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))" printMessage_30="The Customer Selected Svc Appt Repair Amount #3 in the Service Appointment Record is invalid. Only positive numerals are allowed.?string(normalize-space(./CustomerSelectedRepairAmount3)) and not(./CustomerSelectedRepairAmount3[matches(.,'^[0-9]{14}$')])" printMessage_31="The VIN in the Service Appointment Record should be alpha-numeric only.?not(./VIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])" printMessage_32="The Customer Selected Svc Appt Repair #4 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #4 has data or the Customer Selected Svc Appt Repair Amount #4 is not zero.?not(string(normalize-space(./CustomerSelectedRepair4))) and (string(normalize-space(./CustomerSelectedLOP4)) or not(./CustomerSelectedRepairAmount4[matches(.,'^0{14}$')]))" printMessage_33="The Multibyte Indicator is 'S' (Single Byte) but the data in the Service Appointment Confirmation Email field at positions 929-1028 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AppointmentConfirmationEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AppointmentConfirmationEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_34="The Customer Selected Svc Appt Repair #5 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #5 has data or the Customer Selected Svc Appt Repair Amount #5 is not zero.?not(string(normalize-space(./CustomerSelectedRepair5))) and (string(normalize-space(./CustomerSelectedLOP5)) or not(./CustomerSelectedRepairAmount5[matches(.,'^0{14}$')]))" printMessage_35="The Home Phone field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]" printMessage_36="The Dealer Permission/Opt In/MMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])" printMessage_37="The Work Phone field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]" printMessage_38="The First Name field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]" printMessage_39="WARNING: The Corporate Express/Opt In/Email 1 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email1)))" printMessage_40="MultiByte characters are not allowed in the Vehicle Model field of the Service Appointment Record.?not(./VehicleModel[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./VehicleModel[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_41="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 729-828 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_42="Date Appointment Initiated (date customer contacted dealership for appointment) in the Service Appointment Record must not be later than the File Date in the File Header record or the Date Of Appointment in the Service Appointment Record.?number(./DateAppointmentInitiated) &gt; number(./DateOfAppointment) or number(substring(./DateAppointmentInitiated, 3)) &gt; number(./@currentFileDate)" printMessage_43="The Corporate Express/Opt In/Cell Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])" printMessage_44="The Dealer Permission/Opt In/Home Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])" printMessage_45="The Date Appointment Initiated (date customer contacted dealership for appointment) in the Service Appointment Record must be a valid date in the format YYYYMMDD.?not(./DateAppointmentInitiated[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_46="The Cell Phone in the Service Appointment Record must be numeric only. Do NOT fill in extra spaces with zeros.?not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_47="The Vehicle Make field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./VehicleMake)) and ./VehicleMake[matches(.,'^\s.*$')]" printMessage_48="The Customer Selected Svc Appt Repair #3 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedRepair3)) and ./CustomerSelectedRepair3[matches(.,'^\s.*$')]" printMessage_49="The Customer Email 2 in the Service Appointment Record must be a valid email address.?string(normalize-space(./CustomerEmail2)) and (not(./CustomerEmail2[matches(normalize-space(.),'@')]) or not(./CustomerEmail2[matches(normalize-space(.),'\.')]))" printMessage_50="The FILE CONTROL 16-9 in the Service Appointment Record allows '&gt;' values only.?not(./FILECONTROL16-9[matches(.,'^&gt;$')])" printMessage_51="The Customer Email 1 in the Service Appointment Record must be a valid email address.?string(normalize-space(./CustomerEmail1)) and (not(./CustomerEmail1[matches(normalize-space(.),'@')]) or not(./CustomerEmail1[matches(normalize-space(.),'\.')]))" printMessage_52="The Vehicle Year in the Service Appointment Record must not be greater than Current File Date plus 1 year.?number(substring(./VehicleYear, 3)) &gt; (number(substring(./@currentFileDate, 1, 2)) + 1)" printMessage_53="The Customer Selected Svc Appt Repair Amount #3 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #3 or Customer Selected Repair #3 is not empty.?not(string(normalize-space(./CustomerSelectedRepairAmount3))) and (string(normalize-space(./CustomerSelectedLOP3)) or string(normalize-space(./CustomerSelectedRepair3)))" printMessage_54="WARNING: The Dealer Permission/Opt In/Email 3 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email3)))" printMessage_55="WARNING: The Dealer Permission/Opt In/Home Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-HomePhone)))" printMessage_56="The State/Province in the Service Appointment Record does not allow numeric characters.?./StateOrProvince[matches(.,'[0-9]')]" printMessage_57="MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #2 field of the Service Appointment Record.?not(./CustomerSelectedLOP2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_58="MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #5 field of the Service Appointment Record.?not(./CustomerSelectedLOP5[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP5[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_59="MultiByte characters are not allowed in the Appointment ID field of the Service Appointment Record.?not(./AppointmentID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AppointmentID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_60="The Customer Selected Svc Appt Repair Labor Operation Code #2 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedLOP2)) and ./CustomerSelectedLOP2[matches(.,'^\s.*$')]" printMessage_61="WARNING: The Corporate Express/Opt In/Email 2 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email2)))" printMessage_62="The Address 2 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]" printMessage_63="The Corporate Express/Opt In/SMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])" printMessage_64="The Service Appointment Confirmation Email field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./AppointmentConfirmationEmail)) and ./AppointmentConfirmationEmail[matches(.,'^\s.*$')]" printMessage_65="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #1 field at positions 1129-1158 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_66="WARNING: The Corporate Express/Opt In/Mail in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Mail)))" printMessage_67="The Customer Selected Svc Appt Repair #4 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedRepair4)) and ./CustomerSelectedRepair4[matches(.,'^\s.*$')]" printMessage_68="The Customer Selected Svc Appt Repair Amount #2 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #2 or Customer Selected Repair #2 is not empty.?not(string(normalize-space(./CustomerSelectedRepairAmount2))) and (string(normalize-space(./CustomerSelectedLOP2)) or string(normalize-space(./CustomerSelectedRepair2)))" printMessage_69="The Loyalty Program Member Number field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]" printMessage_70="The Corporate Express/Opt In/Email 1 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])" printMessage_71="The Corporate Express/Opt In/Work Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])" printMessage_72="The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 486-515 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_73="The Customer Email 3 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]" printMessage_74="The Business Email field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]" printMessage_75="The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 160 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_76="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 246-325 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_77="The Appointment Status in the Service Appointment Record is not from the enumerated list ('C', 'K', 'M', 'N', 'U').?not(./AppointmentStatus[matches(.,'^[CKMNU]$')])" printMessage_78="The City in the Service Appointment Record must not contain numbers.?./City[matches(.,'[0-9]')]" printMessage_79="The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 241-245 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_80="The City field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]" printMessage_81="WARNING: The Corporate Express/Opt In/SMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-SMS)))" printMessage_82="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #2 field at positions 1159-1188 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_83="The Customer Selected Svc Appt Repair Amount #2 in the Service Appointment Record is invalid. Only positive numerals are allowed.?string(normalize-space(./CustomerSelectedRepairAmount2)) and not(./CustomerSelectedRepairAmount2[matches(.,'^[0-9]{14}$')])" printMessage_84="The Customer Selected Svc Appt Repair Labor Operation Code #1 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #1 has data or the Customer Selected Svc Appt Repair Amount #1 is not zero.?not(string(normalize-space(./CustomerSelectedLOP1))) and (string(normalize-space(./CustomerSelectedRepair1)) or not(./CustomerSelectedRepairAmount1[matches(.,'^0{14}$')]))" printMessage_85="WARNING: The Corporate Express/Opt In/Email 3 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email3)))" printMessage_86="The Customer Selected Svc Appt Repair Amount #4 in the Service Appointment Record is invalid. Only positive numerals are allowed.?string(normalize-space(./CustomerSelectedRepairAmount4)) and not(./CustomerSelectedRepairAmount4[matches(.,'^[0-9]{14}$')])" printMessage_87="WARNING: The Corporate Express/Opt In/Cell Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-CellPhone)))" printMessage_88="The Customer Country Code in the Service Appointment Record must be upper case alpha and from the ISO 3166-1 alpha-3 list or space filled.?string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])" printMessage_89="The Last Name field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]" printMessage_90="The Dealer Permission/Opt In/Email 2 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])" printMessage_91="WARNING: The Dealer Permission/Opt In/Mail in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Mail)))" printMessage_92="The Customer Selected Svc Appt Repair Amount #5 in the Service Appointment Record is invalid. Only positive numerals are allowed.?string(normalize-space(./CustomerSelectedRepairAmount5)) and not(./CustomerSelectedRepairAmount5[matches(.,'^[0-9]{14}$')])" printMessage_93="The Odometer Reading in the Service Appointment Record allows only positive numerical values.?not(./OdometerReading[matches(.,'^[0-9]{6}$')])" printMessage_94="WARNING: The Dealer Permission/Opt In/MMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-MMS)))" printMessage_95="The Customer Selected Svc Appt Repair Labor Operation Code #4 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedLOP4)) and ./CustomerSelectedLOP4[matches(.,'^\s.*$')]" printMessage_96="MultiByte characters are not allowed in the Zip / Postal Code field of the Service Appointment Record.?not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_97="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 406-485 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_98="WARNING: The Dealer Permission/Opt In/Work Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))" printMessage_99="WARNING: The Dealer Permission/Opt In/SMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-SMS)))" printMessage_100="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #5 field at positions 1249-1278 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair5[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair5[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_101="The Customer Selected Svc Appt Repair Labor Operation Code #2 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #2 has data or the Customer Selected Svc Appt Repair Amount #2 is not zero.?not(string(normalize-space(./CustomerSelectedLOP2))) and (string(normalize-space(./CustomerSelectedRepair2)) or not(./CustomerSelectedRepairAmount2[matches(.,'^0{14}$')]))" printMessage_102="The Customer Selected Svc Appt Repair #1 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #1 has data or the Customer Selected Svc Appt Repair Amount #1 is not zero.?not(string(normalize-space(./CustomerSelectedRepair1))) and (string(normalize-space(./CustomerSelectedLOP1)) or not(./CustomerSelectedRepairAmount1[matches(.,'^0{14}$')]))" printMessage_103="The State/Province field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]" printMessage_104="The Title field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]" printMessage_105="The Appointment Scheduler # (SSN OR SIN) in the Service Appointment Record is required and should be numeric only.?not(./AppointmentSchedulerSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./AppointmentSchedulerSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]" printMessage_106="The Customer Selected Svc Appt Repair Amount #1 in the Service Appointment Record is invalid. Only positive numerals are allowed.?string(normalize-space(./CustomerSelectedRepairAmount1)) and not(./CustomerSelectedRepairAmount1[matches(.,'^[0-9]{14}$')])" printMessage_107="The Company Description field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]" printMessage_108="The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 161-240 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_109="The Corporate Express/Opt In/Home Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])" printMessage_110="The Vehicle Model field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./VehicleModel)) and ./VehicleModel[matches(.,'^\s.*$')]" printMessage_111="The Work Phone in the Service Appointment Record must be numeric only. Do NOT fill in extra spaces with zeros.?not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_112="The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 1369-1398 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_113="The Customer Selected Svc Appt Repair #5 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedRepair5)) and ./CustomerSelectedRepair5[matches(.,'^\s.*$')]" printMessage_114="WARNING: The Dealer Permission/Opt In/Email 1 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email1)))" printMessage_115="The Middle Initial in the Service Appointment Record must be an alpha or multibyte character.?./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!&gt;|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)" printMessage_116="The Corporate Express/Opt In/Email 3 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])" printMessage_117="The Customer Selected Svc Appt Repair Amount #5 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #5 or Customer Selected Repair #5 is not empty.?not(string(normalize-space(./CustomerSelectedRepairAmount5))) and (string(normalize-space(./CustomerSelectedLOP5)) or string(normalize-space(./CustomerSelectedRepair5)))" printMessage_118="The Customer Selected Svc Appt Repair Labor Operation Code #3 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedLOP3)) and ./CustomerSelectedLOP3[matches(.,'^\s.*$')]" printMessage_119="MultiByte characters are not allowed in the Vehicle Make field of the Service Appointment Record.?not(./VehicleMake[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./VehicleMake[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_120="WARNING: The Corporate Express/Opt In/Work Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-WorkPhone)))" printMessage_121="The Appointment Scheduler - STARS ID in the Service Appointment Record should be numeric only.?normalize-space(./AppointmentSchedulerSTARSID) and not(./AppointmentSchedulerSTARSID[matches(.,'^[0-9]*$')])" printMessage_122="The Customer Selected Svc Appt Repair Amount #1 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #1 or Customer Selected Repair #1 is not empty.?not(string(normalize-space(./CustomerSelectedRepairAmount1))) and (string(normalize-space(./CustomerSelectedLOP1)) or string(normalize-space(./CustomerSelectedRepair1)))" printMessage_123="MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #4 field of the Service Appointment Record.?not(./CustomerSelectedLOP4[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP4[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_124="The Dealer Permission/Opt In/SMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])" printMessage_125="WARNING: The Dealer Permission/Opt In/Business Email in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-BusEmail)))" printMessage_126="The Appointment Scheduler Local ID field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./AppointmentSchedulerLocalID)) and ./AppointmentSchedulerLocalID[matches(.,'^\s.*$')]" printMessage_127="The Business Email in the Service Appointment Record must be a valid email address.?string(normalize-space(./BusinessEmail)) and (not(./BusinessEmail[matches(normalize-space(.),'@')]) or not(./BusinessEmail[matches(normalize-space(.),'\.')]))" printMessage_128="The Vehicle Year in the Service Appointment Record must be a valid year in the format YYYY.?not(./VehicleYear[matches(.,'^(19[0-9]{2})|(2[0-9]{3})$')])" printMessage_129="The Home Phone in the Service Appointment Record must be numeric only. Do NOT fill in extra spaces with zeros.?not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_130="The Multibyte Indicator is 'S' (Single Byte) but the data in the Appointment Scheduler Local ID field at positions 40-49 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AppointmentSchedulerLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AppointmentSchedulerLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_131="The Corporate Express/Opt In/MMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])" printMessage_132="The Multibyte Indicator is 'S' (Single Byte) but the data in the State/Province field at positions 516-545 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_133="The Customer Selected Svc Appt Repair Amount #4 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #4 or Customer Selected Repair #4 is not empty.?not(string(normalize-space(./CustomerSelectedRepairAmount4))) and (string(normalize-space(./CustomerSelectedLOP4)) or string(normalize-space(./CustomerSelectedRepair4)))" printMessage_134="The Corporate Express/Opt In/Mail in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])" printMessage_135="The Corporate Express/Opt In/Business Email in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])" printMessage_136="The Customer Selected Svc Appt Repair Labor Operation Code #5 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #5 has data or the Customer Selected Svc Appt Repair Amount #5 is not zero.?not(string(normalize-space(./CustomerSelectedLOP5))) and (string(normalize-space(./CustomerSelectedRepair5)) or not(./CustomerSelectedRepairAmount5[matches(.,'^0{14}$')]))" printMessage_137="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #3 field at positions 1189-1218 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_138="The Appointment Type (method used to initiate an appointment) in the Service Appointment Record is not from the enumerated list ('A', 'I', 'P', 'W', 'U', 'S').?not(./AppointmentType[matches(.,'^[AIPSWU]$')])" printMessage_139="The Dealer Permission/Opt In/Mail in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])" printMessage_140="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 829-928 of the Service Appointment Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_141="WARNING: The Dealer Permission/Opt In/Cell Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-CellPhone)))" printMessage_142="The Customer Selected Svc Appt Repair #1 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedRepair1)) and ./CustomerSelectedRepair1[matches(.,'^\s.*$')]" printMessage_143="The Customer Selected Svc Appt Repair #2 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #2 has data or the Customer Selected Svc Appt Repair Amount #2 is not zero.?not(string(normalize-space(./CustomerSelectedRepair2))) and (string(normalize-space(./CustomerSelectedLOP2)) or not(./CustomerSelectedRepairAmount2[matches(.,'^0{14}$')]))" printMessage_144="The Date Of Appointment in the Service Appointment Record must be a valid date in the format YYYYMMDD.?not(./DateOfAppointment[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_145="The Customer Selected Svc Appt Repair #2 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./CustomerSelectedRepair2)) and ./CustomerSelectedRepair2[matches(.,'^\s.*$')]" printMessage_146="The Customer Selected Svc Appt Repair Labor Operation Code #4 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #4 has data or the Customer Selected Svc Appt Repair Amount #4 is not zero.?not(string(normalize-space(./CustomerSelectedLOP4))) and (string(normalize-space(./CustomerSelectedRepair4)) or not(./CustomerSelectedRepairAmount4[matches(.,'^0{14}$')]))" printMessage_147="The Customer Selected Svc Appt Repair Labor Operation Code #3 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #3 has data or the Customer Selected Svc Appt Repair Amount #3 is not zero.?not(string(normalize-space(./CustomerSelectedLOP3))) and (string(normalize-space(./CustomerSelectedRepair3)) or not(./CustomerSelectedRepairAmount3[matches(.,'^0{14}$')]))" printMessage_148="The Dealer Permission/Opt In/Email 1 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])" printMessage_149="The Address 1 field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]" printMessage_150="The Dealer Permission/Opt In/Business Email in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])" printMessage_151="The Zip / Postal Code field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]" printMessage_152="The Customer Selected Svc Appt Repair #3 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #3 has data or the Customer Selected Svc Appt Repair Amount #3 is not zero.?not(string(normalize-space(./CustomerSelectedRepair3))) and (string(normalize-space(./CustomerSelectedLOP3)) or not(./CustomerSelectedRepairAmount3[matches(.,'^0{14}$')]))" printMessage_153="The Appointment ID field in the Service Appointment Record must be left justified with right space fill.?string(normalize-space(./AppointmentID)) and ./AppointmentID[matches(.,'^\s.*$')]" printMessage_154="The Service Appointment Confirmation Email in the Service Appointment Record must be a valid email address.?string(normalize-space(./AppointmentConfirmationEmail)) and (not(./AppointmentConfirmationEmail[matches(normalize-space(.),'@')]) or not(./AppointmentConfirmationEmail[matches(normalize-space(.),'\.')]))" printMessage_155="The Record Type in the Service Appointment Record allows 'A1' value only.?not(./RecordType[matches(.,'^A1$')])" printMessage_156="The Appointment Scheduler Local ID or Appointment Scheduler - STARS ID in the Service Appointment Record must be not empty.?not(string(normalize-space(./AppointmentSchedulerLocalID))) and not(string(normalize-space(./AppointmentSchedulerSTARSID)))" printMessage_157="MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #1 field of the Service Appointment Record.?not(./CustomerSelectedLOP1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AppointmentID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AppointmentType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="DateAppointmentInitiated" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="DateOfAppointment" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TimeOfAppointment" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AppointmentSchedulerLocalID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AppointmentSchedulerSTARSID" makeNillable_1="xsd" />
          <as:Element name="AppointmentSchedulerSocialID" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="VIN" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="VehicleMake" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="VehicleModel" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="VehicleYear" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OdometerReading" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OdometerIndicator" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AppointmentConfirmationEmail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedLOP1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedLOP2" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerSelectedLOP3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedLOP4" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedLOP5" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedRepair1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedRepair2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedRepair3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerSelectedRepair4" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerSelectedRepair5" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerSelectedRepairAmount1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedRepairAmount2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedRepairAmount3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedRepairAmount4" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerSelectedRepairAmount5" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AppointmentStatus" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FILECONTROL16-9" makeOptional_1="true" makeNillable_2="xsd" />
        </as:Element>
        <as:Element name="UsedVehicleSales" makeOptional_1="true" makeRepeatable="//UsedVehicleSales" printMessage_3="WARNING: The Corporate Express/Opt In/Mail in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Mail)))" printMessage_4="The Corporate Express/Opt In/Email 2 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])" printMessage_5="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Number field at positions 102-111 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_6="If the Geographic Sales Area Code in the File Header record equals to 'USA' then the Contract Type in the Used Vehicle Sale Record must be empty.?string(normalize-space(./ContractType)) and //FileHeader/GeographicSalesAreaCode[matches(.,'^USA$')]" printMessage_7="The Middle Initial in the Used Vehicle Sale Record must be an alpha or multibyte character.?./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!&gt;|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)" printMessage_8="WARNING: The Dealer Permission/Opt In/Cell Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-CellPhone)))" printMessage_9="The Corporate Express/Opt In/Email 1 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])" printMessage_10="The Sold Odometer Reading in the Used Vehicle Sale Record should be numeric only.?not(./SoldOdometerReading[matches(normalize-space(.),'^[0-9]{6}$')])" printMessage_11="The Corporate Express/Opt In/Email 3 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])" printMessage_12="The Dealer Permission/Opt In/Mail in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])" printMessage_13="The Customer Number field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./CustomerNumber)) and ./CustomerNumber[matches(.,'^\s.*$')]" printMessage_14="The Corporate Express/Opt In/Work Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])" printMessage_15="The Sale Date (date vehicle sold) in the Used Vehicle Record must not be later than the File Date in the File Header Record.?number(substring(./SaleDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))" printMessage_16="WARNING: The Dealer Permission/Opt In/Mail in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Mail)))" printMessage_17="The State/Province in the Used Vehicle Sale Record must not contain numbers.?./StateOrProvince[matches(.,'[0-9]')]" printMessage_18="The Corporate Express/Opt In/Home Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])" printMessage_19="The Multibyte Indicator is 'S' (Single Byte) but the data in the State/Province field at positions 418-447 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_20="The Customer Email 3 field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]" printMessage_21="The Dealer Permission/Opt In/Email 1 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])" printMessage_22="The Corporate Express/Opt In/SMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])" printMessage_23="The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 142 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_24="The Sales Person Local ID or Sales Person STARS ID in the Used Vehicle Sale Record must be not empty.?not(string(normalize-space(./SalesPersonLocalID))) and not(string(normalize-space(./SalesPersonSTARSID)))" printMessage_25="The Dealer Permission/Opt In/Email 2 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])" printMessage_26="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 228-307 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_27="The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 223-227 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_28="The City in the Used Vehicle Sale Record must not contain numbers.?./City[matches(.,'[0-9]')]" printMessage_29="The Sale Date (date the used vehicle was sold) in the Used Vehicle Sale Record must be a valid date in the format YYYYMMDD.?not(./SaleDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_30="The Contract Type field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./ContractType)) and ./ContractType[matches(.,'^\s.*$')]" printMessage_31="WARNING: The Corporate Express/Opt In/Home Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-HomePhone)))" printMessage_32="The Sale Type field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./SaleType)) and ./SaleType[matches(.,'^\s.*$')]" printMessage_33="The Dealer Permission/Opt In/Business Email in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])" printMessage_34="The Work Phone field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]" printMessage_35="The Home Phone field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]" printMessage_36="The Corporate Express/Opt In/Cell Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])" printMessage_37="The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 891-990 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_38="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 781-860 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_39="The Dealer Permission/Opt In/Home Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])" printMessage_40="The First Name field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]" printMessage_41="The Title field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]" printMessage_42="The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 308-387 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_43="The Trade In Odometer Reading in the Used Vehicle Sale Record should be numeric only.?not(./TradeInOdometerReading[matches(normalize-space(.),'^[0-9]{6}$')])" printMessage_44="WARNING: The Corporate Express/Opt In/Business Email in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-BusEmail)))" printMessage_45="The Trade In VIN field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./TradeInVIN)) and ./TradeInVIN[matches(.,'^\s.*$')]" printMessage_46="WARNING: The Dealer Permission/Opt In/MMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-MMS)))" printMessage_47="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sale Type Description field at positions 723-737 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SaleTypeDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SaleTypeDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_48="WARNING: The Corporate Express/Opt In/Cell Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-CellPhone)))" printMessage_49="The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 112-141 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_50="The Inventory Type in the Used Vehicle Sale Record must be an alpha or multibyte characters.?./InventoryType[matches(.,'[*\d,.;:=+\-_?#$%@\^\\/!&gt;|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./InventoryType, &quot;'&quot;)" printMessage_51="WARNING: The Dealer Permission/Opt In/Email 2 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email2)))" printMessage_52="WARNING: The Dealer Permission/Opt In/Work Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))" printMessage_53="The Cell Phone in the Used Vehicle Sale Record should be numeric only. Do NOT fill in extra spaces with zeros.?not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_54="The Record Type in the Used Vehicle Sale Record allows 'U1' value only.?not(./RecordType[matches(.,'^U1$')])" printMessage_55="The Corporate Express/Opt In/Mail in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])" printMessage_56="The Dealer Permission/Opt In/SMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])" printMessage_57="The Trade In Odometer Indicator (miles or kilometer) in the Used Vehicle Sale Record must be either M or K.?not(./TradeInOdometerIndicator[matches(normalize-space(.),'^[MK]$')])" printMessage_58="The Address 2 field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]" printMessage_59="MultiByte characters are not allowed in the Used Vehicle Invoice Number field of the Used Vehicle Sale Record.?not(./UsedVehicleInvoiceNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./UsedVehicleInvoiceNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_60="The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1091-1110 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')])" printMessage_61="The Multibyte Indicator is 'S' (Single Byte) but the data in the Sales Person Local ID field at positions 35-44 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./SalesPersonLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SalesPersonLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_62="WARNING: The Corporate Express/Opt In/Work Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-WorkPhone)))" printMessage_63="The Home Phone in the Used Vehicle Sale Record should be numeric only. Do NOT fill in extra spaces with zeros.?not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_64="The Dealer Permission/Opt In/Work Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])" printMessage_65="The Sale Type in the Used Vehicle Sale Record is required and must contain one of the values 'F' 'R' or 'C'.?not(string(normalize-space(./SaleType))) or not(./SaleType[matches(normalize-space(.),'^[FRC]$')])" printMessage_66="The Sold VIN field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./SoldVIN)) and ./SoldVIN[matches(.,'^\s.*$')]" printMessage_67="WARNING: The Dealer Permission/Opt In/Home Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-HomePhone)))" printMessage_68="The Customer Email 1 field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail1)) and ./CustomerEmail1[matches(.,'^\s.*$')]" printMessage_69="The Multibyte Indicator is 'S' (Single Byte) but the data in the Contract Type field at positions 708-722 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and normalize-space(./ContractType) and not(./ContractType[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ContractType[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_70="The Loyalty Program Member Number field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]" printMessage_71="The Company Description field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]" printMessage_72="The Customer Email 2 field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]" printMessage_73="WARNING: The Corporate Express/Opt In/Email 1 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email1)))" printMessage_74="WARNING: The Corporate Express/Opt In/MMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-MMS)))" printMessage_75="The Sales Person Local ID field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./SalesPersonLocalID)) and ./SalesPersonLocalID[matches(.,'^\s.*$')]" printMessage_76="The Sale Type Description field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./SaleTypeDescription)) and ./SaleTypeDescription[matches(.,'^\s.*$')]" printMessage_77="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 608-707 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_78="The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 143-222 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_79="The Sold Odometer Indicator (miles or kilometer) in the Used Vehicle Sale Record must be either M or K.?not(./SoldOdometerIndicator[matches(normalize-space(.),'^[MK]$')])" printMessage_80="The Work Phone in the Used Vehicle Sale Record should be numeric only. Do NOT fill in extra spaces with zeros.?not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])" printMessage_81="The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 861-890 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_82="The Contract Type in the Used Vehicle Sale Record cannot contain special characters.?(./ContractType[matches(.,'[,.;:=+\-_?#$%@\^\\/!&gt;|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./ContractType, &quot;'&quot;)) and not(//FileHeader/GeographicSalesAreaCode[matches(.,'^USA$')])" printMessage_83="The Cell Phone field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]" printMessage_84="The Customer Email 3 in the Used Vehicle Sale Record must be a valid email address.?string(normalize-space(./CustomerEmail3)) and (not(./CustomerEmail3[matches(normalize-space(.),'@')]) or not(./CustomerEmail3[matches(normalize-space(.),'\.')]))" printMessage_85="The Business Email in the Used Vehicle Sale Record must be a valid email address.?string(normalize-space(./BusinessEmail)) and (not(./BusinessEmail[matches(normalize-space(.),'@')]) or not(./BusinessEmail[matches(normalize-space(.),'\.')]))" printMessage_86="WARNING: The Dealer Permission/Opt In/Email 3 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email3)))" printMessage_87="The Sales Person # (SSN OR SIN) in the Used Vehicle Sale Record is required and should be numeric only.?not(./SalesPersonSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./SalesPersonSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]" printMessage_88="The Dealer Permission/Opt In/Cell Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])" printMessage_89="The Last Name field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]" printMessage_90="The Corporate Express/Opt In/MMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])" printMessage_91="The Inventory Type field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./InventoryType)) and ./InventoryType[matches(.,'^\s.*$')]" printMessage_92="MultiByte characters are not allowed in the Zip / Postal Code field of the Used Vehicle Sale Record.?not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_93="The Sold VIN in the Used Vehicle Sale Record should be alpha-numeric only.?not(./SoldVIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])" printMessage_94="The Multibyte Indicator is 'S' (Single Byte) but the data in the Inventory Type field at positions 738-757 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./InventoryType[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./InventoryType[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_95="The Dealer Permission/Opt In/Email 3 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])" printMessage_96="The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 388-417 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_97="Customer Email 2 in the Used Vehicle Sale Record must be a valid email address.?string(normalize-space(./CustomerEmail2)) and (not(./CustomerEmail2[matches(normalize-space(.),'@')]) or not(./CustomerEmail2[matches(normalize-space(.),'\.')]))" printMessage_98="Customer Email 1 in the Used Vehicle Sale Record must be a valid email address.?string(normalize-space(./CustomerEmail1)) and (not(./CustomerEmail1[matches(normalize-space(.),'@')]) or not(./CustomerEmail1[matches(normalize-space(.),'\.')]))" printMessage_99="The Zip / Postal Code field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]" printMessage_100="WARNING: The Corporate Express/Opt In/Email 2 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email2)))" printMessage_101="The Used Vehicle Invoice Number field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./UsedVehicleInvoiceNumber)) and ./UsedVehicleInvoiceNumber[matches(.,'^\s.*$')]" printMessage_102="WARNING: The Dealer Permission/Opt In/SMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-SMS)))" printMessage_103="WARNING: The Corporate Express/Opt In/Email 3 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-Email3)))" printMessage_104="WARNING: The Dealer Permission/Opt In/Business Email in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-BusEmail)))" printMessage_105="WARNING: The Dealer Permission/Opt In/Email 1 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_DlrPerm-Email1)))" printMessage_106="WARNING: The Corporate Express/Opt In/SMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value unless it is against the local laws.?not(string(normalize-space(./OPT_CorpExp-SMS)))" printMessage_107="The Sales Person # (SSN OR SIN) in the Used Vehicle Sale Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Sales Person - STARS ID.?string(normalize-space(./SalesPersonSocialID)) and (string(normalize-space(./SalesPersonSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))" printMessage_108="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 1 field at positions 508-607 of the Used Vehicle Sales is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])" printMessage_109="The Corporate Express/Opt In/Business Email in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])" printMessage_110="The Address 3 field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]" printMessage_111="The Address 1 field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]" printMessage_112="The Business Email field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]" printMessage_113="The City field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]" printMessage_114="The Sales Person STARS ID in the Used Vehicle Sale Record allows numerical or spaces filled values only.?not(./SalesPersonSTARSID[matches(.,'^([0-9]{9}|\s*)$')])" printMessage_115="The Trade In VIN in the Used Vehicle Sale Record should be alpha-numeric only.?not(./TradeInVIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])" printMessage_116="The State/Province field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]" printMessage_117="The Customer Country Code in the Used Vehicle Sale Record should be alpha-numeric.?string(normalize-space(./CustomerCountryCode)) and (normalize-space(./CustomerCountryCode)[matches(.,'[ *,.;:=+\-_?#$%@\^\\/!&gt;|}{()]')] or contains(./CustomerCountryCode,'[') or contains(./CustomerCountryCode,']'))" printMessage_118="The Dealer Permission/Opt In/MMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').?string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])" printMessage_119="The Customer Country Code in the Used Vehicle Sale Record must be upper case alpha and from the ISO 3166-1 alpha-3 list or space filled.?string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])" printMessage_120="The Sales Person STARS ID field in the Used Vehicle Sale Record must be left justified with right space fill.?string(normalize-space(./SalesPersonSTARSID)) and ./SalesPersonSTARSID[matches(.,'^\s.*$')]" printMessage_121="The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 991-1090 of the Used Vehicle Sale Record is MultiByte.?//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!&gt;|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="UsedVehicleInvoiceNumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleType" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SalesPersonSocialID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SalesPersonLocalID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SalesPersonSTARSID" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SoldVIN" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SoldOdometerReading" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SoldOdometerIndicator" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TradeInVIN" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="TradeInOdometerReading" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="TradeInOdometerIndicator" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerNumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FirstName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="MiddleInitial" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LastName" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="Title" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddressLine1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="AddressLine2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="City" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="StateOrProvince" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ZipOrPostalCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="HomePhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CustomerEmail2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="ContractType" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleTypeDescription" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="InventoryType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="CellPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerCountryCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="AddressLine3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CompanyDescription" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="BusinessEmail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="CustomerEmail3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="LoyaltyProgramMemberNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Mail" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-BusEmail" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email1" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-Email2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-Email2" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-Email3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-Email3" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-HomePhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_CorpExp-CellPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-WorkPhone" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-WorkPhone" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="OPT_DlrPerm-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-SMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_DlrPerm-MMS" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="OPT_CorpExp-MMS" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL16-8" makeNillable_1="xsd" makeOptional_2="true" />
        </as:Element>
        <as:Element name="PartsInitialQuantity" printMessage_1="The Quantity Sold 2 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-2[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_2="The Quantity Sold 12 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-12[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_3="If Part Suffix is sent in the Parts Initial Quantity Record the Part Base is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))" printMessage_4="The Quantity Sold 10 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-10[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_5="The Quantity Date (date the quantity is being reported for) in the Parts Initial Quantity Record must be a valid date in the format YYYYMMDD.?not(./QuantityDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])" printMessage_6="The Quantity Sold 6 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-6[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_7="The Quantity Sold 3 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-3[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_8="The Quantity Sold 9 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-9[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_9="The Quantity On Hand (count of this part at the end of the daily processing) in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./QuantityOnHand[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_10="The Quantity Sold 7 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-7[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_11="The Quantity Sold 4 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-4[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_12="The Quantity Sold Current Month in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-0[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_13="The Quantity Sold 11 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-11[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_14="The Quantity Sold 5 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-5[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_15="Parts Prefix Part Base and Part Suffix in the Parts Initial Quantity Record are all empty. A Part Number is required.?not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))" printMessage_16="The Quantity Sold 8 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-8[matches(.,'^[-0-9][0-9]{6}$')])" printMessage_17="If Parts Prefix and Part Suffix are sent in the Parts Initial Quantity Record the Part Base is required.?string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))" printMessage_18="The Quantity Sold Last Month in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.?not(./SaleQuantityCurrentMonth-1[matches(.,'^[-0-9][0-9]{6}$')])" makeOptional_19="true" makeRepeatable="//PartsInitialQuantity">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Attribute name="currentFileDate" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="QuantityDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberPrefix" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberBase" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PartNumberSuffix" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="QuantityOnHand" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-0" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-1" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-2" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-3" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-4" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-5" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-6" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-7" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-8" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-9" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-10" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SaleQuantityCurrentMonth-11" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="SaleQuantityCurrentMonth-12" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL16-9" makeOptional_1="true" makeNillable_2="xsd" />
        </as:Element>
        <as:Element name="FileTrailer" printMessage_1="The Record Count in the File Trailer (total number of records submitted) must be a 8 digit numeric value greater than 2.?not(./RecordCount[matches(.,'^[0-9]{8}$')])" printMessage_2="The Sub Dealer P &amp; A Code field in the File Trailer Record must be left justified with right space fill.?string(normalize-space(./SubDealerPACode)) and ./SubDealerPACode[matches(.,'^\s.*$')]" printMessage_3="The File Number in positions (29-30) of the File Trailer (number of the current file in process) must be a 2 digit numeric value greater than 0.?not(./FileNumber[matches(.,'^0[1-9]|[1-9][0-9]$')])" printMessage_4="The Ford Parts and Accessories Code in the File Trailer must be a 5 character alpha-numeric value.?not(./PACode[matches(.,'^[0-9A-Za-z]{5}$')])" printMessage_5="The Geo Sales Area Code in positions (20-22) of the File Trailer Record must be upper case.?not(./GeographicSalesAreaCode[matches(normalize-space(.),'^[A-Z]{3}$')])" printMessage_6="File Type Flag in position 39 of the Trailer Record must be from the enumerated list.?not(./FileTypeFlag[matches(.,'^[DH]$')])" printMessage_7="The Sub Dealer P &amp; A Code in the File Trailer must be an alpha-numeric value.?string(normalize-space(./SubDealerPACode)) and not(./SubDealerPACode[matches(normalize-space(.),'^[0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$')])" printMessage_8="The File Date (date the file was created) in positions (23-28) of the File Trailer Record must be a valid date in the format MMDDYY.?not(./FileDate[matches(.,'^((((0[13578]|1[02])(0[1-9]|[12]\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\d|30)|02(0[1-9]|1\d|2[0-8]))\d{2})|0229([02468][048]|[13579][26]))$')])" makeOptional_9="true" makeRepeatable="//FileTrailer">
          <as:Attribute name="lineNumber" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Attribute name="lineLength" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RecordType" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL18" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="PACode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="SubDealerPACode" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="GeographicSalesAreaCode" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FileDate" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FileNumber" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="RecordCount" makeOptional_1="true" makeNillable_2="xsd" />
          <as:Element name="FileTypeFlag" makeNillable_1="xsd" makeOptional_2="true" />
          <as:Element name="FILECONTROL16-10" makeMandatory="true" />
        </as:Element>
      </as:Element>
    </as:Structure>
  </as:AssemblyStructure>
</as:CAM>