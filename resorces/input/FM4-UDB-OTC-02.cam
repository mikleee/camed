<as:CAM xmlns:as="http://www.oasis-open.org/committees/cam" xmlns:camed="http://jcam.org.uk/editor" xmlns:xml="http://www.w3.org/XML/1998/namespace"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema" CAMlevel="1" version="1.0">
    <as:Header>
        <as:Description>Ford UDB File</as:Description>
        <as:Owner>Motive Retail LLC</as:Owner>
        <as:Version>3.21R+</as:Version>
        <as:DateTime>2013-02-11T09:33:49</as:DateTime>
    </as:Header>
    <as:AssemblyStructure>
        <as:Structure taxonomy="XML" ID="UDBFile" reference="">
            <UDBFile version="%string%">
                <ERROR errorType="%string%" errorClass="%string%" foundHeaderPosition="%string%" foundTrailerPosition="%string%" lineCount="%string%"
                       foundHeaderRecordCount="%string%" foundTrailerRecordCount="%string%" foundHeaderFileDate="%string%" foundHeaderFileDate-2="%string%"
                       foundTrailerFileDate="%string%" foundHeaderFileNumber="%string%" foundHeaderFileNumber-2="%string%" foundTrailerFileNumber="%string%"
                       foundHeaderPACode="%string%" foundTrailerPACode="%string%" foundHeaderSubDealerPACode="%string%" foundTrailerSubDealerPACode="%string%"
                       foundHeaderGeographicSalesAreaCode="%string%" foundTrailerGeographicSalesAreaCode="%string%" foundLineLength="%string%" possibleLineLength="%string%"
                       foundRecordType="%string%" possibleRecordType="%string%" foundPrecedeFileLineRecordType="%string%" foundDate="%string%">
                    <ERROR errorType="%string%" lineNumber="%string%" errorClass="%string%">%string%</ERROR>

                    <FileHeader lineNumber="%string%" lineLength="%string%">
                        <RecordType>%string%</RecordType>
                        <PACode>%string%</PACode>
                        <FILECONTROL01>%string%</FILECONTROL01>
                        <FILECONTROL02>%string%</FILECONTROL02>
                        <FILECONTROL03>%string%</FILECONTROL03>
                        <FILECONTROL04>%string%</FILECONTROL04>
                        <FileDate>%string%</FileDate>
                        <FileNumber>%string%</FileNumber>
                        <FILECONTROL05>%string%</FILECONTROL05>
                        <FILECONTROL06>%string%</FILECONTROL06>
                        <FILECONTROL05-2>%string%</FILECONTROL05-2>
                        <FILECONTROL07>%string%</FILECONTROL07>
                        <FILECONTROL08>%string%</FILECONTROL08>
                        <FileDate-2>%string%</FileDate-2>
                        <FileNumber-2>%string%</FileNumber-2>
                        <RecordCount>%string%</RecordCount>
                        <SubDealerPACode>%string%</SubDealerPACode>
                        <FILECONTROL09>%string%</FILECONTROL09>
                        <FILECONTROL10>%string%</FILECONTROL10>
                        <FILECONTROL11>%string%</FILECONTROL11>
                        <GeographicSalesAreaCode>%string%</GeographicSalesAreaCode>
                        <FranchiseCode>%string%</FranchiseCode>
                        <DSPSoftwareReleaseVersion>%string%</DSPSoftwareReleaseVersion>
                        <FILECONTROL12>%string%</FILECONTROL12>
                        <FILECONTROL13>%string%</FILECONTROL13>
                        <FILECONTROL14>%string%</FILECONTROL14>
                        <FILECONTROL02-2>%string%</FILECONTROL02-2>
                        <FILECONTROL15>%string%</FILECONTROL15>
                        <VendorID>%string%</VendorID>
                        <FileTypeFlag>%string%</FileTypeFlag>
                        <MultiByteIndicator>%string%</MultiByteIndicator>  <!--added 11-03-2014 by Mikhail Tkachenko-->
                        <FILECONTROL16>%string%</FILECONTROL16>
                    </FileHeader>
                    <RepairOrderHeader lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                        <RecordType>%string%</RecordType>
                        <VIN>%string%</VIN>
                        <RONumber>%string%</RONumber>
                        <ROXRef>%string%</ROXRef>
                        <ServiceWriterSocialID>%string%</ServiceWriterSocialID> <!--added 12-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17)-->
                        <ROOpenDate truncROOpenDate="%string%">%string%</ROOpenDate>
                        <ROCloseDate truncROCloseDate="%string%">%string%</ROCloseDate>
                        <OdometerReading>%string%</OdometerReading>
                        <OdometerIndicator>%string%</OdometerIndicator>
                        <FirstName>%string%</FirstName>
                        <MiddleInitial>%string%</MiddleInitial>
                        <LastName>%string%</LastName>
                        <Title>%string%</Title>
                        <AddressLine1>%string%</AddressLine1>
                        <AddressLine2>%string%</AddressLine2>
                        <City>%string%</City>
                        <StateOrProvince>%string%</StateOrProvince>
                        <ZipOrPostalCode>%string%</ZipOrPostalCode>
                        <HomePhone>%string%</HomePhone>
                        <WorkPhone>%string%</WorkPhone>
                        <NetCustomerPaidAmount>%string%</NetCustomerPaidAmount>
                        <TaxAmount>%string%</TaxAmount>
                        <LicensePlateNumber>%string%</LicensePlateNumber>
                        <RepairOrderOpenTime>%string%</RepairOrderOpenTime>
                        <RepairOrderCloseTime>%string%</RepairOrderCloseTime>
                        <AppointmentTypeCode>%string%</AppointmentTypeCode>
                        <AppointmentInitiatedDate truncApptInitDate="%string%">%string%</AppointmentInitiatedDate>
                        <ServiceCustomerTypeCode>%string%</ServiceCustomerTypeCode>
                        <ServiceWriterLocalID>%string%</ServiceWriterLocalID>
                        <ServiceWriterSTARSID>%string%</ServiceWriterSTARSID> <!--added 12-03-2014 by Mikhail Tkachenko (instead of ServiceWriterNationalID)-->
                        <CustomerEmail>%string%</CustomerEmail>
                        <CellPhone>%string%</CellPhone>
                        <CustomerCountryCode>%string%</CustomerCountryCode>
                        <AddressLine3>%string%</AddressLine3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <CompanyDescription>%string%</CompanyDescription> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <BusinessEmail>%string%</BusinessEmail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <CustomerEmail2>%string%</CustomerEmail2> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <CustomerEmail3>%string%</CustomerEmail3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <DateOfAppointment>%string%</DateOfAppointment> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <TimeOfAppointment>%string%</TimeOfAppointment> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <InitialEstimateAmount>%string%</InitialEstimateAmount> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <WaiterIndicator>%string%</WaiterIndicator> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <ROInvoiceDate-VehicleReady>%string%</ROInvoiceDate-VehicleReady> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <ROInvoiceTime-ROReady>%string%</ROInvoiceTime-ROReady> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <AddWorkRequestDate>%string%</AddWorkRequestDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <AddWorkRequestTime>%string%</AddWorkRequestTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <AddWorkRequestEstimate>%string%</AddWorkRequestEstimate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <PromisedDate>%string%</PromisedDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <PromisedTime>%string%</PromisedTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <VehiclePickupDate>%string%</VehiclePickupDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <VehiclePickupTime>%string%</VehiclePickupTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <CustomerNumber>%string%</CustomerNumber> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <FILECONTROL16-2>%string%</FILECONTROL16-2>
                    </RepairOrderHeader>
                    <RepairOrderService awaID="%string%" bundledlaborID="%string%" menupriceID="%string%" espwarrantydeductible="%string%" lineNumber="%string%" lineLength="%string%">
                        <RecordType>%string%</RecordType>
                        <SequenceNumber>%string%</SequenceNumber>
                        <RepairTypeCode>%string%</RepairTypeCode>
                        <TechnicianSocialID>%string%</TechnicianSocialID> <!--added 13-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-2)-->
                        <ServicingDepartmentCode>%string%</ServicingDepartmentCode>
                        <LaborOperationCode>%string%</LaborOperationCode>
                        <LaborChargeAmount>%string%</LaborChargeAmount>
                        <BilledHours>%string%</BilledHours>
                        <SubletOrMiscDescription01>%string%</SubletOrMiscDescription01>
                        <SubletOrMiscDescription02>%string%</SubletOrMiscDescription02>
                        <SubletOrMiscDescription03>%string%</SubletOrMiscDescription03>
                        <SubletOrMiscDescription04>%string%</SubletOrMiscDescription04>
                        <SubletOrMiscDescription05>%string%</SubletOrMiscDescription05>
                        <SubletOrMiscDescription06>%string%</SubletOrMiscDescription06>
                        <SubletOrMiscDescription07>%string%</SubletOrMiscDescription07>
                        <SubletOrMiscDescription08>%string%</SubletOrMiscDescription08>
                        <SubletOrMiscDescription09>%string%</SubletOrMiscDescription09>
                        <SubletOrMiscDescription10>%string%</SubletOrMiscDescription10>
                        <SubletOrMiscAmount01>%string%</SubletOrMiscAmount01>
                        <SubletOrMiscAmount02>%string%</SubletOrMiscAmount02>
                        <SubletOrMiscAmount03>%string%</SubletOrMiscAmount03>
                        <SubletOrMiscAmount04>%string%</SubletOrMiscAmount04>
                        <SubletOrMiscAmount05>%string%</SubletOrMiscAmount05>
                        <SubletOrMiscAmount06>%string%</SubletOrMiscAmount06>
                        <SubletOrMiscAmount07>%string%</SubletOrMiscAmount07>
                        <SubletOrMiscAmount08>%string%</SubletOrMiscAmount08>
                        <SubletOrMiscAmount09>%string%</SubletOrMiscAmount09>
                        <SubletOrMiscAmount10>%string%</SubletOrMiscAmount10>
                        <LaborDescription>
                            <IsAWASplit>%string%</IsAWASplit>
                            <AWAFordPercentage>%string%</AWAFordPercentage>
                            <AWADealerPercentage>%string%</AWADealerPercentage>
                            <AWACustomerPercentage>%string%</AWACustomerPercentage>
                            <LaborDescriptionText>%string%</LaborDescriptionText>
                        </LaborDescription>
                        <TechnicianLocalID>%string%</TechnicianLocalID>
                        <TechnicianSTARSID>%string%</TechnicianSTARSID> <!--added 13-03-2014 by Mikhail Tkachenko (instead of TechnicianNationalID)-->
                        <TechnicianStartDate>%string%</TechnicianStartDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <TechnicianStartTime>%string%</TechnicianStartTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <TechnicianFinishDate>%string%</TechnicianFinishDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <TechnicianFinishTime>%string%</TechnicianFinishTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <DeclinedServOpCode>%string%</DeclinedServOpCode> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <DeclinedServOpCodeDesc>%string%</DeclinedServOpCodeDesc> <!--added 12-03-2014 by Mikhail Tkachenko-->
                        <FILECONTROL16-3>%string%</FILECONTROL16-3>
                    </RepairOrderService>
                    <RepairOrderPart awaID="%string%" bundledlaborID="%string%" partcoresaleID="%string%" partsreturn="%string%" partskitID="%string%" menupriceID="%string%"
                                     lineNumber="%string%" lineLength="%string%">
                        <RecordType>%string%</RecordType>
                        <PartNumberPrefix>%string%</PartNumberPrefix>
                        <PartNumberBase>%string%</PartNumberBase>
                        <PartNumberSuffix>%string%</PartNumberSuffix>
                        <Quantity>%string%</Quantity>
                        <SaleAmount>%string%</SaleAmount>
                        <DealerCostAmount>%string%</DealerCostAmount>
                        <Description>
                            <IsAWASplit>%string%</IsAWASplit>
                            <AWAFordPercentage>%string%</AWAFordPercentage>
                            <AWADealerPercentage>%string%</AWADealerPercentage>
                            <AWACustomerPercentage>%string%</AWACustomerPercentage>
                            <DescriptionText>%string%</DescriptionText>
                        </Description>
                        <CausalCode>%string%</CausalCode>
                        <CounterPersonSocialID>%string%</CounterPersonSocialID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-3)-->
                        <CounterPersonLocalID>%string%</CounterPersonLocalID>
                        <CounterPersonSTARSID>%string%</CounterPersonSTARSID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of CounterPersonLocalID)-->
                        <ROPartAddDate>%string%</ROPartAddDate> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <ROPartAddTime>%string%</ROPartAddTime> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <FILECONTROL16-4>%string%</FILECONTROL16-4>
                    </RepairOrderPart>
                    <OTCPartInvoiceHeader lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                        <RecordType>%string%</RecordType>
                        <InvoiceNumber>%string%</InvoiceNumber>
                        <InvoiceDate truncInvoiceDate="%string%">%string%</InvoiceDate>
                        <LastName>%string%</LastName>
                        <AddressLine1>%string%</AddressLine1>
                        <AddressLine2>%string%</AddressLine2>
                        <City>%string%</City>
                        <StateOrProvince>%string%</StateOrProvince>
                        <ZipOrPostalCode>%string%</ZipOrPostalCode>
                        <CustomerTypeCode>%string%</CustomerTypeCode>
                        <CustomerTaxID>%string%</CustomerTaxID>
                        <TaxAmount>%string%</TaxAmount>
                        <CounterPersonSocialID>%string%</CounterPersonSocialID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-4)-->
                        <CounterPersonLocalID>%string%</CounterPersonLocalID>
                        <CounterPersonSTARSID>%string%</CounterPersonSTARSID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of CounterPersonNationalID)-->
                        <FirstName>%string%</FirstName>
                        <MiddleInitial>%string%</MiddleInitial>
                        <Title>%string%</Title>
                        <CustomerCountryCode>%string%</CustomerCountryCode>
                        <HomePhone>%string%</HomePhone>
                        <WorkPhone>%string%</WorkPhone>
                        <CellPhone>%string%</CellPhone>
                        <CustomerEmail>%string%</CustomerEmail>
                        <DiscountAmount>%string%</DiscountAmount>
                        <ShippingAmount>%string%</ShippingAmount>
                        <SaleType>%string%</SaleType> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleTypeDescription>%string%</SaleTypeDescription> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <AddressLine3>%string%</AddressLine3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <CompanyDescription>%string%</CompanyDescription> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <BusinessEmail>%string%</BusinessEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <CustomerEmail2>%string% </CustomerEmail2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <CustomerEmail3>%string%</CustomerEmail3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <CustomerNumber>%string%</CustomerNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <FILECONTROL16-5>%string%</FILECONTROL16-5>
                    </OTCPartInvoiceHeader>
                    <OTCPartsInvoicePart partcoresaleID="%string%" partsreturn="%string%" partskitID="%string%" lineNumber="%string%" lineLength="%string%">
                        <RecordType>%string%</RecordType>
                        <PartNumberPrefix>%string%</PartNumberPrefix>
                        <PartNumberBase>%string%</PartNumberBase>
                        <PartNumberSuffix>%string%</PartNumberSuffix>
                        <Quantity>%string%</Quantity>
                        <SaleAmount>%string%</SaleAmount>
                        <DealerCostAmount>%string%</DealerCostAmount>
                        <Description>%string%</Description>
                        <FILECONTROL16-6>%string%</FILECONTROL16-6>
                    </OTCPartsInvoicePart>
                    <PartsInventory lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                        <RecordType>%string%</RecordType>
                        <QuantityDate truncInventoryDate="%string%">%string%</QuantityDate> <!--renamed 14-03-2014 by Mikhail Tkachenko from InventoryDate according to HappyPath 4.01-->
                        <PartNumberPrefix>%string%</PartNumberPrefix>
                        <PartNumberBase>%string%</PartNumberBase>
                        <PartNumberSuffix>%string%</PartNumberSuffix>
                        <PackedServicePartNumber>%string%</PackedServicePartNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <PartStockingIndicator>%string%</PartStockingIndicator> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <BestStockingLevel>%string%</BestStockingLevel> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <Quantity>%string%</Quantity> <!--renamed 14-03-2014 by Mikhail Tkachenko from QuantityOnHand according to HappyPath 4.01-->
                        <DealerExtendedCost>%string%</DealerExtendedCost> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <DailyInboundQuantity>%string%</DailyInboundQuantity> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <DailyOutboundQuantity>%string%</DailyOutboundQuantity> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <QuantityAdjustment>%string%</QuantityAdjustment> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <QuantityAdjustmentType>%string%</QuantityAdjustmentType> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <DateLastSale>%string%</DateLastSale> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-0>%string%</SaleQuantityCurrentMonth-0> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-1>%string%</SaleQuantityCurrentMonth-1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-2>%string%</SaleQuantityCurrentMonth-2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-3>%string%</SaleQuantityCurrentMonth-3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-4>%string%</SaleQuantityCurrentMonth-4> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-5>%string%</SaleQuantityCurrentMonth-5> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-6>%string%</SaleQuantityCurrentMonth-6> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-7>%string%</SaleQuantityCurrentMonth-7> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-8>%string%</SaleQuantityCurrentMonth-8> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-9>%string%</SaleQuantityCurrentMonth-9> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-10>%string%</SaleQuantityCurrentMonth-10> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-11>%string%</SaleQuantityCurrentMonth-11> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <SaleQuantityCurrentMonth-12>%string%</SaleQuantityCurrentMonth-12> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <FILECONTROL16-7>%string%</FILECONTROL16-7>
                    </PartsInventory>
                    <!--4.01-->
                    <!--new section named ServiceAppointments is added 14-03-2014 by Mikhail Tkachenko-->
                    <ServiceAppointments lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                        <RecordType>%string%</RecordType>
                        <AppointmentID>%string%</AppointmentID>
                        <AppointmentType>%string%</AppointmentType>
                        <DateAppointmentInitiated>%string%</DateAppointmentInitiated>
                        <DateOfAppointment>%string%</DateOfAppointment>
                        <TimeOfAppointment>%string%</TimeOfAppointment>
                        <AppointmentSchedulerLocalID>%string%</AppointmentSchedulerLocalID>
                        <AppointmentSchedulerSTARSID>%string%</AppointmentSchedulerSTARSID>
                        <AppointmentSchedulerSocialID>%string%</AppointmentSchedulerSocialID>
                        <VIN>%string%</VIN>
                        <VehicleMake>%string%</VehicleMake>
                        <VehicleModel>%string%</VehicleModel>
                        <VehicleYear>%string%</VehicleYear>
                        <OdometerReading>%string%</OdometerReading>
                        <OdometerIndicator>%string%</OdometerIndicator>
                        <FirstName>%string%</FirstName>
                        <MiddleInitial>%string%</MiddleInitial>
                        <LastName>%string%</LastName>
                        <Title>%string%</Title>
                        <AddressLine1>%string%</AddressLine1>
                        <AddressLine2>%string%</AddressLine2>
                        <AddressLine3>%string%</AddressLine3>
                        <City>%string%</City>
                        <StateOrProvince>%string%</StateOrProvince>
                        <ZipOrPostalCode>%string%</ZipOrPostalCode>
                        <CustomerCountryCode>%string%</CustomerCountryCode>
                        <HomePhone>%string%</HomePhone>
                        <WorkPhone>%string%</WorkPhone>
                        <CellPhone>%string%</CellPhone>
                        <CustomerEmail1>%string%</CustomerEmail1>
                        <CustomerEmail2>%string%</CustomerEmail2>
                        <CustomerEmail3>%string%</CustomerEmail3>
                        <AppointmentConfirmationEmail>%string%</AppointmentConfirmationEmail>
                        <CustomerSelectedLOP1>%string%</CustomerSelectedLOP1>
                        <CustomerSelectedLOP2>%string%</CustomerSelectedLOP2>
                        <CustomerSelectedLOP3>%string%</CustomerSelectedLOP3>
                        <CustomerSelectedLOP4>%string%</CustomerSelectedLOP4>
                        <CustomerSelectedLOP5>%string%</CustomerSelectedLOP5>
                        <CustomerSelectedRepair1>%string%</CustomerSelectedRepair1>
                        <CustomerSelectedRepair2>%string%</CustomerSelectedRepair2>
                        <CustomerSelectedRepair3>%string%</CustomerSelectedRepair3>
                        <CustomerSelectedRepair4>%string%</CustomerSelectedRepair4>
                        <CustomerSelectedRepair5>%string%</CustomerSelectedRepair5>
                        <CustomerSelectedRepairAmount1>%string%</CustomerSelectedRepairAmount1>
                        <CustomerSelectedRepairAmount2>%string%</CustomerSelectedRepairAmount2>
                        <CustomerSelectedRepairAmount3>%string%</CustomerSelectedRepairAmount3>
                        <CustomerSelectedRepairAmount4>%string%</CustomerSelectedRepairAmount4>
                        <CustomerSelectedRepairAmount5>%string%</CustomerSelectedRepairAmount5>
                        <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber>
                        <CompanyDescription>%string%</CompanyDescription>
                        <BusinessEmail>%string%</BusinessEmail>
                        <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail>
                        <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail>
                        <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail>
                        <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail>
                        <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1>
                        <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1>
                        <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2>
                        <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2>
                        <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3>
                        <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3>
                        <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone>
                        <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone>
                        <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone>
                        <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone>
                        <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone>
                        <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone>
                        <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS>
                        <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS>
                        <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS>
                        <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS>
                        <AppointmentStatus>%string%</AppointmentStatus>
                        <FILECONTROL16-9>%string%</FILECONTROL16-9>
                    </ServiceAppointments>
                    <UsedVehicleSales lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                        <RecordType>%string%</RecordType>
                        <UsedVehicleInvoiceNumber>%string%</UsedVehicleInvoiceNumber>
                        <SaleDate>%string%</SaleDate>
                        <SaleType>%string%</SaleType>
                        <SalesPersonSocialID>%string%</SalesPersonSocialID> <!--added 17-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-5)-->
                        <SalesPersonLocalID>%string%</SalesPersonLocalID>
                        <SalesPersonSTARSID>%string%</SalesPersonSTARSID> <!--added 17-03-2014 by Mikhail Tkachenko (instead of SalesPersonNationalID)-->
                        <SoldVIN>%string%</SoldVIN>
                        <SoldOdometerReading>%string%</SoldOdometerReading>
                        <SoldOdometerIndicator>%string%</SoldOdometerIndicator>
                        <TradeInVIN>%string%</TradeInVIN>
                        <TradeInOdometerReading>%string%</TradeInOdometerReading>
                        <TradeInOdometerIndicator>%string%</TradeInOdometerIndicator>
                        <CustomerNumber>%string%</CustomerNumber> <!--renamed 19-03-2014 by Mikhail Tkachenko from CustomerContactFlag according to HappyPath 4.01-->
                        <FirstName>%string%</FirstName>
                        <MiddleInitial>%string%</MiddleInitial>
                        <LastName>%string%</LastName>
                        <Title>%string%</Title>
                        <AddressLine1>%string%</AddressLine1>
                        <AddressLine2>%string%</AddressLine2>
                        <City>%string%</City>
                        <StateOrProvince>%string%</StateOrProvince>
                        <ZipOrPostalCode>%string%</ZipOrPostalCode>
                        <HomePhone>%string%</HomePhone>
                        <WorkPhone>%string%</WorkPhone>
                        <CustomerEmail1>%string%</CustomerEmail1>
                        <CustomerEmail2>%string%</CustomerEmail2>
                        <ContractType>%string%</ContractType>
                        <SaleTypeDescription>%string%</SaleTypeDescription>
                        <InventoryType>%string%</InventoryType>
                        <CellPhone>%string%</CellPhone>
                        <CustomerCountryCode>%string%</CustomerCountryCode>
                        <AddressLine3>%string%</AddressLine3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <CompanyDescription>%string%</CompanyDescription> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <BusinessEmail>%string%</BusinessEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <CustomerEmail3>%string%</CustomerEmail3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                        <FILECONTROL16-8>%string%</FILECONTROL16-8>  <!--renamed 19-03-2014 by Mikhail Tkachenko from FILECONTROL16-10 according to HappyPath 4.01-->
                    </UsedVehicleSales>
                    <PartsInitialQuantity lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                        <RecordType>%string%</RecordType>
                        <QuantityDate>%string%</QuantityDate>
                        <PartNumberPrefix>%string%</PartNumberPrefix>
                        <PartNumberBase>%string%</PartNumberBase>
                        <PartNumberSuffix>%string%</PartNumberSuffix>
                        <QuantityOnHand>%string%</QuantityOnHand>
                        <SaleQuantityCurrentMonth-0>%string%</SaleQuantityCurrentMonth-0>
                        <SaleQuantityCurrentMonth-1>%string%</SaleQuantityCurrentMonth-1>
                        <SaleQuantityCurrentMonth-2>%string%</SaleQuantityCurrentMonth-2>
                        <SaleQuantityCurrentMonth-3>%string%</SaleQuantityCurrentMonth-3>
                        <SaleQuantityCurrentMonth-4>%string%</SaleQuantityCurrentMonth-4>
                        <SaleQuantityCurrentMonth-5>%string%</SaleQuantityCurrentMonth-5>
                        <SaleQuantityCurrentMonth-6>%string%</SaleQuantityCurrentMonth-6>
                        <SaleQuantityCurrentMonth-7>%string%</SaleQuantityCurrentMonth-7>
                        <SaleQuantityCurrentMonth-8>%string%</SaleQuantityCurrentMonth-8>
                        <SaleQuantityCurrentMonth-9>%string%</SaleQuantityCurrentMonth-9>
                        <SaleQuantityCurrentMonth-10>%string%</SaleQuantityCurrentMonth-10>
                        <SaleQuantityCurrentMonth-11>%string%</SaleQuantityCurrentMonth-11>
                        <SaleQuantityCurrentMonth-12>%string%</SaleQuantityCurrentMonth-12>
                        <FILECONTROL16-9>%string%</FILECONTROL16-9>
                    </PartsInitialQuantity>
                    <FileTrailer lineNumber="%string%" lineLength="%string%">
                        <RecordType>%string%</RecordType>
                        <FILECONTROL18>%string%</FILECONTROL18>
                        <PACode>%string%</PACode>
                        <SubDealerPACode>%string%</SubDealerPACode>
                        <GeographicSalesAreaCode>%string%</GeographicSalesAreaCode>
                        <FileDate>%string%</FileDate>
                        <FileNumber>%string%</FileNumber>
                        <RecordCount>%string%</RecordCount>
                        <FileTypeFlag>%string%</FileTypeFlag>
                        <FILECONTROL16-10>%string%</FILECONTROL16-10> <!--renamed 19-03-2014 by Mikhail Tkachenko from FILECONTROL16-8 according to HappyPath 4.01-->
                    </FileTrailer>
                </ERROR>
                <FileHeader lineNumber="%string%" lineLength="%string%">
                    <RecordType>%string%</RecordType>
                    <PACode>%string%</PACode>
                    <FILECONTROL01>%string%</FILECONTROL01>
                    <FILECONTROL02>%string%</FILECONTROL02>
                    <FILECONTROL03>%string%</FILECONTROL03>
                    <FILECONTROL04>%string%</FILECONTROL04>
                    <FileDate>%string%</FileDate>
                    <FileNumber>%string%</FileNumber>
                    <FILECONTROL05>%string%</FILECONTROL05>
                    <FILECONTROL06>%string%</FILECONTROL06>
                    <FILECONTROL05-2>%string%</FILECONTROL05-2>
                    <FILECONTROL07>%string%</FILECONTROL07>
                    <FILECONTROL08>%string%</FILECONTROL08>
                    <FileDate-2>%string%</FileDate-2>
                    <FileNumber-2>%string%</FileNumber-2>
                    <RecordCount>%string%</RecordCount>
                    <SubDealerPACode>%string%</SubDealerPACode>
                    <FILECONTROL09>%string%</FILECONTROL09>
                    <FILECONTROL10>%string%</FILECONTROL10>
                    <FILECONTROL11>%string%</FILECONTROL11>
                    <GeographicSalesAreaCode>%string%</GeographicSalesAreaCode>
                    <FranchiseCode>%string%</FranchiseCode>
                    <DSPSoftwareReleaseVersion>%string%</DSPSoftwareReleaseVersion>
                    <FILECONTROL12>%string%</FILECONTROL12>
                    <FILECONTROL13>%string%</FILECONTROL13>
                    <FILECONTROL14>%string%</FILECONTROL14>
                    <FILECONTROL02-2>%string%</FILECONTROL02-2>
                    <FILECONTROL15>%string%</FILECONTROL15>
                    <VendorID>%string%</VendorID>
                    <FileTypeFlag>%string%</FileTypeFlag>
                    <MultiByteIndicator>%string%</MultiByteIndicator>  <!--added 11-03-2014 by Mikhail Tkachenko-->
                    <FILECONTROL16>%string%</FILECONTROL16>
                </FileHeader>
                <RepairOrderHeader lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                    <RecordType>%string%</RecordType>
                    <VIN>%string%</VIN>
                    <RONumber>%string%</RONumber>
                    <ROXRef>%string%</ROXRef>
                    <ServiceWriterSocialID>%string%</ServiceWriterSocialID> <!--added 12-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17)-->
                    <ROOpenDate truncROOpenDate="%string%">%string%</ROOpenDate>
                    <ROCloseDate truncROCloseDate="%string%">%string%</ROCloseDate>
                    <OdometerReading>%string%</OdometerReading>
                    <OdometerIndicator>%string%</OdometerIndicator>
                    <FirstName>%string%</FirstName>
                    <MiddleInitial>%string%</MiddleInitial>
                    <LastName>%string%</LastName>
                    <Title>%string%</Title>
                    <AddressLine1>%string%</AddressLine1>
                    <AddressLine2>%string%</AddressLine2>
                    <City>%string%</City>
                    <StateOrProvince>%string%</StateOrProvince>
                    <ZipOrPostalCode>%string%</ZipOrPostalCode>
                    <HomePhone>%string%</HomePhone>
                    <WorkPhone>%string%</WorkPhone>
                    <NetCustomerPaidAmount>%string%</NetCustomerPaidAmount>
                    <TaxAmount>%string%</TaxAmount>
                    <LicensePlateNumber>%string%</LicensePlateNumber>
                    <RepairOrderOpenTime>%string%</RepairOrderOpenTime>
                    <RepairOrderCloseTime>%string%</RepairOrderCloseTime>
                    <AppointmentTypeCode>%string%</AppointmentTypeCode>
                    <AppointmentInitiatedDate truncApptInitDate="%string%">%string%</AppointmentInitiatedDate>
                    <ServiceCustomerTypeCode>%string%</ServiceCustomerTypeCode>
                    <ServiceWriterLocalID>%string%</ServiceWriterLocalID>
                    <ServiceWriterSTARSID>%string%</ServiceWriterSTARSID> <!--added 12-03-2014 by Mikhail Tkachenko (instead of ServiceWriterNationalID)-->
                    <CustomerEmail>%string%</CustomerEmail>
                    <CellPhone>%string%</CellPhone>
                    <CustomerCountryCode>%string%</CustomerCountryCode>
                    <AddressLine3>%string%</AddressLine3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <CompanyDescription>%string%</CompanyDescription> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <BusinessEmail>%string%</BusinessEmail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <CustomerEmail2>%string%</CustomerEmail2> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <CustomerEmail3>%string%</CustomerEmail3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <DateOfAppointment>%string%</DateOfAppointment> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <TimeOfAppointment>%string%</TimeOfAppointment> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <InitialEstimateAmount>%string%</InitialEstimateAmount> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <WaiterIndicator>%string%</WaiterIndicator> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <ROInvoiceDate-VehicleReady>%string%</ROInvoiceDate-VehicleReady> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <ROInvoiceTime-ROReady>%string%</ROInvoiceTime-ROReady> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <AddWorkRequestDate>%string%</AddWorkRequestDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <AddWorkRequestTime>%string%</AddWorkRequestTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <AddWorkRequestEstimate>%string%</AddWorkRequestEstimate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <PromisedDate>%string%</PromisedDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <PromisedTime>%string%</PromisedTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <VehiclePickupDate>%string%</VehiclePickupDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <VehiclePickupTime>%string%</VehiclePickupTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <CustomerNumber>%string%</CustomerNumber> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <FILECONTROL16-2>%string%</FILECONTROL16-2>
                </RepairOrderHeader>
                <RepairOrderService awaID="%string%" bundledlaborID="%string%" menupriceID="%string%" espwarrantydeductible="%string%" lineNumber="%string%" lineLength="%string%">
                    <RecordType>%string%</RecordType>
                    <SequenceNumber>%string%</SequenceNumber>
                    <RepairTypeCode>%string%</RepairTypeCode>
                    <TechnicianSocialID>%string%</TechnicianSocialID> <!--added 13-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-2)-->
                    <ServicingDepartmentCode>%string%</ServicingDepartmentCode>
                    <LaborOperationCode>%string%</LaborOperationCode>
                    <LaborChargeAmount>%string%</LaborChargeAmount>
                    <BilledHours>%string%</BilledHours>
                    <SubletOrMiscDescription01>%string%</SubletOrMiscDescription01>
                    <SubletOrMiscDescription02>%string%</SubletOrMiscDescription02>
                    <SubletOrMiscDescription03>%string%</SubletOrMiscDescription03>
                    <SubletOrMiscDescription04>%string%</SubletOrMiscDescription04>
                    <SubletOrMiscDescription05>%string%</SubletOrMiscDescription05>
                    <SubletOrMiscDescription06>%string%</SubletOrMiscDescription06>
                    <SubletOrMiscDescription07>%string%</SubletOrMiscDescription07>
                    <SubletOrMiscDescription08>%string%</SubletOrMiscDescription08>
                    <SubletOrMiscDescription09>%string%</SubletOrMiscDescription09>
                    <SubletOrMiscDescription10>%string%</SubletOrMiscDescription10>
                    <SubletOrMiscAmount01>%string%</SubletOrMiscAmount01>
                    <SubletOrMiscAmount02>%string%</SubletOrMiscAmount02>
                    <SubletOrMiscAmount03>%string%</SubletOrMiscAmount03>
                    <SubletOrMiscAmount04>%string%</SubletOrMiscAmount04>
                    <SubletOrMiscAmount05>%string%</SubletOrMiscAmount05>
                    <SubletOrMiscAmount06>%string%</SubletOrMiscAmount06>
                    <SubletOrMiscAmount07>%string%</SubletOrMiscAmount07>
                    <SubletOrMiscAmount08>%string%</SubletOrMiscAmount08>
                    <SubletOrMiscAmount09>%string%</SubletOrMiscAmount09>
                    <SubletOrMiscAmount10>%string%</SubletOrMiscAmount10>
                    <LaborDescription>
                        <IsAWASplit>%string%</IsAWASplit>
                        <AWAFordPercentage>%string%</AWAFordPercentage>
                        <AWADealerPercentage>%string%</AWADealerPercentage>
                        <AWACustomerPercentage>%string%</AWACustomerPercentage>
                        <LaborDescriptionText>%string%</LaborDescriptionText>
                    </LaborDescription>
                    <TechnicianLocalID>%string%</TechnicianLocalID>
                    <TechnicianSTARSID>%string%</TechnicianSTARSID> <!--added 13-03-2014 by Mikhail Tkachenko (instead of TechnicianNationalID)-->
                    <TechnicianStartDate>%string%</TechnicianStartDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <TechnicianStartTime>%string%</TechnicianStartTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <TechnicianFinishDate>%string%</TechnicianFinishDate> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <TechnicianFinishTime>%string%</TechnicianFinishTime> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <DeclinedServOpCode>%string%</DeclinedServOpCode> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <DeclinedServOpCodeDesc>%string%</DeclinedServOpCodeDesc> <!--added 12-03-2014 by Mikhail Tkachenko-->
                    <FILECONTROL16-3>%string%</FILECONTROL16-3>
                </RepairOrderService>
                <RepairOrderPart awaID="%string%" bundledlaborID="%string%" partcoresaleID="%string%" partsreturn="%string%" partskitID="%string%" menupriceID="%string%"
                                 lineNumber="%string%" lineLength="%string%">
                    <RecordType>%string%</RecordType>
                    <PartNumberPrefix>%string%</PartNumberPrefix>
                    <PartNumberBase>%string%</PartNumberBase>
                    <PartNumberSuffix>%string%</PartNumberSuffix>
                    <Quantity>%string%</Quantity>
                    <SaleAmount>%string%</SaleAmount>
                    <DealerCostAmount>%string%</DealerCostAmount>
                    <Description>
                        <IsAWASplit>%string%</IsAWASplit>
                        <AWAFordPercentage>%string%</AWAFordPercentage>
                        <AWADealerPercentage>%string%</AWADealerPercentage>
                        <AWACustomerPercentage>%string%</AWACustomerPercentage>
                        <DescriptionText>%string%</DescriptionText>
                    </Description>
                    <CausalCode>%string%</CausalCode>
                    <CounterPersonSocialID>%string%</CounterPersonSocialID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-3)-->
                    <CounterPersonLocalID>%string%</CounterPersonLocalID>
                    <CounterPersonSTARSID>%string%</CounterPersonSTARSID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of CounterPersonLocalID)-->
                    <ROPartAddDate>%string%</ROPartAddDate> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <ROPartAddTime>%string%</ROPartAddTime> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <FILECONTROL16-4>%string%</FILECONTROL16-4>
                </RepairOrderPart>
                <OTCPartInvoiceHeader lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                    <RecordType>%string%</RecordType>
                    <InvoiceNumber>%string%</InvoiceNumber>
                    <InvoiceDate truncInvoiceDate="%string%">%string%</InvoiceDate>
                    <LastName>%string%</LastName>
                    <AddressLine1>%string%</AddressLine1>
                    <AddressLine2>%string%</AddressLine2>
                    <City>%string%</City>
                    <StateOrProvince>%string%</StateOrProvince>
                    <ZipOrPostalCode>%string%</ZipOrPostalCode>
                    <CustomerTypeCode>%string%</CustomerTypeCode>
                    <CustomerTaxID>%string%</CustomerTaxID>
                    <TaxAmount>%string%</TaxAmount>
                    <CounterPersonSocialID>%string%</CounterPersonSocialID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-4)-->
                    <CounterPersonLocalID>%string%</CounterPersonLocalID>
                    <CounterPersonSTARSID>%string%</CounterPersonSTARSID> <!--added 14-03-2014 by Mikhail Tkachenko (instead of CounterPersonNationalID)-->
                    <FirstName>%string%</FirstName>
                    <MiddleInitial>%string%</MiddleInitial>
                    <Title>%string%</Title>
                    <CustomerCountryCode>%string%</CustomerCountryCode>
                    <HomePhone>%string%</HomePhone>
                    <WorkPhone>%string%</WorkPhone>
                    <CellPhone>%string%</CellPhone>
                    <CustomerEmail>%string%</CustomerEmail>
                    <DiscountAmount>%string%</DiscountAmount>
                    <ShippingAmount>%string%</ShippingAmount>
                    <SaleType>%string%</SaleType> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleTypeDescription>%string%</SaleTypeDescription> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <AddressLine3>%string%</AddressLine3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <CompanyDescription>%string%</CompanyDescription> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <BusinessEmail>%string%</BusinessEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <CustomerEmail2>%string% </CustomerEmail2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <CustomerEmail3>%string%</CustomerEmail3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <CustomerNumber>%string%</CustomerNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <FILECONTROL16-5>%string%</FILECONTROL16-5>
                </OTCPartInvoiceHeader>
                <OTCPartsInvoicePart partcoresaleID="%string%" partsreturn="%string%" partskitID="%string%" lineNumber="%string%" lineLength="%string%">
                    <RecordType>%string%</RecordType>
                    <PartNumberPrefix>%string%</PartNumberPrefix>
                    <PartNumberBase>%string%</PartNumberBase>
                    <PartNumberSuffix>%string%</PartNumberSuffix>
                    <Quantity>%string%</Quantity>
                    <SaleAmount>%string%</SaleAmount>
                    <DealerCostAmount>%string%</DealerCostAmount>
                    <Description>%string%</Description>
                    <FILECONTROL16-6>%string%</FILECONTROL16-6>
                </OTCPartsInvoicePart>
                <PartsInventory lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                    <RecordType>%string%</RecordType>
                    <QuantityDate truncInventoryDate="%string%">%string%</QuantityDate> <!--renamed 14-03-2014 by Mikhail Tkachenko from InventoryDate according to HappyPath 4.01-->
                    <PartNumberPrefix>%string%</PartNumberPrefix>
                    <PartNumberBase>%string%</PartNumberBase>
                    <PartNumberSuffix>%string%</PartNumberSuffix>
                    <PackedServicePartNumber>%string%</PackedServicePartNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <PartStockingIndicator>%string%</PartStockingIndicator> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <BestStockingLevel>%string%</BestStockingLevel> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <Quantity>%string%</Quantity> <!--renamed 14-03-2014 by Mikhail Tkachenko from QuantityOnHand according to HappyPath 4.01-->
                    <DealerExtendedCost>%string%</DealerExtendedCost> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <DailyInboundQuantity>%string%</DailyInboundQuantity> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <DailyOutboundQuantity>%string%</DailyOutboundQuantity> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <QuantityAdjustment>%string%</QuantityAdjustment> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <QuantityAdjustmentType>%string%</QuantityAdjustmentType> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <DateLastSale>%string%</DateLastSale> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-0>%string%</SaleQuantityCurrentMonth-0> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-1>%string%</SaleQuantityCurrentMonth-1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-2>%string%</SaleQuantityCurrentMonth-2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-3>%string%</SaleQuantityCurrentMonth-3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-4>%string%</SaleQuantityCurrentMonth-4> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-5>%string%</SaleQuantityCurrentMonth-5> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-6>%string%</SaleQuantityCurrentMonth-6> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-7>%string%</SaleQuantityCurrentMonth-7> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-8>%string%</SaleQuantityCurrentMonth-8> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-9>%string%</SaleQuantityCurrentMonth-9> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-10>%string%</SaleQuantityCurrentMonth-10> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-11>%string%</SaleQuantityCurrentMonth-11> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <SaleQuantityCurrentMonth-12>%string%</SaleQuantityCurrentMonth-12> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <FILECONTROL16-7>%string%</FILECONTROL16-7>
                </PartsInventory>
                <!--4.01-->
                <!--new section named ServiceAppointments is added 14-03-2014 by Mikhail Tkachenko-->
                <ServiceAppointments lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                    <RecordType>%string%</RecordType>
                    <AppointmentID>%string%</AppointmentID>
                    <AppointmentType>%string%</AppointmentType>
                    <DateAppointmentInitiated>%string%</DateAppointmentInitiated>
                    <DateOfAppointment>%string%</DateOfAppointment>
                    <TimeOfAppointment>%string%</TimeOfAppointment>
                    <AppointmentSchedulerLocalID>%string%</AppointmentSchedulerLocalID>
                    <AppointmentSchedulerSTARSID>%string%</AppointmentSchedulerSTARSID>
                    <AppointmentSchedulerSocialID>%string%</AppointmentSchedulerSocialID>
                    <VIN>%string%</VIN>
                    <VehicleMake>%string%</VehicleMake>
                    <VehicleModel>%string%</VehicleModel>
                    <VehicleYear>%string%</VehicleYear>
                    <OdometerReading>%string%</OdometerReading>
                    <OdometerIndicator>%string%</OdometerIndicator>
                    <FirstName>%string%</FirstName>
                    <MiddleInitial>%string%</MiddleInitial>
                    <LastName>%string%</LastName>
                    <Title>%string%</Title>
                    <AddressLine1>%string%</AddressLine1>
                    <AddressLine2>%string%</AddressLine2>
                    <AddressLine3>%string%</AddressLine3>
                    <City>%string%</City>
                    <StateOrProvince>%string%</StateOrProvince>
                    <ZipOrPostalCode>%string%</ZipOrPostalCode>
                    <CustomerCountryCode>%string%</CustomerCountryCode>
                    <HomePhone>%string%</HomePhone>
                    <WorkPhone>%string%</WorkPhone>
                    <CellPhone>%string%</CellPhone>
                    <CustomerEmail1>%string%</CustomerEmail1>
                    <CustomerEmail2>%string%</CustomerEmail2>
                    <CustomerEmail3>%string%</CustomerEmail3>
                    <AppointmentConfirmationEmail>%string%</AppointmentConfirmationEmail>
                    <CustomerSelectedLOP1>%string%</CustomerSelectedLOP1>
                    <CustomerSelectedLOP2>%string%</CustomerSelectedLOP2>
                    <CustomerSelectedLOP3>%string%</CustomerSelectedLOP3>
                    <CustomerSelectedLOP4>%string%</CustomerSelectedLOP4>
                    <CustomerSelectedLOP5>%string%</CustomerSelectedLOP5>
                    <CustomerSelectedRepair1>%string%</CustomerSelectedRepair1>
                    <CustomerSelectedRepair2>%string%</CustomerSelectedRepair2>
                    <CustomerSelectedRepair3>%string%</CustomerSelectedRepair3>
                    <CustomerSelectedRepair4>%string%</CustomerSelectedRepair4>
                    <CustomerSelectedRepair5>%string%</CustomerSelectedRepair5>
                    <CustomerSelectedRepairAmount1>%string%</CustomerSelectedRepairAmount1>
                    <CustomerSelectedRepairAmount2>%string%</CustomerSelectedRepairAmount2>
                    <CustomerSelectedRepairAmount3>%string%</CustomerSelectedRepairAmount3>
                    <CustomerSelectedRepairAmount4>%string%</CustomerSelectedRepairAmount4>
                    <CustomerSelectedRepairAmount5>%string%</CustomerSelectedRepairAmount5>
                    <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber>
                    <CompanyDescription>%string%</CompanyDescription>
                    <BusinessEmail>%string%</BusinessEmail>
                    <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail>
                    <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail>
                    <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail>
                    <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail>
                    <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1>
                    <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1>
                    <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2>
                    <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2>
                    <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3>
                    <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3>
                    <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone>
                    <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone>
                    <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone>
                    <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone>
                    <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone>
                    <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone>
                    <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS>
                    <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS>
                    <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS>
                    <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS>
                    <AppointmentStatus>%string%</AppointmentStatus>
                    <FILECONTROL16-9>%string%</FILECONTROL16-9>
                </ServiceAppointments>
                <UsedVehicleSales lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                    <RecordType>%string%</RecordType>
                    <UsedVehicleInvoiceNumber>%string%</UsedVehicleInvoiceNumber>
                    <SaleDate>%string%</SaleDate>
                    <SaleType>%string%</SaleType>
                    <SalesPersonSocialID>%string%</SalesPersonSocialID> <!--added 17-03-2014 by Mikhail Tkachenko (instead of FILECONTROL17-5)-->
                    <SalesPersonLocalID>%string%</SalesPersonLocalID>
                    <SalesPersonSTARSID>%string%</SalesPersonSTARSID> <!--added 17-03-2014 by Mikhail Tkachenko (instead of SalesPersonNationalID)-->
                    <SoldVIN>%string%</SoldVIN>
                    <SoldOdometerReading>%string%</SoldOdometerReading>
                    <SoldOdometerIndicator>%string%</SoldOdometerIndicator>
                    <TradeInVIN>%string%</TradeInVIN>
                    <TradeInOdometerReading>%string%</TradeInOdometerReading>
                    <TradeInOdometerIndicator>%string%</TradeInOdometerIndicator>
                    <CustomerNumber>%string%</CustomerNumber> <!--renamed 19-03-2014 by Mikhail Tkachenko from CustomerContactFlag according to HappyPath 4.01-->
                    <FirstName>%string%</FirstName>
                    <MiddleInitial>%string%</MiddleInitial>
                    <LastName>%string%</LastName>
                    <Title>%string%</Title>
                    <AddressLine1>%string%</AddressLine1>
                    <AddressLine2>%string%</AddressLine2>
                    <City>%string%</City>
                    <StateOrProvince>%string%</StateOrProvince>
                    <ZipOrPostalCode>%string%</ZipOrPostalCode>
                    <HomePhone>%string%</HomePhone>
                    <WorkPhone>%string%</WorkPhone>
                    <CustomerEmail1>%string%</CustomerEmail1>
                    <CustomerEmail2>%string%</CustomerEmail2>
                    <ContractType>%string%</ContractType>
                    <SaleTypeDescription>%string%</SaleTypeDescription>
                    <InventoryType>%string%</InventoryType>
                    <CellPhone>%string%</CellPhone>
                    <CustomerCountryCode>%string%</CustomerCountryCode>
                    <AddressLine3>%string%</AddressLine3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <CompanyDescription>%string%</CompanyDescription> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <BusinessEmail>%string%</BusinessEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <CustomerEmail3>%string%</CustomerEmail3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <LoyaltyProgramMemberNumber>%string%</LoyaltyProgramMemberNumber> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Mail>%string%</OPT_DlrPerm-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Mail>%string%</OPT_CorpExp-Mail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-BusEmail>%string%</OPT_DlrPerm-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-BusEmail>%string%</OPT_CorpExp-BusEmail> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Email1>%string%</OPT_DlrPerm-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Email1>%string%</OPT_CorpExp-Email1> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Email2>%string%</OPT_DlrPerm-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Email2>%string%</OPT_CorpExp-Email2> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-Email3>%string%</OPT_DlrPerm-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-Email3>%string%</OPT_CorpExp-Email3> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-HomePhone>%string%</OPT_DlrPerm-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-HomePhone>%string%</OPT_CorpExp-HomePhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-CellPhone>%string%</OPT_DlrPerm-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-CellPhone>%string%</OPT_CorpExp-CellPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-WorkPhone>%string%</OPT_DlrPerm-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-WorkPhone>%string%</OPT_CorpExp-WorkPhone> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-SMS>%string%</OPT_DlrPerm-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-SMS>%string%</OPT_CorpExp-SMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_DlrPerm-MMS>%string%</OPT_DlrPerm-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <OPT_CorpExp-MMS>%string%</OPT_CorpExp-MMS> <!--added 14-03-2014 by Mikhail Tkachenko -->
                    <FILECONTROL16-8>%string%</FILECONTROL16-8>  <!--renamed 19-03-2014 by Mikhail Tkachenko from FILECONTROL16-10 according to HappyPath 4.01-->
                </UsedVehicleSales>
                <PartsInitialQuantity lineNumber="%string%" lineLength="%string%" currentFileDate="%string%">
                    <RecordType>%string%</RecordType>
                    <QuantityDate>%string%</QuantityDate>
                    <PartNumberPrefix>%string%</PartNumberPrefix>
                    <PartNumberBase>%string%</PartNumberBase>
                    <PartNumberSuffix>%string%</PartNumberSuffix>
                    <QuantityOnHand>%string%</QuantityOnHand>
                    <SaleQuantityCurrentMonth-0>%string%</SaleQuantityCurrentMonth-0>
                    <SaleQuantityCurrentMonth-1>%string%</SaleQuantityCurrentMonth-1>
                    <SaleQuantityCurrentMonth-2>%string%</SaleQuantityCurrentMonth-2>
                    <SaleQuantityCurrentMonth-3>%string%</SaleQuantityCurrentMonth-3>
                    <SaleQuantityCurrentMonth-4>%string%</SaleQuantityCurrentMonth-4>
                    <SaleQuantityCurrentMonth-5>%string%</SaleQuantityCurrentMonth-5>
                    <SaleQuantityCurrentMonth-6>%string%</SaleQuantityCurrentMonth-6>
                    <SaleQuantityCurrentMonth-7>%string%</SaleQuantityCurrentMonth-7>
                    <SaleQuantityCurrentMonth-8>%string%</SaleQuantityCurrentMonth-8>
                    <SaleQuantityCurrentMonth-9>%string%</SaleQuantityCurrentMonth-9>
                    <SaleQuantityCurrentMonth-10>%string%</SaleQuantityCurrentMonth-10>
                    <SaleQuantityCurrentMonth-11>%string%</SaleQuantityCurrentMonth-11>
                    <SaleQuantityCurrentMonth-12>%string%</SaleQuantityCurrentMonth-12>
                    <FILECONTROL16-9>%string%</FILECONTROL16-9>
                </PartsInitialQuantity>
                <FileTrailer lineNumber="%string%" lineLength="%string%">
                    <RecordType>%string%</RecordType>
                    <FILECONTROL18>%string%</FILECONTROL18>
                    <PACode>%string%</PACode>
                    <SubDealerPACode>%string%</SubDealerPACode>
                    <GeographicSalesAreaCode>%string%</GeographicSalesAreaCode>
                    <FileDate>%string%</FileDate>
                    <FileNumber>%string%</FileNumber>
                    <RecordCount>%string%</RecordCount>
                    <FileTypeFlag>%string%</FileTypeFlag>
                    <FILECONTROL16-10>%string%</FILECONTROL16-10> <!--renamed 19-03-2014 by Mikhail Tkachenko from FILECONTROL16-8 according to HappyPath 4.01-->
                </FileTrailer>
            </UDBFile>
        </as:Structure>
    </as:AssemblyStructure>
    <as:BusinessUseContext>
        <as:Rules>
            <as:default>
                <as:context>


                    <!-- TEST CASE SPECIFIC -->

                    <as:constraint condition="not(//ERROR) and (not(./OTCPartInvoiceHeader) or not(./OTCPartsInvoicePart))"
                            action="printMessage(/UDBFile,This Test Case requires a single OTC Part sale to be present in the file.  The file must include both OTC Header and OTC Part records.)"/>

                    <as:constraint condition="not(//ERROR) and (not(count(./OTCPartsInvoicePart) = 3))"
                                   action="printMessage(/UDBFile,This Test Case requires that there are three OTC Part Records for a Part Core Sale.)"/>

                    <as:constraint condition="not(//ERROR) and (not(
            (normalize-space(./OTCPartsInvoicePart[1]/PartNumberPrefix) = normalize-space(./OTCPartsInvoicePart[2]/PartNumberPrefix) and normalize-space(./OTCPartsInvoicePart[1]/PartNumberPrefix) = normalize-space(./OTCPartsInvoicePart[3]/PartNumberPrefix)) and
            (normalize-space(./OTCPartsInvoicePart[1]/PartNumberBase) = normalize-space(./OTCPartsInvoicePart[2]/PartNumberBase) and normalize-space(./OTCPartsInvoicePart[1]/PartNumberBase) = normalize-space(./OTCPartsInvoicePart[3]/PartNumberBase)) and
            (normalize-space(./OTCPartsInvoicePart[1]/PartNumberSuffix) = normalize-space(./OTCPartsInvoicePart[2]/PartNumberSuffix) and normalize-space(./OTCPartsInvoicePart[1]/PartNumberSuffix) = normalize-space(./OTCPartsInvoicePart[3]/PartNumberSuffix))))"
                            action="printMessage(/UDBFile,This Test Case requires all three OTC Part Records used in a Part Core Sale to have identical Part Numbers (Part Prefix, Part Base and Part Suffix).)"/>

                    <as:constraint condition="not(//ERROR) and (not(./OTCPartsInvoicePart[2]/Description[matches(.,'^Core Sale')]))"
                            action="printMessage(/UDBFile,This Test Case requires the words 'Core Sale' to be placed at the beginning of the Part Description field in the second OTC Part Record used in the Part Core Sale.)"/>

                    <as:constraint condition="not(//ERROR) and (not(./OTCPartsInvoicePart[3]/Description[matches(.,'^Core Return')]))"
                            action="printMessage(/UDBFile,This Test Case requires the words 'Core Return' to be placed at the beginning of the Part Description field in the third OTC Part Record used in the Part Core Sale.)"/>

                    <as:constraint condition="not(//ERROR) and (not(
            ./OTCPartsInvoicePart[2]/Quantity &gt; 0 and
            ./OTCPartsInvoicePart[2]/SaleAmount &gt; 0 and
            ./OTCPartsInvoicePart[2]/DealerCostAmount &gt; 0))"
                            action="printMessage(/UDBFile,This Test Case requires that a positive number be shown in the Part Quantity, Part Sale Price and Part Sale Dealer Cost of the second OTC Part Record used in the Part Core Sale.)"/>
                    
                    <!-- MODIFIED 05-27-2014 -->
                    <as:constraint condition="not(//ERROR) and (not(
            ./OTCPartsInvoicePart[3]/Quantity &lt; 0 and
            ./OTCPartsInvoicePart[3]/SaleAmount &gt; 0 and
            ./OTCPartsInvoicePart[3]/DealerCostAmount &gt; 0))"
                            action="printMessage(/UDBFile,This Test Case requires that a negative number be shown in the Part Quantity and a positive number in the Part Sale Price and Part Sale Dealer Cost of the third OTC Part Record used in the Part Core Sale.)"/>


                    <!-- begin new rules -->

                    <as:constraint condition="not(./LaborDescriptionText[matches(.,'.*SPLIT.\d\d-\d\d-\d\d.*')]) and string(normalize-space(./IsAWASplit))='1'"
                                   action="printMessage(/UDBFile/RepairOrderService/LaborDescription, The AWA Labor Description is missing SPLIT NN-NN-NN wording)"/>

                    <as:constraint condition="not(./DescriptionText[matches(.,'.*SPLIT.\d\d-\d\d-\d\d.*')]) and string(normalize-space(./IsAWASplit))='1'"
                                   action="printMessage(/UDBFile/RepairOrderPart/Description, The AWA Part Description is missing SPLIT NN-NN-NN wording)"/>


                    <as:constraint action="makeOptional(//ERROR/ERROR)"/>
                    <as:constraint action="makeRepeatable(//ERROR/ERROR)"/>

                    <as:constraint action="makeOptional(//@awaID)"/>
                    <as:constraint action="makeOptional(//@bundledlaborID)"/>
                    <as:constraint action="makeOptional(//@partcoresaleID)"/>
                    <as:constraint action="makeOptional(//@partsreturn)"/>
                    <as:constraint action="makeOptional(//@partskitID)"/>
                    <as:constraint action="makeOptional(//@menupriceID)"/>
                    <as:constraint action="makeOptional(//@espwarrantydeductible)"/>

                    <as:constraint
                            condition="(number(normalize-space(./AWAFordPercentage)) + number(normalize-space(./AWADealerPercentage)) + number(normalize-space(./AWACustomerPercentage))!=100) and string(normalize-space(./IsAWASplit))='1'"
                            action="printMessage(/UDBFile/RepairOrderPart/Description, The RepairOrderPart AWA split between ford, dealer, and customer does not total 100%.)"/>

                    <as:constraint
                            condition="(number(normalize-space(./AWAFordPercentage)) + number(normalize-space(./AWADealerPercentage)) + number(normalize-space(./AWACustomerPercentage))!=100) and string(normalize-space(./IsAWASplit))='1'"
                            action="printMessage(/UDBFile/RepairOrderService/LaborDescription, The RepairOrderService AWA split between ford, dealer, and customer does not total 100%.)"/>

                    <as:constraint action="makeNillable(//AWACustomerPercentage)"/>
                    <as:constraint action="makeNillable(//AWADealerPercentage)"/>
                    <as:constraint action="makeNillable(//AWAFordPercentage)"/>
                    <as:constraint action="makeOptional(//Description/AWACustomerPercentage)"/>
                    <as:constraint action="makeOptional(//Description/AWADealerPercentage)"/>
                    <as:constraint action="makeOptional(//Description/AWAFordPercentage)"/>

                    <!--  a couple business condition interaction rules to illustrate:
                    A Service Bundle may not have Menu Pricing.
                    A Parts Kit may not be included in Menu Pricing.
                    -->

                    <as:constraint condition="string(normalize-space(@blonumber)) and string(normalize-space(@menuprice))"
                                   action="printMessage(/UDBFile/RepairOrderService, The Service cannot both be bundled labor operation and menu pricing.)"/>

                    <as:constraint condition="string(normalize-space(@partskit)) and string(normalize-space(@menuprice))"
                                   action="printMessage(/UDBFile/RepairOrderService, The Part cannot both be a parts kit and menu pricing.)"/>

                    <!-- end new rules -->

                    <!--<as:constraint action="makeRepeatable(//ERROR/RepairOrderService)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//ERROR/RepairOrderService)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//ERROR/OTCPartsInvoicePart)"/> --> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@possibleRecordType)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundPrecedeFileLineRecordType)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundDate)"/>
                    <!--<as:constraint action="makeOptional(//ERROR/FileHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundTrailerGeographicSalesAreaCode)"/>
                    <!--<as:constraint action="makeRepeatable(//UDBFile/RepairOrderPart)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//UDBFile/FileHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeRepeatable(//UDBFile/OTCPartInvoiceHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@lineCount)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderSubDealerPACode)"/>
                    <!--<as:constraint action="makeRepeatable(//ERROR/RepairOrderHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//UDBFile/OTCPartInvoiceHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundTrailerSubDealerPACode)"/>
                    <!--<as:constraint action="makeRepeatable(//UDBFile/RepairOrderHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//ERROR/OTCPartInvoiceHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundTrailerPACode)"/>
                    <!--<as:constraint action="makeRepeatable(//ERROR/OTCPartInvoiceHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeRepeatable(//UDBFile/RepairOrderService)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundLineLength)"/>
                    <!--<as:constraint action="makeOptional(//UDBFile/RepairOrderPart)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//UDBFile/PartsInventory)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderFileDate)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderRecordCount)"/>
                    <!--<as:constraint action="makeRepeatable(//ERROR/FileTrailer)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderPACode)"/>
                    <!--<as:constraint action="makeOptional(//ERROR/RepairOrderHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//UDBFile/ERROR)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundTrailerFileNumber)"/>
                    <!--<as:constraint action="makeRepeatable(//UDBFile/OTCPartsInvoicePart)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//ERROR/RepairOrderPart)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundTrailerPosition)"/>
                    <!--<as:constraint action="makeOptional(//ERROR/PartsInventory)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundTrailerFileDate)"/>
                    <!--<as:constraint action="makeRepeatable(//ERROR/PartsInventory)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//UDBFile/OTCPartsInvoicePart)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundTrailerRecordCount)"/>
                    <!--<as:constraint action="makeOptional(//UDBFile/FileTrailer)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderGeographicSalesAreaCode)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundRecordType)"/>
                    <!--<as:constraint action="makeOptional(//ERROR/FileTrailer)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeOptional(//UDBFile/RepairOrderService)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeOptional(//ERROR/@possibleLineLength)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderFileDate-2)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderFileNumber)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderFileNumber-2)"/>
                    <!--<as:constraint action="makeOptional(//UDBFile/RepairOrderHeader)"/> --> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeRepeatable(//UDBFile/PartsInventory)"/> --> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeRepeatable(//ERROR/FileHeader)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint action="makeRepeatable(//ERROR/RepairOrderPart)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeRepeatable(//UDBFile/ERROR)"/>
                    <as:constraint action="makeOptional(//ERROR/@foundHeaderPosition)"/>
                    <!--<as:constraint action="makeRepeatable(//ERROR/OTCPartsInvoicePart)"/>--> <!--removed 27-03-2014 by Mikhail Tkachenko-->

                    <!--repeatable and optional constraints for records -->
                    <!--added 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeRepeatable(//FileHeader)"/>
                    <as:constraint action="makeOptional(//FileHeader)"/>
                    <as:constraint action="makeRepeatable(//RepairOrderHeader)"/>
                    <as:constraint action="makeOptional(//RepairOrderHeader)"/>
                    <as:constraint action="makeRepeatable(//RepairOrderService)"/>
                    <as:constraint action="makeOptional(//RepairOrderService)"/>
                    <as:constraint action="makeRepeatable(//RepairOrderPart)"/>
                    <as:constraint action="makeOptional(//RepairOrderPart)"/>
                    <as:constraint action="makeRepeatable(//OTCPartInvoiceHeader)"/>
                    <as:constraint action="makeOptional(//OTCPartInvoiceHeader)"/>
                    <as:constraint action="makeRepeatable(//OTCPartsInvoicePart)"/>
                    <as:constraint action="makeOptional(//OTCPartsInvoicePart)"/>
                    <as:constraint action="makeRepeatable(//PartsInventory)"/>
                    <as:constraint action="makeOptional(//PartsInventory)"/>
                    <as:constraint action="makeRepeatable(//ServiceAppointments)"/>
                    <as:constraint action="makeOptional(//ServiceAppointments)"/>
                    <as:constraint action="makeRepeatable(//UsedVehicleSales)"/>
                    <as:constraint action="makeOptional(//UsedVehicleSales)"/>
                    <as:constraint action="makeRepeatable(//PartsInitialQuantity)"/>
                    <as:constraint action="makeOptional(//PartsInitialQuantity)"/>
                    <as:constraint action="makeRepeatable(//FileTrailer)"/>
                    <as:constraint action="makeOptional(//FileTrailer)"/>

                    <!--nillable and optional constraints for attributes -->
                    <!--added 27-03-2014 by Mikhail Tkachenko-->
                    <as:constraint action="makeNillable(//@lineNumber,xsd)"/>
                    <as:constraint action="makeOptional(//@lineNumber)"/>
                    <as:constraint action="makeNillable(//@lineLength,xsd)"/>
                    <as:constraint action="makeOptional(//@lineLength)"/>
                    <as:constraint action="makeNillable(//@currentFileDate,xsd)"/>
                    <as:constraint action="makeOptional(//@currentFileDate)"/>
                    <as:constraint action="makeNillable(//@truncROOpenDate,xsd)"/>
                    <as:constraint action="makeOptional(//@truncROOpenDate)"/>
                    <as:constraint action="makeNillable(//@truncROCloseDate,xsd)"/>
                    <as:constraint action="makeOptional(//@truncROCloseDate)"/>
                    <as:constraint action="makeNillable(//@truncApptInitDate,xsd)"/>
                    <as:constraint action="makeOptional(//@truncApptInitDate)"/>
                    <as:constraint action="makeNillable(//@awaID,xsd)"/>
                    <as:constraint action="makeOptional(//@awaID)"/>
                    <as:constraint action="makeNillable(//@bundledlaborID,xsd)"/>
                    <as:constraint action="makeOptional(//@bundledlaborID)"/>
                    <as:constraint action="makeNillable(//@menupriceID,xsd)"/>
                    <as:constraint action="makeOptional(//@menupriceID)"/>
                    <as:constraint action="makeNillable(//@espwarrantydeductible,xsd)"/>
                    <as:constraint action="makeOptional(//@espwarrantydeductible)"/>
                    <as:constraint action="makeNillable(//@partcoresaleID,xsd)"/>
                    <as:constraint action="makeOptional(//@partcoresaleID)"/>
                    <as:constraint action="makeNillable(//@partsreturn,xsd)"/>
                    <as:constraint action="makeOptional(//@partsreturn)"/>
                    <as:constraint action="makeNillable(//@partskitID,xsd)"/>
                    <as:constraint action="makeOptional(//@partskitID)"/>
                    <as:constraint action="makeNillable(//@truncInvoiceDate,xsd)"/>
                    <as:constraint action="makeOptional(//@truncInvoiceDate)"/>
                    <as:constraint action="makeNillable(//@truncInventoryDate,xsd)"/>
                    <as:constraint action="makeOptional(//@truncInventoryDate)"/>

                    <!--nillable and optional constraints for fields -->
                    <!--added 27-03-2014 by Mikhail Tkachenko-->
                    <!--FileHeader-->
                    <as:constraint action="makeNillable(//RecordType,xsd)"/>
                    <as:constraint action="makeOptional(//RecordType)"/>
                    <as:constraint action="makeNillable(//PACode,xsd)"/>
                    <as:constraint action="makeOptional(//PACode)"/>
                    <as:constraint action="makeNillable(//FILECONTROL01,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL01)"/>
                    <as:constraint action="makeNillable(//FILECONTROL02,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL02)"/>
                    <as:constraint action="makeNillable(//FILECONTROL03,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL03)"/>
                    <as:constraint action="makeNillable(//FILECONTROL04,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL04)"/>
                    <as:constraint action="makeNillable(//FileDate,xsd)"/>
                    <as:constraint action="makeOptional(//FileDate)"/>
                    <as:constraint action="makeNillable(//FileNumber,xsd)"/>
                    <as:constraint action="makeOptional(//FileNumber)"/>
                    <as:constraint action="makeNillable(//FILECONTROL05,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL05)"/>
                    <as:constraint action="makeNillable(//FILECONTROL06,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL06)"/>
                    <as:constraint action="makeNillable(//FILECONTROL05-2,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL05-2)"/>
                    <as:constraint action="makeNillable(//FILECONTROL07,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL07)"/>
                    <as:constraint action="makeNillable(//FILECONTROL08,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL08)"/>
                    <as:constraint action="makeNillable(//FileDate-2,xsd)"/>
                    <as:constraint action="makeOptional(//FileDate-2)"/>
                    <as:constraint action="makeNillable(//FileNumber-2,xsd)"/>
                    <as:constraint action="makeOptional(//FileNumber-2)"/>
                    <as:constraint action="makeNillable(//RecordCount,xsd)"/>
                    <as:constraint action="makeOptional(//RecordCount)"/>
                    <as:constraint action="makeNillable(//SubDealerPACode,xsd)"/>
                    <as:constraint action="makeOptional(//SubDealerPACode)"/>
                    <as:constraint action="makeNillable(//FILECONTROL09,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL09)"/>
                    <as:constraint action="makeNillable(//FILECONTROL10,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL10)"/>
                    <as:constraint action="makeNillable(//FILECONTROL11,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL11)"/>
                    <as:constraint action="makeNillable(//GeographicSalesAreaCode,xsd)"/>
                    <as:constraint action="makeOptional(//GeographicSalesAreaCode)"/>
                    <as:constraint action="makeNillable(//FranchiseCode,xsd)"/>
                    <as:constraint action="makeOptional(//FranchiseCode)"/>
                    <as:constraint action="makeNillable(//DSPSoftwareReleaseVersion,xsd)"/>
                    <as:constraint action="makeOptional(//DSPSoftwareReleaseVersion)"/>
                    <as:constraint action="makeNillable(//FILECONTROL12,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL12)"/>
                    <as:constraint action="makeNillable(//FILECONTROL13,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL13)"/>
                    <as:constraint action="makeNillable(//FILECONTROL14,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL14)"/>
                    <as:constraint action="makeNillable(//FILECONTROL02-2,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL02-2)"/>
                    <as:constraint action="makeNillable(//FILECONTROL15,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL15)"/>
                    <as:constraint action="makeNillable(//VendorID,xsd)"/>
                    <as:constraint action="makeOptional(//VendorID)"/>
                    <as:constraint action="makeNillable(//FileTypeFlag,xsd)"/>
                    <as:constraint action="makeOptional(//FileTypeFlag)"/>
                    <as:constraint action="makeNillable(//MultiByteIndicator,xsd)"/>
                    <as:constraint action="makeOptional(//MultiByteIndicator)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16)"/>
                    <!--RepairOrderHeader-->
                    <as:constraint action="makeNillable(//VIN,xsd)"/>
                    <as:constraint action="makeOptional(//VIN)"/>
                    <as:constraint action="makeNillable(//RONumber,xsd)"/>
                    <as:constraint action="makeOptional(//RONumber)"/>
                    <as:constraint action="makeNillable(//ROXRef,xsd)"/>
                    <as:constraint action="makeOptional(//ROXRef)"/>
                    <as:constraint action="makeNillable(//ServiceWriterSocialID,xsd)"/>
                    <as:constraint action="makeOptional(//ServiceWriterSocialID)"/>
                    <as:constraint action="makeNillable(//ROOpenDate,xsd)"/>
                    <as:constraint action="makeOptional(//ROOpenDate)"/>
                    <as:constraint action="makeNillable(//ROCloseDate,xsd)"/>
                    <as:constraint action="makeOptional(//ROCloseDate)"/>
                    <as:constraint action="makeNillable(//OdometerReading,xsd)"/>
                    <as:constraint action="makeOptional(//OdometerReading)"/>
                    <as:constraint action="makeNillable(//OdometerIndicator,xsd)"/>
                    <as:constraint action="makeOptional(//OdometerIndicator)"/>
                    <as:constraint action="makeNillable(//FirstName,xsd)"/>
                    <as:constraint action="makeOptional(//FirstName)"/>
                    <as:constraint action="makeNillable(//MiddleInitial,xsd)"/>
                    <as:constraint action="makeOptional(//MiddleInitial)"/>
                    <as:constraint action="makeNillable(//LastName,xsd)"/>
                    <as:constraint action="makeOptional(//LastName)"/>
                    <as:constraint action="makeNillable(//Title,xsd)"/>
                    <as:constraint action="makeOptional(//Title)"/>
                    <as:constraint action="makeNillable(//AddressLine1,xsd)"/>
                    <as:constraint action="makeOptional(//AddressLine1)"/>
                    <as:constraint action="makeNillable(//AddressLine2,xsd)"/>
                    <as:constraint action="makeOptional(//AddressLine2)"/>
                    <as:constraint action="makeNillable(//City,xsd)"/>
                    <as:constraint action="makeOptional(//City)"/>
                    <as:constraint action="makeNillable(//StateOrProvince,xsd)"/>
                    <as:constraint action="makeOptional(//StateOrProvince)"/>
                    <as:constraint action="makeNillable(//ZipOrPostalCode,xsd)"/>
                    <as:constraint action="makeOptional(//ZipOrPostalCode)"/>
                    <as:constraint action="makeNillable(//HomePhone,xsd)"/>
                    <as:constraint action="makeOptional(//HomePhone)"/>
                    <as:constraint action="makeNillable(//WorkPhone,xsd)"/>
                    <as:constraint action="makeOptional(//WorkPhone)"/>
                    <as:constraint action="makeNillable(//NetCustomerPaidAmount,xsd)"/>
                    <as:constraint action="makeOptional(//NetCustomerPaidAmount)"/>
                    <as:constraint action="makeNillable(//TaxAmount,xsd)"/>
                    <as:constraint action="makeOptional(//TaxAmount)"/>
                    <as:constraint action="makeNillable(//LicensePlateNumber,xsd)"/>
                    <as:constraint action="makeOptional(//LicensePlateNumber)"/>
                    <as:constraint action="makeNillable(//RepairOrderOpenTime,xsd)"/>
                    <as:constraint action="makeOptional(//RepairOrderOpenTime)"/>
                    <as:constraint action="makeNillable(//RepairOrderCloseTime,xsd)"/>
                    <as:constraint action="makeOptional(//RepairOrderCloseTime)"/>
                    <as:constraint action="makeNillable(//AppointmentTypeCode,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentTypeCode)"/>
                    <as:constraint action="makeNillable(//AppointmentInitiatedDate,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentInitiatedDate)"/>
                    <as:constraint action="makeNillable(//ServiceCustomerTypeCode,xsd)"/>
                    <as:constraint action="makeOptional(//ServiceCustomerTypeCode)"/>
                    <as:constraint action="makeNillable(//ServiceWriterLocalID,xsd)"/>
                    <as:constraint action="makeOptional(//ServiceWriterLocalID)"/>
                    <as:constraint action="makeNillable(//ServiceWriterSTARSID,xsd)"/>
                    <as:constraint action="makeOptional(//ServiceWriterSTARSID)"/>
                    <as:constraint action="makeNillable(//CustomerEmail,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerEmail)"/>
                    <as:constraint action="makeNillable(//CellPhone,xsd)"/>
                    <as:constraint action="makeOptional(//CellPhone)"/>
                    <as:constraint action="makeNillable(//CustomerCountryCode,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerCountryCode)"/>
                    <as:constraint action="makeNillable(//AddressLine3,xsd)"/>
                    <as:constraint action="makeOptional(//AddressLine3)"/>
                    <as:constraint action="makeNillable(//CompanyDescription,xsd)"/>
                    <as:constraint action="makeOptional(//CompanyDescription)"/>
                    <as:constraint action="makeNillable(//BusinessEmail,xsd)"/>
                    <as:constraint action="makeOptional(//BusinessEmail)"/>
                    <as:constraint action="makeNillable(//CustomerEmail2,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerEmail2)"/>
                    <as:constraint action="makeNillable(//CustomerEmail3,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerEmail3)"/>
                    <as:constraint action="makeNillable(//DateOfAppointment,xsd)"/>
                    <as:constraint action="makeOptional(//DateOfAppointment)"/>
                    <as:constraint action="makeNillable(//TimeOfAppointment,xsd)"/>
                    <as:constraint action="makeOptional(//TimeOfAppointment)"/>
                    <as:constraint action="makeNillable(//InitialEstimateAmount,xsd)"/>
                    <as:constraint action="makeOptional(//InitialEstimateAmount)"/>
                    <as:constraint action="makeNillable(//WaiterIndicator,xsd)"/>
                    <as:constraint action="makeOptional(//WaiterIndicator)"/>
                    <as:constraint action="makeNillable(//ROInvoiceDate-VehicleReady,xsd)"/>
                    <as:constraint action="makeOptional(//ROInvoiceDate-VehicleReady)"/>
                    <as:constraint action="makeNillable(//ROInvoiceTime-ROReady,xsd)"/>
                    <as:constraint action="makeOptional(//ROInvoiceTime-ROReady)"/>
                    <as:constraint action="makeNillable(//AddWorkRequestDate,xsd)"/>
                    <as:constraint action="makeOptional(//AddWorkRequestDate)"/>
                    <as:constraint action="makeNillable(//AddWorkRequestTime,xsd)"/>
                    <as:constraint action="makeOptional(//AddWorkRequestTime)"/>
                    <as:constraint action="makeNillable(//AddWorkRequestEstimate,xsd)"/>
                    <as:constraint action="makeOptional(//AddWorkRequestEstimate)"/>
                    <as:constraint action="makeNillable(//PromisedDate,xsd)"/>
                    <as:constraint action="makeOptional(//PromisedDate)"/>
                    <as:constraint action="makeNillable(//PromisedTime,xsd)"/>
                    <as:constraint action="makeOptional(//PromisedTime)"/>
                    <as:constraint action="makeNillable(//VehiclePickupDate,xsd)"/>
                    <as:constraint action="makeOptional(//VehiclePickupDate)"/>
                    <as:constraint action="makeNillable(//VehiclePickupTime,xsd)"/>
                    <as:constraint action="makeOptional(//VehiclePickupTime)"/>
                    <as:constraint action="makeNillable(//LoyaltyProgramMemberNumber,xsd)"/>
                    <as:constraint action="makeOptional(//LoyaltyProgramMemberNumber)"/>
                    <as:constraint action="makeNillable(//CustomerNumber,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerNumber)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-Mail,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-Mail)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-Mail,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-Mail)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-BusEmail,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-BusEmail)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-BusEmail,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-BusEmail)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-Email1,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-Email1)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-Email1,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-Email1)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-Email2,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-Email2)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-Email2,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-Email2)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-Email3,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-Email3)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-Email3,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-Email3)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-HomePhone,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-HomePhone)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-HomePhone,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-HomePhone)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-CellPhone,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-CellPhone)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-CellPhone,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-CellPhone)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-WorkPhone,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-WorkPhone)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-WorkPhone,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-WorkPhone)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-SMS,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-SMS)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-SMS,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-SMS)"/>
                    <as:constraint action="makeNillable(//OPT_DlrPerm-MMS,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_DlrPerm-MMS)"/>
                    <as:constraint action="makeNillable(//OPT_CorpExp-MMS,xsd)"/>
                    <as:constraint action="makeOptional(//OPT_CorpExp-MMS)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16-2,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-2)"/>
                    <!--RepairOrderService-->
                    <as:constraint action="makeNillable(//SequenceNumber,xsd)"/>
                    <as:constraint action="makeOptional(//SequenceNumber)"/>
                    <as:constraint action="makeNillable(//RepairTypeCode,xsd)"/>
                    <as:constraint action="makeOptional(//RepairTypeCode)"/>
                    <as:constraint action="makeNillable(//TechnicianSocialID,xsd)"/>
                    <as:constraint action="makeOptional(//TechnicianSocialID)"/>
                    <as:constraint action="makeNillable(//ServicingDepartmentCode,xsd)"/>
                    <as:constraint action="makeOptional(//ServicingDepartmentCode)"/>
                    <as:constraint action="makeNillable(//LaborOperationCode,xsd)"/>
                    <as:constraint action="makeOptional(//LaborOperationCode)"/>
                    <as:constraint action="makeNillable(//LaborChargeAmount,xsd)"/>
                    <as:constraint action="makeOptional(//LaborChargeAmount)"/>
                    <as:constraint action="makeNillable(//BilledHours,xsd)"/>
                    <as:constraint action="makeOptional(//BilledHours)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription01,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription01)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription02,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription02)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription03,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription03)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription04,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription04)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription05,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription05)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription06,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription06)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription07,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription07)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription08,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription08)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription09,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription09)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscDescription10,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscDescription010)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount01,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount01)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount02,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount02)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount03,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount03)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount04,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount04)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount05,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount05)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount06,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount06)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount07,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount07)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount08,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount08)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount09,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount09)"/>
                    <as:constraint action="makeNillable(//SubletOrMiscAmount10,xsd)"/>
                    <as:constraint action="makeOptional(//SubletOrMiscAmount10)"/>
                    <as:constraint action="makeNillable(//LaborDescription,xsd)"/>
                    <as:constraint action="makeOptional(//LaborDescription)"/>
                    <as:constraint action="makeNillable(//IsAWASplit,xsd)"/>
                    <as:constraint action="makeOptional(//IsAWASplit)"/>
                    <as:constraint action="makeNillable(//AWAFordPercentage,xsd)"/>
                    <as:constraint action="makeOptional(//AWAFordPercentage)"/>
                    <as:constraint action="makeNillable(//AWADealerPercentage,xsd)"/>
                    <as:constraint action="makeOptional(//AWADealerPercentage)"/>
                    <as:constraint action="makeNillable(//AWACustomerPercentage,xsd)"/>
                    <as:constraint action="makeOptional(//AWACustomerPercentage)"/>
                    <as:constraint action="makeNillable(//LaborDescriptionText,xsd)"/>
                    <as:constraint action="makeOptional(//LaborDescriptionText)"/>
                    <as:constraint action="makeNillable(//TechnicianLocalID,xsd)"/>
                    <as:constraint action="makeOptional(//TechnicianLocalID)"/>
                    <as:constraint action="makeNillable(//TechnicianSTARSID,xsd)"/>
                    <as:constraint action="makeOptional(//TechnicianSTARSID)"/>
                    <as:constraint action="makeNillable(//TechnicianStartDate,xsd)"/>
                    <as:constraint action="makeOptional(//TechnicianStartDate)"/>
                    <as:constraint action="makeNillable(//TechnicianStartTime,xsd)"/>
                    <as:constraint action="makeOptional(//TechnicianStartTime)"/>
                    <as:constraint action="makeNillable(//TechnicianFinishDate,xsd)"/>
                    <as:constraint action="makeOptional(//TechnicianFinishDate)"/>
                    <as:constraint action="makeNillable(//TechnicianFinishTime,xsd)"/>
                    <as:constraint action="makeOptional(//TechnicianFinishTime)"/>
                    <as:constraint action="makeNillable(//DeclinedServOpCode,xsd)"/>
                    <as:constraint action="makeOptional(//DeclinedServOpCode)"/>
                    <as:constraint action="makeNillable(//DeclinedServOpCodeDesc,xsd)"/>
                    <as:constraint action="makeOptional(//DeclinedServOpCodeDesc)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16-3,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-3)"/>
                    <!--RepairOrderPart-->
                    <as:constraint action="makeNillable(//PartNumberPrefix,xsd)"/>
                    <as:constraint action="makeOptional(//PartNumberPrefix)"/>
                    <as:constraint action="makeNillable(//PartNumberBase,xsd)"/>
                    <as:constraint action="makeOptional(//PartNumberBase)"/>
                    <as:constraint action="makeNillable(//PartNumberSuffix,xsd)"/>
                    <as:constraint action="makeOptional(//PartNumberSuffix)"/>
                    <as:constraint action="makeNillable(//Quantity,xsd)"/>
                    <as:constraint action="makeOptional(//Quantity)"/>
                    <as:constraint action="makeNillable(//SaleAmount,xsd)"/>
                    <as:constraint action="makeOptional(//SaleAmount)"/>
                    <as:constraint action="makeNillable(//DealerCostAmount,xsd)"/>
                    <as:constraint action="makeOptional(//DealerCostAmount)"/>
                    <as:constraint action="makeNillable(//Description,xsd)"/>
                    <as:constraint action="makeOptional(//Description)"/>
                    <as:constraint action="makeNillable(//DescriptionText,xsd)"/>
                    <as:constraint action="makeOptional(//DescriptionText)"/>
                    <as:constraint action="makeNillable(//CausalCode,xsd)"/>
                    <as:constraint action="makeOptional(//CausalCode)"/>
                    <as:constraint action="makeNillable(//CounterPersonSocialID,xsd)"/>
                    <as:constraint action="makeOptional(//CounterPersonSocialID)"/>
                    <as:constraint action="makeNillable(//CounterPersonLocalID,xsd)"/>
                    <as:constraint action="makeOptional(//CounterPersonLocalID)"/>
                    <as:constraint action="makeNillable(//CounterPersonSTARSID,xsd)"/>
                    <as:constraint action="makeOptional(//CounterPersonSTARSID)"/>
                    <as:constraint action="makeNillable(//ROPartAddDate,xsd)"/>
                    <as:constraint action="makeOptional(//ROPartAddDate)"/>
                    <as:constraint action="makeNillable(//ROPartAddTime,xsd)"/>
                    <as:constraint action="makeOptional(//ROPartAddTime)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16-4,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-4)"/>
                    <!--OTCPartInvoiceHeader-->
                    <as:constraint action="makeNillable(//InvoiceNumber,xsd)"/>
                    <as:constraint action="makeOptional(//InvoiceNumber)"/>
                    <as:constraint action="makeNillable(//InvoiceDate,xsd)"/>
                    <as:constraint action="makeOptional(//InvoiceDate)"/>
                    <as:constraint action="makeNillable(//CustomerTypeCode,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerTypeCode)"/>
                    <as:constraint action="makeNillable(//CustomerTaxID,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerTaxID)"/>
                    <as:constraint action="makeNillable(//DiscountAmount,xsd)"/>
                    <as:constraint action="makeOptional(//DiscountAmount)"/>
                    <as:constraint action="makeNillable(//ShippingAmount,xsd)"/>
                    <as:constraint action="makeOptional(//ShippingAmount)"/>
                    <as:constraint action="makeNillable(//SaleType,xsd)"/>
                    <as:constraint action="makeOptional(//SaleType)"/>
                    <as:constraint action="makeNillable(//SaleTypeDescription,xsd)"/>
                    <as:constraint action="makeOptional(//SaleTypeDescription)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16-5,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-5)"/>
                    <!--OTCPartsInvoicePart-->
                    <as:constraint action="makeNillable(//FILECONTROL16-6,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-6)"/>
                    <!--PartsInventory-->
                    <as:constraint action="makeNillable(//QuantityDate,xsd)"/>
                    <as:constraint action="makeOptional(//QuantityDate)"/>
                    <as:constraint action="makeNillable(//PackedServicePartNumber,xsd)"/>
                    <as:constraint action="makeOptional(//PackedServicePartNumber)"/>
                    <as:constraint action="makeNillable(//PartStockingIndicator,xsd)"/>
                    <as:constraint action="makeOptional(//PartStockingIndicator)"/>
                    <as:constraint action="makeNillable(//BestStockingLevel,xsd)"/>
                    <as:constraint action="makeOptional(//BestStockingLevel)"/>
                    <as:constraint action="makeNillable(//DealerExtendedCost,xsd)"/>
                    <as:constraint action="makeOptional(//DealerExtendedCost)"/>
                    <as:constraint action="makeNillable(//DailyInboundQuantity,xsd)"/>
                    <as:constraint action="makeOptional(//DailyInboundQuantity)"/>
                    <as:constraint action="makeNillable(//QuantityAdjustment,xsd)"/>
                    <as:constraint action="makeOptional(//QuantityAdjustment)"/>
                    <as:constraint action="makeNillable(//QuantityAdjustmentType,xsd)"/>
                    <as:constraint action="makeOptional(//QuantityAdjustmentType)"/>
                    <as:constraint action="makeNillable(//DateLastSale,xsd)"/>
                    <as:constraint action="makeOptional(//DateLastSale)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-0,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-0)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-1,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-1)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-2,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-2)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-3,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-3)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-4,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-4)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-5,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-5)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-6,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-6)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-7,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-7)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-8,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-8)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-9,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-9)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-10,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-10)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-11,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-11)"/>
                    <as:constraint action="makeNillable(//SaleQuantityCurrentMonth-12,xsd)"/>
                    <as:constraint action="makeOptional(//SaleQuantityCurrentMonth-12)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16-7,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-7)"/>
                    <!--ServiceAppointments-->
                    <as:constraint action="makeNillable(//AppointmentID,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentID)"/>
                    <as:constraint action="makeNillable(//AppointmentType,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentType)"/>
                    <as:constraint action="makeNillable(//DateAppointmentInitiated,xsd)"/>
                    <as:constraint action="makeOptional(//DateAppointmentInitiated)"/>
                    <as:constraint action="makeNillable(//AppointmentSchedulerLocalID,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentSchedulerLocalID)"/>
                    <as:constraint action="makeNillable(//AppointmentSchedulerSTARSID,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentSchedulerSocialID)"/>
                    <as:constraint action="makeNillable(//AppointmentSchedulerSocialID,xsd)"/>
                    <as:constraint action="makeOptional(//VehicleMake)"/>
                    <as:constraint action="makeNillable(//VehicleMake,xsd)"/>
                    <as:constraint action="makeOptional(//VehicleModel)"/>
                    <as:constraint action="makeNillable(//VehicleModel,xsd)"/>
                    <as:constraint action="makeOptional(//VehicleYear)"/>
                    <as:constraint action="makeNillable(//VehicleYear,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerEmail1)"/>
                    <as:constraint action="makeNillable(//CustomerEmail1,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentConfirmationEmail)"/>
                    <as:constraint action="makeNillable(//AppointmentConfirmationEmail,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedLOP1)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedLOP1,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedLOP2)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedLOP2,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedLOP3)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedLOP3,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedLOP4)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedLOP4,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedLOP5)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedLOP5,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepair1)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepair1,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepair2)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepair2,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepair3)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepair3,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepair4)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepair4,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepair5)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepair5,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepairAmount1)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepairAmount1,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepairAmount2)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepairAmount2,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepairAmount3)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepairAmount3,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepairAmount4)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepairAmount4,xsd)"/>
                    <as:constraint action="makeOptional(//CustomerSelectedRepairAmount5)"/>
                    <as:constraint action="makeNillable(//CustomerSelectedRepairAmount5,xsd)"/>
                    <as:constraint action="makeOptional(//AppointmentStatus)"/>
                    <as:constraint action="makeNillable(//AppointmentStatus,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-9)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16-9,xsd)"/>
                    <!--UsedVehicleSales-->
                    <as:constraint action="makeOptional(//UsedVehicleInvoiceNumber)"/>
                    <as:constraint action="makeNillable(//UsedVehicleInvoiceNumber,xsd)"/>
                    <as:constraint action="makeOptional(//SaleDate)"/>
                    <as:constraint action="makeNillable(//SaleDate,xsd)"/>
                    <as:constraint action="makeOptional(//SalesPersonSocialID)"/>
                    <as:constraint action="makeNillable(//SalesPersonSocialID,xsd)"/>
                    <as:constraint action="makeOptional(//SalesPersonLocalID)"/>
                    <as:constraint action="makeNillable(//SalesPersonLocalID,xsd)"/>
                    <as:constraint action="makeOptional(//SalesPersonSTARSID)"/>
                    <as:constraint action="makeNillable(//SalesPersonSTARSID,xsd)"/>
                    <as:constraint action="makeOptional(//SoldVIN)"/>
                    <as:constraint action="makeNillable(//SoldVIN,xsd)"/>
                    <as:constraint action="makeOptional(//SoldOdometerReading)"/>
                    <as:constraint action="makeNillable(//SoldOdometerReading,xsd)"/>
                    <as:constraint action="makeOptional(//SoldOdometerIndicator)"/>
                    <as:constraint action="makeNillable(//SoldOdometerIndicator,xsd)"/>
                    <as:constraint action="makeOptional(//TradeInVIN)"/>
                    <as:constraint action="makeNillable(//TradeInVIN,xsd)"/>
                    <as:constraint action="makeOptional(//TradeInOdometerReading)"/>
                    <as:constraint action="makeNillable(//TradeInOdometerReading,xsd)"/>
                    <as:constraint action="makeOptional(//TradeInOdometerIndicator)"/>
                    <as:constraint action="makeNillable(//TradeInOdometerIndicator,xsd)"/>
                    <as:constraint action="makeOptional(//ContractType)"/>
                    <as:constraint action="makeNillable(//ContractType,xsd)"/>
                    <as:constraint action="makeOptional(//InventoryType)"/>
                    <as:constraint action="makeNillable(//InventoryType,xsd)"/>
                    <as:constraint action="makeOptional(//FILECONTROL16-8)"/>
                    <as:constraint action="makeNillable(//FILECONTROL16-8,xsd)"/>
                    <!--PartsInitialQuantity-->
                    <as:constraint action="makeOptional(//QuantityOnHand)"/>
                    <as:constraint action="makeNillable(//QuantityOnHand,xsd)"/>
                    <!--FileTrailer-->
                    <as:constraint action="makeOptional(//FILECONTROL18)"/>
                    <as:constraint action="makeNillable(//FILECONTROL18,xsd)"/>


                    <!--FIELD DATA RULES -->

                    <!-- File Header -->
                    <as:constraint condition="not(./PACode[matches(.,'^[0-9A-Za-z]{5}$')])"
                                   action="printMessage(/UDBFile/FileHeader,The Ford Parts and Accessories Code in the File Header Record must be a 5 character alpha-numeric value.)"/>
                    <as:constraint condition="not(./FileDate[matches(.,'^((((0[13578]|1[02])(0[1-9]|[12]\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\d|30)|02(0[1-9]|1\d|2[0-8]))\d{2})|0229([02468][048]|[13579][26]))$')])"
                                   action="printMessage(/UDBFile/FileHeader,The File Date (date the file was created) in positions (51-56) of the File Header Record must be a valid date in the format MMDDYY.)"/>
                    <as:constraint condition="not(./FileNumber[matches(.,'^0[1-9]|[1-9][0-9]$')])"
                                   action="printMessage(/UDBFile/FileHeader,The File Number in positions (57-58) of the File Header Record (number of the current file in process) must be a 2 digit numeric value greater than 0.)"/>
                    <as:constraint condition="not(./FileDate-2[matches(.,'^((((0[13578]|1[02])(0[1-9]|[12]\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\d|30)|02(0[1-9]|1\d|2[0-8]))\d{2})|0229([02468][048]|[13579][26]))$')])"
                                   action="printMessage(/UDBFile/FileHeader,The File Date (date the file was created) in positions (92-97) of the File Header Record must be a valid date in the format MMDDYY.)"/>
                    <as:constraint condition="not(./FileNumber-2[matches(.,'^0[1-9]|[1-9][0-9]$')])"
                                   action="printMessage(/UDBFile/FileHeader,The File Number in positions (98-99) of the File Header Record (number of the current file in process) must be a 2 digit numeric value greater than 0.)"/>
                    <as:constraint condition="not(./RecordCount[matches(.,'^[0-9]{8}$')])"
                                   action="printMessage(/UDBFile/FileHeader,The Record Count in the File Header Record (total number of records submitted) must be an 8 digit numeric value greater than 2.)"/>
                    <as:constraint condition="string(normalize-space(./SubDealerPACode)) and not(./SubDealerPACode[matches(normalize-space(.),'^[0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$')])"
                                   action="printMessage(/UDBFile/FileHeader,The Sub Dealer P &amp;amp; A Code in the File Header Record must be an alpha-numeric value.)"/>
                    <as:constraint condition="not(./VendorID[matches(.,'^[0-9A-Za-z]{6}$')])"
                                   action="printMessage(/UDBFile/FileHeader,The VendorID (as assigned by the CDS Analyst) must be a 6 character alpha-numeric value.)"/>
                    <!-- 3.21R -->
                    <as:constraint condition="not(./FileTypeFlag[matches(.,'^[DH]$')])"
                                   action="printMessage(/UDBFile/FileHeader,The File Type Flag must be either D (daily) or H (history).)"/>
                    <!--4.01-->
                    <!--updated 14-04-2014 by Mikhail Tkachenko (GeographicSalesAreaCode).Error message updated-->
                    <as:constraint condition="not(./GeographicSalesAreaCode[matches(normalize-space(.),'^[A-Z]{3}$')])"
                                   action="printMessage(/UDBFile/FileHeader,The Geographic Sales Area Code in positions (129-131) of the File Header Record must be upper case.)"/>
                    <!--updated 14-04-2014 by Mikhail Tkachenko (FranchiseCode). '11', '14', 'A', 'LR', 'MA' values are excluded. Error message updated-->
                    <as:constraint condition="string(normalize-space(./FranchiseCode)) and (not(normalize-space(./FranchiseCode) = '1' or normalize-space(./FranchiseCode) = '3' or normalize-space(./FranchiseCode) = 'U'))"
                                   action="printMessage(/UDBFile/FileHeader,The Franchise Code in positions (132-133) of the File Header Record must be from the enumerated list ('1', '3' and 'U').)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (MultiByteIndicator).-->
                    <as:constraint condition="not(./MultiByteIndicator[matches(.,'^[MS]$')])"
                                   action="printMessage(/UDBFile/FileHeader,The Multibyte Indicator must be either M (Multibyte) or S (Single Byte).)"/>


                    <!-- RO Header -->
                    <as:constraint condition="not(./ROOpenDate[matches(normalize-space(.),'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Open Date (date repair order created) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <as:constraint condition="not(./ROCloseDate[matches(normalize-space(.),'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Close Date (date repair order closed) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--updated 29-04-2014 by Mikhail Tkachenko (ROOpenDate). Now dates comparing directly from fields but not from attributes -->
                    <as:constraint condition="number(substring(./ROOpenDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Open Date (date repair order opened) in the Repair Order Header Record must not be greater than the File Date.)"/>
                    <!--updated 29-04-2014 by Mikhail Tkachenko (ROCloseDate). Now dates comparing directly from fields but not from attributes -->
                    <as:constraint condition="number(substring(./ROCloseDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Close Date (date repair order closed) in the Repair Order Header Record must not be greater than the File Date.)"/>

                    <!-- 01-03-2013 -->
                    <as:constraint condition="./ROOpenDate/@truncROOpenDate &gt; ./ROCloseDate/@truncROCloseDate"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Close Date (date repair order closed) in the Repair Order Header Record is earlier than the corresponding RO Open Date (date the repair order was opened) in the RO Header Record. )"/>
                    <!--updated 29-04-2014 by Mikhail Tkachenko (AppointmentInitiatedDate). Now dates comparing directly from fields but not from attributes -->
                    <as:constraint condition="number(substring(./AppointmentInitiatedDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Date Appointment Initiated (date customer contacted dealership for appointment) in the Repair Order Header Record must not be greater than the File Date.)"/>

                    <as:constraint condition="not(./OdometerReading[matches(normalize-space(.),'^[0-9]{6}$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Odometer Reading in the Repair Order Header record should be numeric only.)"/>
                    <as:constraint condition="not(./OdometerIndicator[matches(normalize-space(.),'^[MK]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Odometer Indicator (miles or kilometer)  in the Repair Order Header Record must be either M or K.)"/>

                    <!-- PHONES -->
                    <!--updated 11-04-2014 by Mikhail Tkachenko (HomePhone). Condition was: string(normalize-space(./HomePhone)) and (./HomePhone[matches(.,'[A-Za-z*,;\-:=+_?#$%@\^\\/!>|}{]')] or contains(./HomePhone,'[') or contains(./HomePhone,']'))-->
                    <as:constraint condition="not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Home Phone in the Repair Order Header Record must be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (WorkPhone). Condition was: string(normalize-space(./WorkPhone)) and (./WorkPhone[matches(.,'[A-Za-z*,;\-:=+_?#$%@\^\\/!>|}{]')] or contains(./WorkPhone,'[') or contains(./WorkPhone,']')-->
                    <as:constraint condition="not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Work Phone in the Repair Order Header Record must be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (CellPhone). Condition was: string(normalize-space(./CellPhone)) and (./CellPhone[matches(.,'[A-Za-z*,;\-:=+_?#$%@\^\\/!>|}{]')] or contains(./CellPhone,'[') or contains(./CellPhone,']'))-->
                    <as:constraint condition="not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Cell Phone in the Repair Order Header Record must be numeric only. Do NOT fill in extra spaces with zeros.)"/>

                    <as:constraint condition="string(./NetCustomerPaidAmount) and not(./NetCustomerPaidAmount[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Net Customer Paid Amount (amount which the customer is expected to pay) in the Repair Order Header Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="string(./TaxAmount) and not(./TaxAmount[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Tax Amount (amount as it appears on the Repair Order)  in the Repair Order Header Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./RepairOrderOpenTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Repair Order Open Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59). )"/>
                    <as:constraint condition="not(./RepairOrderCloseTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Repair Order Close Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59). )"/>
                    <!--updated 09-04-2014 by Mikhail Tkachenko (AppointmentInitiatedDate). It now allows "00000000" value-->
                    <as:constraint condition="not(./AppointmentInitiatedDate[matches(.,'^0{8}$')]) and not(./AppointmentInitiatedDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Date Appointment Initiated (date customer contacted dealership for appointment) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <as:constraint condition="string(normalize-space(./ServiceWriterNationalID)) and (./ServiceWriterNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!>|}{()]')] or contains(./ServiceWriterNationalID,'[') or contains(./ServiceWriterNationalID,']'))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Writer - National ID in the Repair Order Header Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.)"/>
                    <!-- 3.21R -->
                    <as:constraint condition="string(normalize-space(./CustomerEmail)) and not(./CustomerEmail[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Email in the Repair Order Header Record must be a valid email address.)"/>
                    <!--added 14-03-2014 by Mikhail Tkachenko (BusinessEmail)-->
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and not(./BusinessEmail[matches(normalize-space(.),'@')]) and not(./BusinessEmail[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Business Email in the Repair Order Header Record must be a valid email address.)"/>
                    <!--added 14-03-2014 by Mikhail Tkachenko (CustomerEmail2)-->
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and not(./CustomerEmail2[matches(normalize-space(.),'@')]) and not(./CustomerEmail2[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Email 2 in the Repair Order Header Record must be a valid email address.)"/>
                    <!--added 14-03-2014 by Mikhail Tkachenko (CustomerEmail3)-->
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and not(./CustomerEmail3[matches(normalize-space(.),'@')]) and not(./CustomerEmail3[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Email 3 in the Repair Order Header Record must be a valid email address.)"/>
                    <!--updated 14-04-2014 by Mikhail Tkachenko (VIN)-->
                    <as:constraint condition="not(./VIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The VIN in the Repair Order Header Record should be alpha-numeric only.)"/>
                    <!-- 11-06-2012 -->
                    <as:constraint condition="./RONumber = '0000000000000000'"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Repair Order Number in the Repair Order Header Record was either empty or all zeros. A Repair Order Number is required.)"/>
                    <!--updated 14-04-2014 by Mikhail Tkachenko (RONumber)-->
                    <as:constraint condition="not(./RONumber[matches(.,'^[a-zA-Z0-9]*$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Repair Order Number in the Repair Order Header Record should be alpha-numeric only.)"/>
                    <!--updated 14-04-2014 by Mikhail Tkachenko (ROXRef)-->
                    <as:constraint condition="not(./ROXRef[matches(.,'^[a-zA-Z0-9]*$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Repair Order Cross-Reference Number in the Repair Order Header Record should be alpha-numeric only.)"/>
                    <!--updated 14-04-2014 by Mikhail Tkachenko (City)-->
                    <as:constraint condition="./City[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The City in the Repair Order Header Record must not contain numbers.)"/>
                    <as:constraint condition="./StateOrProvince[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The State/Province in the Repair Order Header Record must not contain numbers.)"/>
                    <!--4.01-->
                    <!--added 12-03-2014 by Mikhail Tkachenko (ServiceWriterSTARSID)-->
                    <as:constraint condition="not(./ServiceWriterSTARSID[matches(.,'^([0-9]{9}|\s*)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Writer STARS ID in the Repair Order Header Record allows numerical or spaces filled values only.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (CustomerCountryCode). Error message is changed-->
                    <as:constraint condition="string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Country Code in the Repair Order Header Record must be upper case characters from the ISO 3166-1 alpha-3 list or space filled.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (DateOfAppointment). It now allows "00000000" value. Error message is changed -->
                    <as:constraint condition="not(./DateOfAppointment[matches(.,'^0{8}$')]) and not(./DateOfAppointment[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Date of Appointment (Date the appointment was scheduled for) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--added 12-03-2014 by Mikhail Tkachenko (TimeOfAppointment)-->
                    <as:constraint condition="string(./TimeOfAppointment) and not(./TimeOfAppointment[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Time Of Appointment in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--added 12-03-2014 by Mikhail Tkachenko (InitialEstimateAmount)-->
                    <as:constraint condition="not(./InitialEstimateAmount[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Initial Estimate Amount in the Repair Order Header Record allows positive numeric values only.)"/>
                    <!--added 12-03-2014 by Mikhail Tkachenko (WaiterIndicator)-->
                    <as:constraint condition="not(./WaiterIndicator[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Waiter Indicator in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (ROInvoiceDate-VehicleReady). Error message is changed.-->
                    <as:constraint condition="not(./ROInvoiceDate-VehicleReady[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Invoice Date (Vehicle Ready) (Date when charges have been applied) in the Repair Order Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--updated 11-03-2014 by Mikhail Tkachenko (ROInvoiceTime-ROReady). Error message is changed.-->
                    <as:constraint condition="not(./ROInvoiceTime-ROReady[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Invoice Time (vehicle ready)  in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (AddWorkRequestDate). It now allows "00000000" value. Error message is changed. -->
                    <as:constraint condition="not(./AddWorkRequestDate[matches(.,'^0{8}$')]) and not(./AddWorkRequestDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Additional Work Request Date in the Repair Order Header Record must be a valid date in the format YYYYMMDD..)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (AddWorkRequestTime). Error message is changed-->
                    <as:constraint condition="string(./AddWorkRequestTime) and not(./AddWorkRequestTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Additional Work Request Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (AddWorkRequestEstimate). Error message is changed.-->
                    <as:constraint condition="not(./AddWorkRequestEstimate[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Additional Work Request Estimate in the Repair Order Header Record allows positive numeric values only.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (PromisedDate). Error message is changed.-->
                    <as:constraint condition="not(./PromisedDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Promised Date in the Repair Order Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (PromisedTime). Error message is changed-->
                    <as:constraint condition="not(./PromisedTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Promised Time in the Repair Order Header Record must be a valid time in the format HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--updated 28-05-2014 by Mikhail Tkachenko (VehiclePickupDate). It now allows "00000000" value. Error message is changed.-->
                    <as:constraint condition="not(./VehiclePickupDate[matches(.,'^0{8}$')]) and not(./VehiclePickupDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Vehicle Pick-Up Date in the Repair Order Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (VehiclePickupTime). Error message is changed. -->
                    <as:constraint condition="not(./VehiclePickupTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Vehicle Pick-Up Time in the Repair Order Header Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (OPT_DlrPerm-Mail). Empty checking added. Error message is changed.-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Mail in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Mail)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Mail in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Mail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Mail in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Mail)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Mail in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Business Email in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-BusEmail)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Business Email in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Business Email in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-BusEmail)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Business Email in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email1). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Email 1 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email1)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Email 1 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email1). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Email 1 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email1)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Email 1 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Email 2 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email2)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Email 2 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Email 2 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email2)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Email 2 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Email 3 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email3)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Email 3 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Email 3 in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email3)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Email 3 in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Home Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-HomePhone)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Home Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Home Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-HomePhone)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Home Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Cell Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-CellPhone)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Cell Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Cell Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-CellPhone)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Cell Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/Work Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/Work Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/Work Phone in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-WorkPhone)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/Work Phone in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/SMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-SMS)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/SMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/SMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-SMS)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/SMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Dealer Permission/Opt In/MMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-MMS)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Dealer Permission/Opt In/MMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Corporate Express/Opt In/MMS in the Repair Order Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-MMS)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Corporate Express/Opt In/MMS in the Repair Order Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 12-03-2014 by Mikhail Tkachenko (ServiceCustomerTypeCode). Added additional valid value of "A" as acceptable for this field. -->
                    <as:constraint condition="not(./ServiceCustomerTypeCode[matches(.,'^[DFGIRUBJWA]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Customer Type Code (type of customer the service is being performed for) in the Repair Order Header Record is not from the enumerated list ('D', 'F', 'G', 'I', 'R', 'U', 'B', 'J', 'W', 'A').)"/>
                    <!--updated 12-03-2014 by Mikhail Tkachenko (AppointmentTypeCode). Added additional valid value of "S" as acceptable for this field. -->
                    <as:constraint condition="not(./AppointmentTypeCode[matches(.,'^[AIPWUS]$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Appointment Type (method used to initiate an appointment) in the Repair Order Header Record is not from the enumerated list ('A', 'I', 'P', 'W', 'U', 'S').)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (Service Writer Social ID). Error message is changed.-->
                    <as:constraint condition="not(./ServiceWriterSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./ServiceWriterSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Writer # (SSN OR SIN) in the Repair Order Header Record is required and should be numeric only.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (Service Writer Social ID). Error message is changed-->
                    <as:constraint condition="string(normalize-space(./ServiceWriterSocialID)) and (string(normalize-space(./ServiceWriterSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Writer # (SSN OR SIN) in the Repair Order Header Record must be empty, unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Service Writer - STARS ID.)"/>
                    <!--added 04-04-2014 by Mikhail Tkachenko (ROOpenDate)-->
                    <as:constraint condition="number(./ROOpenDate) &gt; number(./ROCloseDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Open Date in the Repair Order Header Record cannot be later than RO Close Date in the Repair Order Header Record.)"/>
                    <!--updated 09-04-2014 by Mikhail Tkachenko (AppointmentInitiatedDate). If the AppointmentInitiatedDate is required then it must not be zero filled-->
                    <as:constraint condition="./AppointmentTypeCode[matches(.,'^[AIPS]$')] and ./AppointmentInitiatedDate[matches(.,'^0{8}$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Appointment Initiated Date in the Repair Order Header Record is required when Appointment Type in the Repair Order Header Record equals to 'A', 'I', 'P', or 'S' values.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (AppointmentInitiatedDate)-->
                    <as:constraint condition="not(./AppointmentInitiatedDate[matches(.,'^0{8}$')]) and number(./AppointmentInitiatedDate) &gt; number(./ROOpenDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Date Appointment Initiated (date customer contacted dealership for appointment) in the Repair Order Header Record must not be later than the RO Open Date.)"/>
                    <!--added 04-04-2014 by Mikhail Tkachenko (ServiceWriterLocalID and ServiceWriterSTARSID)-->
                    <as:constraint condition="not(string(normalize-space(./ServiceWriterLocalID))) and not(string(normalize-space(./ServiceWriterSTARSID)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Writer - Local ID or Service Writer STARS ID in the Repair Order Header Record must be not empty.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (DateOfAppointment). If the DateOfAppointment is required then it must not be zero filled. Error message is changed. -->
                    <as:constraint condition="./AppointmentTypeCode[matches(.,'^[AIPS]$')] and ./DateOfAppointment[matches(.,'^0{8}$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Date of Appointment (Date the appointment was scheduled for) in the Repair Order Header Record is required when Appointment Type Code in the Repair Order Header Record equals to 'A', 'I', 'P', or 'S' values.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (DateOfAppointment). -->
                    <as:constraint condition="not(./DateOfAppointment[matches(.,'^0{8}$')]) and not(./AppointmentInitiatedDate[matches(.,'^0{8}$')]) and number(./DateOfAppointment) &lt; number(./AppointmentInitiatedDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Date of Appointment (Date the appointment was scheduled for) in the Repair Order Header Record must not be earlier than the Date Appointment Initiated (Date the customer set the appointment) in the Repair Order Header Record.)"/>
                    <!--added 04-04-2014 by Mikhail Tkachenko (TimeOfAppointment). If the TimeOfAppointment is required then it must not be zero filled -->
                    <as:constraint condition="./AppointmentTypeCode[matches(.,'^[AIPS]$')] and ./TimeOfAppointment[matches(.,'^0{4}$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Time Of Appointment in the Repair Order Header Record is required Appointment Type Code in the Repair Order Header Record equals to 'A', 'I', 'P', or 'S' values.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (ROInvoiceDate-VehicleReady). Error message is changed-->
                    <as:constraint condition="number(./ROInvoiceDate-VehicleReady) &lt; number(./ROCloseDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Invoice Date (Vehicle Ready) in the Repair Order Header Record must not be earlier than the RO Close Date in the Repair Order Header Record.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (ROInvoiceDate-VehicleReady).-->
                    <as:constraint condition="number(substring(./ROInvoiceDate-VehicleReady, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The RO Invoice Date (Vehicle Ready) (Date when charges have been applied) in the Repair Order Header Record must not be later than the File Date (Date the file was created) in the File Header Record.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (AddWorkRequestDate). No checking if the AddWorkRequestDate is zero filled. -->
                    <as:constraint condition="not(./AddWorkRequestDate[matches(.,'^0{8}$')]) and (number(./AddWorkRequestDate) &lt; number(./ROOpenDate) or number(./AddWorkRequestDate) &gt; number(./ROInvoiceDate-VehicleReady))"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Additional Work Request Date in the Repair Order Header Record must not be earlier than the RO Open Date in the Repair Order Header Record and not later than the RO Invoice Date (Vehicle Ready) in the Repair Order Header Record.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (AddWorkRequestDate). If the AddWorkRequestDate is required then it must not be zero filled. Error message is changed-->
                    <as:constraint condition="(not(./AddWorkRequestTime[matches(.,'^0{4}$')]) or not(./AddWorkRequestEstimate[matches(.,'^0{14}$')])) and ./AddWorkRequestDate[matches(.,'^0{8}$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Additional Work Request Date in the Repair Order Header Record is required when Additional Work Request Estimate or Additional Work Request Time in the Repair Order Header Record is not zero.)"/>
                    <!--updated 11-04-2014 by Mikhail Tkachenko (AddWorkRequestTime). If the AddWorkRequestTime is required then it must not be zero filled. Error message is changed-->
                    <as:constraint condition="(not(./AddWorkRequestDate[matches(.,'^0{8}$')]) or not(./AddWorkRequestEstimate[matches(.,'^0{14}$')])) and ./AddWorkRequestTime[matches(.,'^0{4}$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,WARNING: The Additional Work Request Time in the Repair Order Header Record is 0000. This means the additional work was requested at midnight.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (PromisedDate).-->
                    <as:constraint condition="number(./PromisedDate) &lt; number(./AppointmentInitiatedDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Promised Date (date repairs are to be finished) in the Repair Order Header Record must not be earlier than the Date Appointment Initiated in the Repair Order Header Record.)"/>
                    <!--added 22-04-2014 by Mikhail Tkachenko (PromisedDate).-->
                    <as:constraint condition="number(./PromisedDate) &lt; number(./DateOfAppointment)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Promised Date (date repairs are to be finished) in the Repair Order Header Record must not be earlier than the Date Of Appointment in the Repair Order Header Record.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (PromisedDate).-->
                    <as:constraint condition="number(./PromisedDate) &lt; number(./ROOpenDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Promised Date (date repairs are to be finished) in the Repair Order Header Record must not be earlier than the RO Open Date in the Repair Order Header Record.)"/>
                    <!--updated 28-05-2014 by Mikhail Tkachenko (VehiclePickupDate).-->
                    <as:constraint condition="not(./VehiclePickupDate[matches(.,'^0{8}$')]) and number(./VehiclePickupDate) &lt; number(./ROOpenDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Vehicle Pick-Up Date (date customer gets vehicle back) in the Repair Order Header Record must not be earlier than the RO Open Date in the Repair Order Header Record.)"/>
                    <!--updated 28-05-2014 by Mikhail Tkachenko (VehiclePickupDate).-->
                    <as:constraint condition="not(./VehiclePickupDate[matches(.,'^0{8}$')]) and number(./VehiclePickupDate) &lt; number(./ROCloseDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Vehicle Pick-Up Date (date customer gets vehicle back) in the Repair Order Header Record must not be earlier than the RO Close Date in the Repair Order Header Record.)"/>
                    <!--updated 28-05-2014 by Mikhail Tkachenko (VehiclePickupDate).-->
                    <as:constraint condition="not(./VehiclePickupDate[matches(.,'^0{8}$')]) and number(./VehiclePickupDate) &lt; number(./AppointmentInitiatedDate)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Vehicle Pick-Up Date (date customer gets vehicle back) in the Repair Order Header Record must not be earlier than the Date Appointment Initiated in the Repair Order Header Record.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (ZipOrPostalCode). Multi byte checking-->
                    <as:constraint condition="not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,MultiByte characters are not allowed in the Zip/Postal Code field of the Repair Order Header Record.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (RecordType).-->
                    <as:constraint condition="not(./RecordType[matches(.,'^C1$')])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Record Type in the Repair Order Header Record allows 'C1' value only.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (FirstName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 81-110 of the Repair Order Header Record is MultiByte.)"/>
                    <!--updated 14-04-2014 by Mikhail Tkachenko (MiddleInitial).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 111 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (MiddleInitial)-->
                    <as:constraint condition="./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!>|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Middle Initial in the Repair Order Header Record must be an alpha or multibyte character.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (LastName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 112-191 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (Title).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 192-196 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (AddressLine1).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 197-276 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (AddressLine2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 277-356 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (City).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 357-386 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (StateOrProvince).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the State/Province field at positions 387-416 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (LicensePlateNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LicensePlateNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LicensePlateNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Vehicle License Plate Number field at positions 505-524 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (ServiceWriterLocalID).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./ServiceWriterLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ServiceWriterLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Service Writer - Local ID field at positions 543-552 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (CustomerEmail).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email field at positions 562-661 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (AddressLine3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 685-764 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (CompanyDescription).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 765-794 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (BusinessEmail).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 795-894 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (CustomerEmail2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 895-994 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (CustomerEmail3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 995-1094 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (LoyaltyProgramMemberNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LoyaltyProgramMemberNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1184-1203 of the Repair Order Header Record is MultiByte.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (CustomerNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Number field at positions 1204-1213 of the Repair Order Header Record is MultiByte.)"/>


                    <!-- RO Service -->
                    <as:constraint condition="not(./SequenceNumber[matches(.,'^[0-9][0-9]$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sequence Number (used with Bundled and Sub Labor Operations) must be a 2 digit numeric value.)"/>
                    <!--updated 15-04-2014 by Mikhail Tkachenko (RepairTypeCode). ('A', 'C', 'E', I', 'U', 'W'). is added-->
                    <as:constraint condition="not(./RepairTypeCode[matches(.,'^[ACEIUW]$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Repair Type Code (type of customer the service is being performed for) in the Repair Order Service Record is not from the enumerated list ('A', 'C', 'E', 'I', 'U', 'W').)"/>
                    <!--updated 15-04-2014 by Mikhail Tkachenko (ServicingDepartmentCode). ('B', 'D', 'O', 'Q', 'S', 'U', 'M'). is added-->
                    <as:constraint condition="not(./ServicingDepartmentCode[matches(.,'^[BDOQSUM]$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Servicing Department Code in the Repair Order Service Record is not from the enumerated list ('B', 'D', 'O', 'Q', 'S', 'U', 'M').)"/>
                    <as:constraint condition="not(./LaborChargeAmount[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Labor Charge (amount charged for this service as it appears on the Repair Order) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./BilledHours[matches(.,'^[-0-9][0-9]{3}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Billed Hours in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="./BilledHours &gt; 99" action="printMessage(/UDBFile/RepairOrderService,WARNING: Unusually high hours billed.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (BilledHours).-->
                    <as:constraint condition="./BilledHours[matches(.,'^0{4}$')] and not(./LaborChargeAmount[matches(.,'^0{14}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Billed Hours field in the Repair Order Service Record is required if the Labor Charge (amount charged for this service as it appears on the Repair Order) in the Repair Order Service Record is not zero.)"/>

                    <as:constraint condition="not(./SubletOrMiscAmount01[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #1 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount02[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #2 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount03[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #3 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount04[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #4 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount05[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #5 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount06[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #6 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount07[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #7 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount08[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #8 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount09[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #9 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SubletOrMiscAmount10[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet Misc. Amount #10 (dollar amount associated with its description) in the Repair Order Service Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="string(normalize-space(./TechnicianNationalID)) and (./TechnicianNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!>|}{()]')] or contains(./TechnicianNationalID,'[') or contains(./TechnicianNationalID,']'))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician - National ID in the Repair Order Service Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.)"/>
                    <!--4.01-->
                    <!--added 13-03-2014 by Mikhail Tkachenko (TechnicianSTARSID)-->
                    <as:constraint condition="not(./TechnicianSTARSID[matches(.,'^([0-9]{9}|\s*)$')])"
                                   action="printMessage(/UDBFile/RepairOrderService, The Technician STARS ID in the Repair Order Service Record allows numerical or spaces filled values only.)"/>
                    <!--updated 10-04-2014 by Mikhail Tkachenko (TechnicianStartDate). It now allows "00000000" value-->
                    <as:constraint condition="not(./TechnicianStartDate[matches(.,'^0{8}$')]) and not(./TechnicianStartDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Start Job/Sign In Date (date when technician starts work) in the Repair Order Service Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--added 13-03-2014 by Mikhail Tkachenko (TechnicianStartTime)-->
                    <as:constraint condition="string(normalize-space(./TechnicianStartTime)) and not(./TechnicianStartTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Start Time in the Repair Order Service Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--updated 10-04-2014 by Mikhail Tkachenko (TechnicianFinishDate). It now allows "00000000" value-->
                    <as:constraint condition="not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and not(./TechnicianFinishDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Finish Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--added 13-03-2014 by Mikhail Tkachenko (TechnicianFinishTime)-->
                    <as:constraint condition="string(normalize-space(./TechnicianFinishTime)) and not(./TechnicianFinishTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Finish Time in the Repair Order Service Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (TechnicianSocialID)-->
                    <as:constraint condition="not(./TechnicianSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./TechnicianSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician # (SSN OR SIN) in the Repair Order Service Record is required and should be numeric only.)"/>
                    <!--updated 07-04-2014 by Mikhail Tkachenko (TechnicianSocialID)-->
                    <as:constraint condition="string(normalize-space(./TechnicianSocialID)) and (string(normalize-space(./TechnicianSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician # (SSN OR SIN) in the Repair Order Service Record must be empty, unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Technician - STARS ID.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (TechnicianLocalID and TechnicianSTARSID)-->
                    <as:constraint condition="not(string(normalize-space(./TechnicianLocalID))) and not(string(normalize-space(./TechnicianSTARSID)))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Local ID or Technician STARS ID in the Repair Order Service Record must be not empty.)"/>
                    <!--updated 10-04-2014 by Mikhail Tkachenko (TechnicianStartDate). If the TechnicianStartDate is required then it must not be zero filled-->
                    <as:constraint condition="./TechnicianStartDate[matches(.,'^0{8}$')] and (not(./TechnicianStartTime[matches(.,'^0000$')]) or not(./TechnicianFinishDate[matches(.,'^00000000$')]) or not(./TechnicianFinishTime[matches(.,'^0000$')]))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Starts Job/Sign In Date (date when technician starts work) in the Repair Order Service Record is required if the Technician Start Time or Technician Finish Job/Sign Out Date (date when technician finishes work) or Technician Finish Time in the Repair Order Service Record is not zero filled.)"/>
                    <!--updated 10-04-2014 by Mikhail Tkachenko (TechnicianStartTime). If the TechnicianStartTime is required then it must not be zero filled-->
                    <as:constraint condition="./TechnicianStartTime[matches(.,'^0{4}$')] and (not(./TechnicianStartDate[matches(.,'^00000000$')]) or not(./TechnicianFinishDate[matches(.,'^00000000$')]) or not(./TechnicianFinishTime[matches(.,'^0000$')]))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Starts Time in the Repair Order Service Record is required if the Technician Start Job/Sign In Date (date when technician starts work) or Technician Finish Job/Sign Out Date (date when technician finishes work) or Technician Finish Time in the Repair Order Service Record is not zero filled.)"/>
                    <!--updated 10-04-2014 by Mikhail Tkachenko (TechnicianFinishDate). If the TechnicianFinishDate is required then it must not be zero filled-->
                    <as:constraint condition="./TechnicianFinishDate[matches(.,'^0{8}$')] and (not(./TechnicianStartDate[matches(.,'^00000000$')]) or not(./TechnicianStartTime[matches(.,'^0000$')]) or not(./TechnicianFinishTime[matches(.,'^0000$')]))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Finishes Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record is required if the Technician Start Job/Sign In Date (date when technician starts work) or Technician Start Time or Technician Finish Time in the Repair Order Service Record is not zero filled.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (TechnicianFinishTime). If the TechnicianFinishTime is required then it must not be zero filled-->
                    <as:constraint condition="./TechnicianFinishTime[matches(.,'^0{4}$')] and (not(./TechnicianStartDate[matches(.,'^00000000$')]) or not(./TechnicianStartTime[matches(.,'^0000$')]) or not(./TechnicianFinishDate[matches(.,'^00000000$')]))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Finishes Time in the Repair Order Service Record is required if the Technician Start Job/Sign In Date (date when technician starts work) or Technician Start Time or Technician Finish Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record is not zero filled.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (DeclinedServOpCode)-->
                    <as:constraint condition="not(string(normalize-space(./DeclinedServOpCode))) and string(normalize-space(./DeclinedServOpCodeDesc))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Declined Services Labor Operation Code in the Repair Order Service Record is required if the Declined Services Labor Operation Code Description in the Repair Order Service Record is not empty.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (DeclinedServOpCodeDesc)-->
                    <as:constraint condition="not(string(normalize-space(./DeclinedServOpCodeDesc))) and string(normalize-space(./DeclinedServOpCode))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Declined Services Labor Operation Code Description in the Repair Order Service Record is required the if Declined Services Labor Operation Code in the Repair Order Service Record is not empty.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (TechnicianStartDate).-->
                    <as:constraint condition="not(./TechnicianStartDate[matches(.,'^0{8}$')]) and number(substring(./TechnicianStartDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Starts Job/Sign In Date (date when technician starts work) in the Repair Order Service Record must not be later than the File Date in the File Header Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (TechnicianStartDate).-->
                    <as:constraint condition="not(./TechnicianStartDate[matches(.,'^0{8}$')]) and number(./TechnicianStartDate) &gt; number(//RepairOrderHeader/ROCloseDate)"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Starts Job/Sign In Date (date technician starts work) in the Repair Order Service Record must not be later than the RO Close Date in the Repair Order Header Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (TechnicianStartDate).-->
                    <as:constraint condition="not(./TechnicianStartDate[matches(.,'^0{8}$')]) and number(./TechnicianStartDate) &lt; number(//RepairOrderHeader/ROOpenDate)"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Starts Job/Sign In Date (date technician starts work) in the Repair Order Service Record must not be earlier than the RO Open Date in the Repair Order Header Record.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (TechnicianFinishDate).-->
                    <as:constraint condition="not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and number(substring(./TechnicianFinishDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Finishes Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record must not be later than the File Date in the File Header Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (TechnicianFinishDate).-->
                    <as:constraint condition="not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and number(./TechnicianFinishDate) &gt; number(//RepairOrderHeader/ROCloseDate)"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Finishes Job/Sign Out Date (date when technician finishes work) in the Repair Order Service Record must not be later than the RO Close Date in the Repair Order Header Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (TechnicianFinishDate).-->
                    <as:constraint condition="not(./TechnicianFinishDate[matches(.,'^0{8}$')]) and number(./TechnicianFinishDate) &lt; number(//RepairOrderHeader/ROOpenDate)"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Finishes Job/Sign Out Date (date technician finishes work) in the Repair Order Service Record must not be earlier than the RO Open Date in the Repair Order Header Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (RecordType).-->
                    <as:constraint condition="not(./RecordType[matches(.,'^01$')])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Record Type in the Repair Order Service Record allows '01' value only.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (LaborOperationCode). Multi byte checking-->
                    <as:constraint condition="not(./LaborOperationCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LaborOperationCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,MultiByte characters are not allowed in the Labor Operation Code field of the Repair Order Service Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription01).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription01[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription01[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 1 field at positions 51-65 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription02).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription02[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription02[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 2 field at positions 66-80 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription03).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription03[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription03[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 3 field at positions 81-95 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription04).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription04[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription04[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 4 field at positions 96-110 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription05).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription05[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription05[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 5 field at positions 111-125 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription06).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription06[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription06[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 6 field at positions 126-140 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription07).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription07[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription07[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 7 field at positions 141-155 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription08).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription08[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription08[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 8 field at positions 156-170 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription09).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription09[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription09[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 9 field at positions 171-185 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SubletOrMiscDescription10).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SubletOrMiscDescription10[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SubletOrMiscDescription10[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sublet / Misc Description # 10 field at positions 186-200 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (LaborDescription).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LaborDescription/LaborDescriptionText[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LaborDescription/LaborDescriptionText[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Labor Description field at positions 341-596 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (TechnicianLocalID).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./TechnicianLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./TechnicianLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Technician Local ID field at positions 597-606 of the Repair Order Service Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (DeclinedServOpCode). Multi byte checking-->
                    <as:constraint condition="not(./DeclinedServOpCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./DeclinedServOpCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,MultiByte characters are not allowed in the Declined Services Labor Operation Code field of the Repair Order Service Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (DeclinedServOpCodeDesc).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./DeclinedServOpCodeDesc[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./DeclinedServOpCodeDesc[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderService,The Multibyte Indicator is 'S' (Single Byte) but the data in the Declined Services Labor Operation Code Description field at positions 660-915 of the Repair Order Service Record is MultiByte.)"/>


                    <!-- RO Part -->
                    <as:constraint condition="not(./SaleAmount[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Sale Price (extended part price) in the Repair Order Part Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(abs(./SaleAmount) &gt; (abs(./DealerCostAmount) - 1))"
                                   action="printMessage(/UDBFile/RepairOrderPart,WARNING: The Part Sale Price should be greater than or equal to the Dealer Part Cost.)"/>
                    <as:constraint condition="string(normalize-space(./CounterPersonNationalID)) and (./CounterPersonNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!>|}{()]')] or contains(./CounterPersonNationalID,'[') or contains(./CounterPersonNationalID,']'))"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Person - National ID in the Repair Order Part Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.)"/>
                    <!--updated 15-04-2014 by Mikhail Tkachenko (CausalCode). -->
                    <as:constraint condition="string(normalize-space(./CausalCode)) and not(./CausalCode[matches(normalize-space(.),'^[a-zA-Z0-9]{1,2}$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Causal Indicator in the Repair Order Part Record must be alpha-numeric.)"/>
                    <!--4.01-->
                    <!--updated 14-03-2014 by Mikhail Tkachenko (Quantity). ^[-0-9][0-9]{3}$ replaced with ^[-0-9][0-9]{6}$ -->
                    <as:constraint condition="not(./Quantity[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Quantity in the Repair Order Part Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <!--updated 14-03-2014 by Mikhail Tkachenko (DealerCostAmount). ^[-0-9][0-9]{13}$ replaced with ^[0-9]{14}$ -->
                    <as:constraint condition="not(./DealerCostAmount[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Dealer Part Cost (dealer cost for a single part) in the Repair Order Part Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 14-03-2014 by Mikhail Tkachenko (CounterPersonSTARSID).-->
                    <as:constraint condition="not(./CounterPersonSTARSID[matches(.,'^([0-9]{9}|\s*)$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Person - STARS ID in the Repair Order Part Record allows numerical or spaces filled values only.)"/>
                    <!--added 13-03-2014 by Mikhail Tkachenko (ROPartAddDate)-->
                    <as:constraint condition="not(./ROPartAddDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Date Part Added To RO (date when part added to repair order) in the Repair Order Part Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--added 13-03-2014 by Mikhail Tkachenko (ROPartAddTime)-->
                    <as:constraint condition="not(./ROPartAddTime[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Time Part Added To RO (time when part added to repair order) in the Repair Order Part Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--updated 05-05-2014 by Mikhail Tkachenko (CounterPersonSocialID)-->
                    <as:constraint condition="not(./CounterPersonSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./CounterPersonSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Person # (SSN OR SIN) in the Repair Order Part Record is required and should be numeric only.)"/>
                    <!--updated 07-03-2014 by Mikhail Tkachenko (CounterPersonSocialID).-->
                    <as:constraint condition="string(normalize-space(./CounterPersonSocialID)) and (string(normalize-space(./CounterPersonSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Person # (SSN OR SIN) in the Repair Order Part Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Part Person - STARS ID.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (CounterPersonSTARSID and CounterPersonLocalID)-->
                    <as:constraint condition="not(string(normalize-space(./CounterPersonSTARSID))) and not(string(normalize-space(./CounterPersonLocalID)))"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Person - STARS ID or Part Person - Local ID in the Repair Order Part Record must be not empty.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (ROPartAddDate).-->
                    <as:constraint condition="number(substring(./ROPartAddDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be later than the File Date in the File Header Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (ROPartAddDate).-->
                    <as:constraint condition="number(./ROPartAddDate) &gt; number(//RepairOrderHeader/ROCloseDate)"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be later than the RO Close Date in the Repair Order Header Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (ROPartAddDate).-->
                    <as:constraint condition="number(./ROPartAddDate) &lt; number(//RepairOrderHeader/ROOpenDate)"
                                   action="printMessage(/UDBFile/RepairOrderPart,Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be earlier than the RO Open Date in the Repair Order Header Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (ROPartAddDate).-->
                    <as:constraint condition="number(./ROPartAddDate) &lt; number(//RepairOrderHeader/AppointmentInitiatedDate)"
                                   action="printMessage(/UDBFile/RepairOrderPart,Date Part Added to RO (date when part added to repair order) in the Repair Order Part Record must not be earlier than the Date Appointment Initiated in the Repair Order Header Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (RecordType).-->
                    <as:constraint condition="not(./RecordType[matches(.,'^02$')])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Record Type in the Repair Order Part Record allows '02' value only.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberPrefix). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberPrefix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberPrefix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderPart,MultiByte characters are not allowed in the Part Prefix field of the Repair Order Part Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberBase). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberBase[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberBase[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderPart,MultiByte characters are not allowed in the Part Base field of the Repair Order Part Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberSuffix). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberSuffix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberSuffix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderPart,MultiByte characters are not allowed in the Part Suffix field of the Repair Order Part Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (Description).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./Description/DescriptionText[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Description/DescriptionText[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Description field at positions 60-109 of the Repair Order Part Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CounterPersonLocalID).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CounterPersonLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CounterPersonLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Person - Local ID field at positions 118-127 of the Repair Order Part Record is MultiByte.)"/>
                    <!--added 22-05-2014 by Mikhail Tkachenko (DealerCostAmount). Added checking with respect to line number and @partskitID presence -->
                    <as:constraint condition="(not(./@lineNumber = //RepairOrderPart[1]/@lineNumber) or not(normalize-space(./@partskitID))) and ./DealerCostAmount[matches(.,'^0{14}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Dealer Part Cost in the Repair Order Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the Repair Order Part Record has a value.)"/>
                    <!--updated 22-05-2014 by Mikhail Tkachenko (Quantity). Added checking with respect to line number and @awaID presence -->
                    <as:constraint condition="(./@lineNumber = //RepairOrderPart[1]/@lineNumber or not(normalize-space(./@awaID))) and ./Quantity[matches(.,'^0{7}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Quantity in the Repair Order Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the Repair Order Part Record has a value.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (Quantity and SaleAmount).-->
                    <as:constraint condition="number(./Quantity) &lt; 0 and number(./SaleAmount) &gt; 0"
                                   action="printMessage(/UDBFile/RepairOrderPart,Part Quantity is Negative. For a Part Return the Part Sale Price should also be Negative. If this is not a Part Return the Part Quantity should be positive.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (Quantity and SaleAmount).-->
                    <as:constraint condition="number(./Quantity) &gt; 0 and number(./SaleAmount) &lt; 0"
                                   action="printMessage(/UDBFile/RepairOrderPart,Part Sale Price is Negative. For a Part Return the Part Quantity should also be Negative. If this is not a Part Return the Part Sale Price should be positive.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (Quantity and @partskitID).-->
                    <as:constraint condition="number(./Quantity) = 0 and normalize-space(./@partskitID)"
                                   action="printMessage(/UDBFile/RepairOrderPart,RO Part Kit: Part Kit lines can not have a quantity equal to 0.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (SaleAmount and @partskitID).-->
                    <as:constraint condition="number(//RepairOrderPart[1]/SaleAmount) &gt; 0 and normalize-space(./@partskitID)"
                                   action="printMessage(/UDBFile/RepairOrderPart,Part Kit: The Part Sale Price for the Part Kit should always be 0. All pricing should be listed next to each part in the kit.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (DealerCostAmount and @partskitID).-->
                    <as:constraint condition="number(//RepairOrderPart[1]/DealerCostAmount) &gt; 0 and normalize-space(./@partskitID)"
                                   action="printMessage(/UDBFile/RepairOrderPart,Part Kit: The Dealer Part Cost for the Part Kit should always be 0. All costs should be listed next to each part in the kit.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (@partskitID).-->
                    <as:constraint condition="count(//RepairOrderPart/@partskitID) = 1 or count(//RepairOrderPart/@partskitID) = 2"
                                   action="printMessage(/UDBFile/RepairOrderPart,Parts Kit: All Parts Kits must have at least 2 parts included in the kit to be listed with the Part Kit Number shown in the first Repair Order Part record marked Part Kit.)"/>


                    <!-- OTC Header -->
                    <as:constraint condition="not(./InvoiceDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Sale Invoice Date (date invoice was opened) in the OTC Header Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--updated 29-04-2014 by Mikhail Tkachenko (InvoiceDate). Now dates comparing directly from fields but not from attributes -->
                    <as:constraint condition="number(substring(./InvoiceDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Sale Invoice Date (date invoice was opened) in the OTC Header Record must not be greater than the File Date.)"/>
                    <!--updated 15-04-2014 by Mikhail Tkachenko (CustomerTypeCode). "('D', 'F', 'G', 'I', 'R', 'W', 'U', 'B', 'J')" is added-->
                    <as:constraint condition="not(./CustomerTypeCode[matches(.,'^[DFGIRWUBJ]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Parts Customer Type Code (type of customer that purchased the part(s)) in the OTC Header Record is not from the enumerated list ('D', 'F', 'G', 'I', 'R', 'W', 'U', 'B', 'J').)"/>
                    <as:constraint condition="not(./TaxAmount[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Tax Amount (amount as it appears on the Parts Invoice)  in the OTC Header Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>

                    <as:constraint condition="string(normalize-space(./CounterPersonNationalID)) and (./CounterPersonNationalID[matches(normalize-space(.),'[ *,.;:=+\-_?#$%@\^\\/!>|}{()]')] or contains(./CounterPersonNationalID,'[') or contains(./CounterPersonNationalID,']'))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person - National ID in the OTC Header Record should be alpha-numeric only and contain the Ford Standardized Training And Reporting System (STARS) ID.)"/>

                    <!-- 3.21R -->
                    <!-- Removed restriction per Mike 02-06-2014
                    <as:constraint condition="string(normalize-space(./FirstName)) and ./FirstName[matches(normalize-space(.),'[0-9]')]"
                      action="printMessage(/UDBFile/OTCPartInvoiceHeader,The First Name in the OTC Header Record must not contain a number)"/> -->
                    <!--updated 23-04-2014 by Mikhail Tkachenko (MiddleInitial).-->
                    <as:constraint condition="./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!>|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Middle Initial in the OTC Header Record must be an alpha or multibyte character.)"/>

                    <!-- PHONES updated 15-04-2014 by Mikhail Tkachenko -->
                    <as:constraint condition="not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Home Phone in the OTC Header Record should be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <as:constraint condition="not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Work Phone in the OTC Header Record should be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <as:constraint condition="not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Cell Phone in the OTC Header Invoice Record should be numeric only. Do NOT fill in extra spaces with zeros.)"/>

                    <as:constraint condition="string(normalize-space(./CustomerEmail)) and not(./CustomerEmail[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Email in the OTC Header Record must be a valid email address.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CustomerEmail2).-->
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and not(./CustomerEmail2[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Email 2 in the OTC Header Record must be a valid email address.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CustomerEmail3).-->
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and not(./CustomerEmail3[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Email 3 in the OTC Header Record must be a valid email address.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (BusinessEmail).-->
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and not(./BusinessEmail[matches(normalize-space(.),'@')]) and not(./CustomerEmail[matches(normalize-space(.),'\.')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Business Email in the OTC Header Record must be a valid email address.)"/>

                    <as:constraint condition="string(normalize-space(./DiscountAmount)) and not(./DiscountAmount[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Discount Amount (sum of all discounts for the invoice.)  in the OTC Header Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="string(normalize-space(./ShippingAmount)) and not(./ShippingAmount[matches(.,'^[-0-9][0-9]{13}$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Shipping Amount (amount charged for transporting the part to the customer)  in the OTC Header Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <!-- 01-02-2013 -->
                    <as:constraint condition="./City[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The City in the OTC Header Record must not contain numbers.)"/>
                    <as:constraint condition="./StateOrProvince[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The State/Province in the OTC Header Record must not contain numbers.)"/>
                    <!--4.01-->
                    <!--added 14-03-2014 by Mikhail Tkachenko (CounterPersonSTARSID).-->
                    <as:constraint condition="not(./CounterPersonSTARSID[matches(.,'^([0-9]{9}|\s*)$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person - STARS ID in the OTC Header Record allows numerical or spaces filled values only.)"/>
                    <!--updated 14-03-2014 by Mikhail Tkachenko (CustomerCountryCode)-->
                    <as:constraint condition="string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Country Code in the OTC Header Record must be upper case alpha and from the ISO 3166-1 alpha-3 list or space filled.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (SaleType). "." replaced to "normalize-space(.)" -->
                    <as:constraint condition="not(./SaleType[matches(normalize-space(.),'^[EPWQ]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Sale Type in the OTC Header Record is not from the enumerated list ('E', 'P', 'W', 'Q').)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Mail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Mail in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Mail)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Mail in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Mail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Mail in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Mail)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Mail in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Business Email in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-BusEmail)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Business Email in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Business Email in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-BusEmail)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Business Email in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email1). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Email 1 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email1)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Email 1 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email1). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Email 1 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email1)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Email 1 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Email 2 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email2)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Email 2 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Email 2 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email2)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Email 2 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Email 3 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email3)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Email 3 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Email 3 in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email3)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Email 3 in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Home Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-HomePhone)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Home Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Home Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-HomePhone)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Home Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Cell Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-CellPhone)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Cell Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Cell Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-CellPhone)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Cell Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/Work Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/Work Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/Work Phone in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-WorkPhone)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/Work Phone in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/SMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-SMS)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/SMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/SMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-SMS)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/SMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Dealer Permission/Opt In/MMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-MMS)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Dealer Permission/Opt In/MMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Corporate Express/Opt In/MMS in the OTC Header Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-MMS)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,WARNING: The Corporate Express/Opt In/MMS in the OTC Header Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (CounterPersonSocialID)-->
                    <as:constraint condition="not(./CounterPersonSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./CounterPersonSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person # (SSN OR SIN) in the OTC Header Record is required and should be numeric only.)"/>
                    <!--updated 07-03-2014 by Mikhail Tkachenko (CounterPersonSocialID).-->
                    <as:constraint condition="string(normalize-space(./CounterPersonSocialID)) and (string(normalize-space(./CounterPersonSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person # (SSN OR SIN) in the OTC Header Record must be empty unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Part Person - STARS ID.)"/>
                    <!--updated 05-05-2014 by Mikhail Tkachenko (CounterPersonSTARSID and CounterPersonLocalID)-->
                    <as:constraint condition="not(string(normalize-space(./CounterPersonSTARSID))) and not(string(normalize-space(./CounterPersonLocalID)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person - STARS ID or Part Person - Local ID in the OTC Header Record must be not empty.)"/>
                    <!--added 14-04-2014 by Mikhail Tkachenko (RecordType).-->
                    <as:constraint condition="not(./RecordType[matches(.,'^P1$')])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Record Type in the OTC Header Record allows 'P1' value only.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (InvoiceNumber). Multi byte checking-->
                    <as:constraint condition="not(./InvoiceNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./InvoiceNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,MultiByte characters are not allowed in the Invoice Number field of the OTC Header Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (LastName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 27-106 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (AddressLine1).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 107-186 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (AddressLine2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 187-266 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (City).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 267-296 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (StateOrProvince).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the State / Province field at positions 297-326 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (ZipOrPostalCode). Multi byte checking-->
                    <as:constraint condition="not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,MultiByte characters are not allowed in the Zip / Postal Code field of the OTC Header Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CounterPersonLocalID).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CounterPersonLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CounterPersonLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Person - Local ID field at positions 383-392 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (FirstName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 402-431 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (MiddleInitial).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 432 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (Title).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 433-437 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CustomerEmail).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email field at positions 501-600 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (SaleTypeDescription).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SaleTypeDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SaleTypeDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sale Type Description field at positions 631-645 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (AddressLine3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 646-725 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CompanyDescription).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 726-755 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (BusinessEmail).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 756-855 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CustomerEmail2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 856-955 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CustomerEmail3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 956-1055 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (LoyaltyProgramMemberNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LoyaltyProgramMemberNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1056-1075 of the OTC Header Record is MultiByte.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (CustomerNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Number field at positions 1076-1085 of the OTC Header Record is MultiByte.)"/>
                    <!--added 23-04-2014 by Mikhail Tkachenko (CustomerTaxID). Multi byte checking -->
                    <as:constraint condition="not(./CustomerTaxID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerTaxID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,MultiByte Characters are not allowed in the Customer Identification Code field of the OTC Header record.)"/>


                    <!-- OTC Parts -->
                    <as:constraint condition="not(abs(./SaleAmount) &gt; (abs(./DealerCostAmount) - 1))"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,WARNING: The Part Sale Price should be greater than or equal to the Part Sale Dealer Cost.)"/>
                    <!--4.01-->
                    <!--updated 14-03-2014 by Mikhail Tkachenko (Quantity). ^[-0-9][0-9]{3}$ replaced with ^[-0-9][0-9]{6}$ -->
                    <as:constraint condition="not(./Quantity[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Part Quantity (quantity of parts as it appears on the OTC Invoice)  in the OTC Part Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <!--updated 14-03-2014 by Mikhail Tkachenko (SaleAmount). ^[-0-9][0-9]{13}$ replaced with ^[0-9]{14}$ -->
                    <as:constraint condition="not(./SaleAmount[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Sale Amount (actual unit sale price charged for a single part as it appears on the invoice) in the OTC Part Record is invalid. Only positive numerals are allowed.)"/>
                    <!--updated 14-03-2014 by Mikhail Tkachenko (DealerCostAmount). ^[-0-9][0-9]{13}$ replaced with ^[0-9]{14}$ -->
                    <as:constraint condition="not(./DealerCostAmount[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Dealer Cost Amount (dealer net cost) in the OTC Part Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 14-03-2014 by Mikhail Tkachenko (RecordType). -->
                    <as:constraint condition="not(./RecordType[matches(.,'^03$')])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Record Type in the OTC Parts Invoice Part allows '03' value only.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberPrefix). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberPrefix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberPrefix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,MultiByte characters are not allowed in the Part Prefix field of the OTC Part Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberBase). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberBase[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberBase[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,MultiByte characters are not allowed in the Part Base field of the OTC Part Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberSuffix). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberSuffix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberSuffix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,MultiByte characters are not allowed in the Part Suffix field of the OTC Part Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (Description).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./Description[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Description[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Multibyte Indicator is 'S' (Single Byte) but the data in the Part Description field at positions 60-109 of the OTC Part Record is MultiByte.)"/>
                    <!--added 22-05-2014 by Mikhail Tkachenko (DealerCostAmount). Added checking with respect to line number and @partskitID presence -->
                    <as:constraint condition="(not(./@lineNumber = //OTCPartsInvoicePart[1]/@lineNumber) or not(normalize-space(./@partskitID))) and ./DealerCostAmount[matches(.,'^0{14}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Part Sale Dealer Cost in the OTC Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the OTC Part Record has a value.)"/>
                    <!--added 22-04-2014 by Mikhail Tkachenko (Quantity).-->
                    <as:constraint condition="./Quantity[matches(.,'^0{7}$')] and (normalize-space(./PartNumberPrefix) or normalize-space(./PartNumberBase) or normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Part Quantity in the OTC Part Record is required if the Part Number (Part Prefix, Part Base or Part Suffix) in the OTC Part Record has a value.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (Quantity and @partskitID).-->
                    <as:constraint condition="normalize-space(./@partskitID) and number(./Quantity) = 0"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,OTC Part Kit: Part Kit lines can not have a quantiy equal to 0.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (SaleAmount and @partskitID).-->
                    <as:constraint condition="normalize-space(./@partskitID) and number(//OTCPartsInvoicePart[1]/SaleAmount) &gt; 0"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,Part Kit: The Part Sale Price for the Part Kit should always be 0. All pricing should be listed next to each part in the kit.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (DealerCostAmount and @partskitID).-->
                    <as:constraint condition="normalize-space(./@partskitID) and number(//OTCPartsInvoicePart[1]/DealerCostAmount) &gt; 0"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,Part Kit: The Dealer Part Cost for the Part Kit should always be 0. All costs should be listed next to each part in the kit.)"/>
                    <!--added 25-04-2014 by Mikhail Tkachenko (DealerCostAmount and @partskitID).-->
                    <as:constraint condition="count(//OTCPartsInvoicePart/@partskitID) = 1 or count(//OTCPartsInvoicePart/@partskitID) = 2"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,Parts Kit: All Parts Kits must have at least 2 parts included in the kit to be listed with the Part Kit Number shown in the first Repair Order Part record marked Part Kit.)"/>


                    <!-- PartsInventory -->
                    <as:constraint condition="not(./QuantityDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Quantity Date (date the quantity is being reported for) in the Parts Inventory Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--updated 29-04-2014 by Mikhail Tkachenko (QuantityDate). Now dates comparing directly from fields but not from attributes -->
                    <as:constraint condition="number(substring(./QuantityDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/PartsInventory,The Quantity Date (date the quantity is being reported for) in the Parts Inventory Record must not be greater than the File Date.)"/>
                    <!--4.01-->
                    <!--added 14-03-2014 by Mikhail Tkachenko (RecordType). -->
                    <as:constraint condition="not(./RecordType[matches(.,'^IN$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Record Type in the Parts Inventory Record allows 'IN' value only.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (PackedServicePartNumber). -->
                    <as:constraint condition="not(./PackedServicePartNumber[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{()\]\[`~&amp;&quot;&lt;]*$')]) or ./PackedServicePartNumber[matches(normalize-space(.),'[-\s]')]"
                                   action="printMessage(/UDBFile/PartsInventory,The Packed Service Part Number in the Parts Inventory Record is invalid (it cannot have dashes, spaces or multiByte characters).)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (PartStockingIndicator). -->
                    <as:constraint condition="not(./PartStockingIndicator[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Part Stocking Indicator in the Parts Inventory Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (BestStockingLevel). -->
                    <as:constraint condition="not(./BestStockingLevel[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Best Stocking Level in the Parts Inventory Record allows positive numeric values only.)"/>
                    <!--updated 17-03-2014 by Mikhail Tkachenko (Quantity). Renamed from QuantityOnHand to Quantity. -->
                    <as:constraint condition="not(./Quantity[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Quantity (count of this part at the end of the daily processing)  in the Parts Inventory Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (DealerExtendedCost). -->
                    <as:constraint condition="not(./DealerExtendedCost[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Dealer Landed Cost (Extended) in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (DailyInboundQuantity). -->
                    <as:constraint condition="not(./DailyInboundQuantity[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Daily Inbound Quantity in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (DailyOutboundQuantity). -->
                    <as:constraint condition="not(./DailyOutboundQuantity[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Daily Outbound Quantity in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--updated 22-04-2014 by Mikhail Tkachenko (QuantityAdjustment). Negative values are allowed. -->
                    <as:constraint condition="not(./QuantityAdjustment[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Daily Quantity Adjustment (Not Sale) in the Parts Inventory Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (QuantityAdjustment). -->
                    <as:constraint condition="./QuantityAdjustment[matches(.,'^0{7}$')] and string(normalize-space(./QuantityAdjustmentType))"
                                   action="printMessage(/UDBFile/PartsInventory,The Daily Quantity Adjustment (Not Sale) in the Parts Inventory Record is required if the Daily Quantity Adjustment Type in the Parts Inventory Record is not empty.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (QuantityAdjustmentType). -->
                    <as:constraint condition="string(normalize-space(./QuantityAdjustmentType)) and not(./QuantityAdjustmentType[matches(normalize-space(.),'^(LOSS|OTHER|POPP|SCRAP|UNKNOWN)$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Daily Quantity Adjustment Type in the Parts Inventory Record is invalid. Only 'LOSS', 'OTHER', 'POPP', 'SCRAP', 'UNKNOWN' values are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (QuantityAdjustmentType). -->
                    <as:constraint condition="not(string(normalize-space(./QuantityAdjustmentType))) and not(./QuantityAdjustment[matches(.,'^0{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Daily Quantity Adjustment Type in the Parts Inventory Record is required if the Daily Quantity Adjustment (Not Sale) in the Parts Inventory Record is not zero.)"/>
                    <!--updated 10-04-2014 by Mikhail Tkachenko (DateLastSale). It now allows "00000000" value -->
                    <as:constraint condition="not(./DateLastSale[matches(.,'^0{8}$')]) and not(./DateLastSale[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Date Of Last Sale (date part last sold) in the Parts Inventory Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-0). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-0[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Quantity Sold Current Month in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-1). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-1[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold Last Month in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-2). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-2[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 2 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-3). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-3[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 3 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-4). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-4[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 4 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-5). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-5[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 5 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-6). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-6[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 6 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-7). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-7[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 7 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-8). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-8[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 8 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-9). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-9[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 9 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-10). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-10[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 10 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-11). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-11[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 11 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (SaleQuantityCurrentMonth-12). -->
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-12[matches(.,'^[0-9]{7}$')])"
                                   action="printMessage(/UDBFile/PartsInventory,The Monthly Quantity Sold 12 Months Ago in the Parts Inventory Record is invalid. Only positive numerals are allowed.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (DateLastSale).-->
                    <as:constraint condition="not(./DateLastSale[matches(.,'^0{8}$')]) and number(substring(./DateLastSale, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/PartsInventory,The Date Of Last Sale (date part last sold) in the Parts Inventory Record must not be later than the File Date in the File Header Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberPrefix). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberPrefix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberPrefix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/PartsInventory,MultiByte characters are not allowed in the Part Prefix field of the Parts Inventory Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberBase). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberBase[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberBase[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/PartsInventory,MultiByte characters are not allowed in the Part Base field of the Parts Inventory Record.)"/>
                    <!--added 15-04-2014 by Mikhail Tkachenko (PartNumberSuffix). Multi byte checking-->
                    <as:constraint condition="not(./PartNumberSuffix[matches(normalize-space(.),'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./PartNumberSuffix[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/PartsInventory,MultiByte characters are not allowed in the Part Suffix field of the Parts Inventory Record.)"/>
                    <!--added 18-04-2014 by Mikhail Tkachenko (DateLastSale)-->
                    <as:constraint condition="number(./DateLastSale) &gt; number(./QuantityDate)"
                                   action="printMessage(/UDBFile/PartsInventory,The Date of Last Sale (date the part was last sold) in the Parts Inventory Record must not be greater than the Quantity Date in the Parts Inventory Record.)"/>


                    <!--ServiceAppointments-->
                    <!--4.01-->
                    <!--added 17-03-2014 by Mikhail Tkachenko (RecordType)-->
                    <as:constraint condition="not(./RecordType[matches(.,'^A1$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Record Type in the Service Appointment Record allows 'A1' value only.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (AppointmentType)-->
                    <as:constraint condition="not(./AppointmentType[matches(.,'^[AIPSWU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Type (method used to initiate an appointment) in the Service Appointment Record is not from the enumerated list ('A', 'I', 'P', 'W', 'U', 'S').)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (DateAppointmentInitiated)-->
                    <as:constraint condition="not(./DateAppointmentInitiated[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Date Appointment Initiated (date customer contacted dealership for appointment) in the Service Appointment Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (DateOfAppointment)-->
                    <as:constraint condition="not(./DateOfAppointment[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Date Of Appointment in the Service Appointment Record must be a valid date in the format YYYYMMDD.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (TimeOfAppointment)-->
                    <as:constraint condition="not(./TimeOfAppointment[matches(.,'^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Time Of Appointment in the Service Appointment Record is invalid. The correct format is HHMM (HH: 00-23, MM: 00-59).)"/>
                    <!--updated 05-05-2014 by Mikhail Tkachenko (AppointmentSchedulerSTARSID)-->
                    <as:constraint condition="normalize-space(./AppointmentSchedulerSTARSID) and not(./AppointmentSchedulerSTARSID[matches(.,'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Scheduler - STARS ID in the Service Appointment Record should be numeric only.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (VIN)-->
                    <as:constraint condition="not(./VIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The VIN in the Service Appointment Record should be alpha-numeric only.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (VehicleYear)-->
                    <as:constraint condition="not(./VehicleYear[matches(.,'^(19[0-9]{2})|(2[0-9]{3})$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Vehicle Year in the Service Appointment Record must be a valid year in the format YYYY.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (OdometerReading)-->
                    <as:constraint condition="not(./OdometerReading[matches(.,'^[0-9]{6}$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Odometer Reading in the Service Appointment Record allows only positive numerical values.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (OdometerIndicator)-->
                    <as:constraint condition="not(./OdometerIndicator[matches(.,'^[KM]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Odometer Indicator (miles or kilometer) in the Service Appointment Record must be either M or K.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (MiddleInitial)-->
                    <as:constraint condition="./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!>|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Middle Initial in the Service Appointment Record must be an alpha or multibyte character.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (City)-->
                    <as:constraint condition="./City[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The City in the Service Appointment Record must not contain numbers.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (StateOrProvince)-->
                    <as:constraint condition="./StateOrProvince[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The State/Province in the Service Appointment Record does not allow numeric characters.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (CustomerCountryCode)-->
                    <as:constraint condition="string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Country Code in the Service Appointment Record must be upper case alpha and from the ISO 3166-1 alpha-3 list or space filled.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (HomePhone)-->
                    <as:constraint condition="not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Home Phone in the Service Appointment Record must be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (WorkPhone)-->
                    <as:constraint condition="not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Work Phone in the Service Appointment Record must be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <!--added 17-03-2014 by Mikhail Tkachenko (CellPhone)-->
                    <as:constraint condition="not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Cell Phone in the Service Appointment Record must be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <!--updated 08-04-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount1). -->
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepairAmount1)) and not(./CustomerSelectedRepairAmount1[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #1 in the Service Appointment Record is invalid. Only positive numerals are allowed.)"/>
                    <!--updated 08-04-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount2). -->
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepairAmount2)) and not(./CustomerSelectedRepairAmount2[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #2 in the Service Appointment Record is invalid. Only positive numerals are allowed.)"/>
                    <!--updated 08-04-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount3). -->
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepairAmount3)) and not(./CustomerSelectedRepairAmount3[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #3 in the Service Appointment Record is invalid. Only positive numerals are allowed.)"/>
                    <!--updated 08-04-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount4). -->
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepairAmount4)) and not(./CustomerSelectedRepairAmount4[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #4 in the Service Appointment Record is invalid. Only positive numerals are allowed.)"/>
                    <!--updated 08-04-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount5). -->
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepairAmount5)) and not(./CustomerSelectedRepairAmount5[matches(.,'^[0-9]{14}$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #5 in the Service Appointment Record is invalid. Only positive numerals are allowed.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Mail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Mail in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Mail)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Mail in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Mail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Mail in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Mail)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Mail in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Business Email in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-BusEmail)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Business Email in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Business Email in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-BusEmail)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Business Email in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email1). Empty checking added -->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Email 1 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email1)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Email 1 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email1). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Email 1 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email1)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Email 1 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Email 2 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email2)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Email 2 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Email 2 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email2)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Email 2 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Email 3 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email3)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Email 3 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Email 3 in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email3)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Email 3 in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Home Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-HomePhone)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Home Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Home Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-HomePhone)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Home Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Cell Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-CellPhone)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Cell Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Cell Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-CellPhone)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Cell Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/Work Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/Work Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/Work Phone in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-WorkPhone)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/Work Phone in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/SMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-SMS)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/SMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/SMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-SMS)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/SMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Dealer Permission/Opt In/MMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-MMS)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Dealer Permission/Opt In/MMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Corporate Express/Opt In/MMS in the Service Appointment Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-MMS)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,WARNING: The Corporate Express/Opt In/MMS in the Service Appointment Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--added 18-03-2014 by Mikhail Tkachenko (AppointmentStatus)-->
                    <as:constraint condition="not(./AppointmentStatus[matches(.,'^[CKMNU]$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Status in the Service Appointment Record is not from the enumerated list ('C', 'K', 'M', 'N', 'U').)"/>
                    <!--added 18-03-2014 by Mikhail Tkachenko (FILECONTROL16-9)-->
                    <as:constraint condition="not(./FILECONTROL16-9[matches(.,'^&gt;$')])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The FILE CONTROL 16-9 in the Service Appointment Record allows '&gt;' values only.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (DateAppointmentInitiated)-->
                    <as:constraint condition="number(./DateAppointmentInitiated) &gt; number(./DateOfAppointment) or number(substring(./DateAppointmentInitiated, 3)) &gt; number(./@currentFileDate)"
                                   action="printMessage(/UDBFile/ServiceAppointments,Date Appointment Initiated (date customer contacted dealership for appointment) in the Service Appointment Record must not be later than the File Date in the File Header record or the Date Of Appointment in the Service Appointment Record.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (AppointmentSchedulerLocalID and AppointmentSchedulerSTARSID)-->
                    <as:constraint condition="not(string(normalize-space(./AppointmentSchedulerLocalID))) and not(string(normalize-space(./AppointmentSchedulerSTARSID)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Scheduler Local ID or Appointment Scheduler - STARS ID in the Service Appointment Record must be not empty.)"/>
                    <!--added 07-04-2014 by Mikhail Tkachenko (AppointmentSchedulerSocialID)-->
                    <as:constraint condition="not(./AppointmentSchedulerSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./AppointmentSchedulerSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Scheduler # (SSN OR SIN) in the Service Appointment Record is required and should be numeric only.)"/>
                    <!--updated 07-03-2014 by Mikhail Tkachenko (AppointmentSchedulerSocialID).-->
                    <as:constraint condition="string(normalize-space(./AppointmentSchedulerSocialID)) and (string(normalize-space(./AppointmentSchedulerSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Scheduler # (SSN OR SIN) in the Service Appointment Record must be empty, unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Appointment Scheduler - STARS ID.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (VehicleYear).-->
                    <as:constraint condition="number(substring(./VehicleYear, 3)) &gt; (number(substring(./@currentFileDate, 1, 2)) + 1)"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Vehicle Year in the Service Appointment Record must not be greater than Current File Date plus 1 year.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedLOP1).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedLOP1))) and (string(normalize-space(./CustomerSelectedRepair1)) or not(./CustomerSelectedRepairAmount1[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #1 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #1 has data or the Customer Selected Svc Appt Repair Amount #1 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedLOP2).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedLOP2))) and (string(normalize-space(./CustomerSelectedRepair2)) or not(./CustomerSelectedRepairAmount2[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #2 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #2 has data or the Customer Selected Svc Appt Repair Amount #2 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedLOP3).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedLOP3))) and (string(normalize-space(./CustomerSelectedRepair3)) or not(./CustomerSelectedRepairAmount3[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #3 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #3 has data or the Customer Selected Svc Appt Repair Amount #3 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedLOP4).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedLOP4))) and (string(normalize-space(./CustomerSelectedRepair4)) or not(./CustomerSelectedRepairAmount4[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #4 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #4 has data or the Customer Selected Svc Appt Repair Amount #4 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedLOP5).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedLOP5))) and (string(normalize-space(./CustomerSelectedRepair5)) or not(./CustomerSelectedRepairAmount5[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #5 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair #5 has data or the Customer Selected Svc Appt Repair Amount #5 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepair1).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepair1))) and (string(normalize-space(./CustomerSelectedLOP1)) or not(./CustomerSelectedRepairAmount1[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #1 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #1 has data or the Customer Selected Svc Appt Repair Amount #1 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepair2).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepair2))) and (string(normalize-space(./CustomerSelectedLOP2)) or not(./CustomerSelectedRepairAmount2[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #2 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #2 has data or the Customer Selected Svc Appt Repair Amount #2 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepair3).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepair3))) and (string(normalize-space(./CustomerSelectedLOP3)) or not(./CustomerSelectedRepairAmount3[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #3 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #3 has data or the Customer Selected Svc Appt Repair Amount #3 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepair4).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepair4))) and (string(normalize-space(./CustomerSelectedLOP4)) or not(./CustomerSelectedRepairAmount4[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #4 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #4 has data or the Customer Selected Svc Appt Repair Amount #4 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepair5).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepair5))) and (string(normalize-space(./CustomerSelectedLOP5)) or not(./CustomerSelectedRepairAmount5[matches(.,'^0{14}$')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #5 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #5 has data or the Customer Selected Svc Appt Repair Amount #5 is not zero.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount1).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepairAmount1))) and (string(normalize-space(./CustomerSelectedLOP1)) or string(normalize-space(./CustomerSelectedRepair1)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #1 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #1 or Customer Selected Repair #1 is not empty.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount2).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepairAmount2))) and (string(normalize-space(./CustomerSelectedLOP2)) or string(normalize-space(./CustomerSelectedRepair2)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #2 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #2 or Customer Selected Repair #2 is not empty.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount3).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepairAmount3))) and (string(normalize-space(./CustomerSelectedLOP3)) or string(normalize-space(./CustomerSelectedRepair3)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #3 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #3 or Customer Selected Repair #3 is not empty.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount4).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepairAmount4))) and (string(normalize-space(./CustomerSelectedLOP4)) or string(normalize-space(./CustomerSelectedRepair4)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #4 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #4 or Customer Selected Repair #4 is not empty.)"/>
                    <!--added 08-03-2014 by Mikhail Tkachenko (CustomerSelectedRepairAmount5).-->
                    <as:constraint condition="not(string(normalize-space(./CustomerSelectedRepairAmount5))) and (string(normalize-space(./CustomerSelectedLOP5)) or string(normalize-space(./CustomerSelectedRepair5)))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Amount #5 in the Service Appointment Record is required if the Customer Selected Svc Appt Repair Labor Operation Code #5 or Customer Selected Repair #5 is not empty.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AppointmentID). Multi byte checking-->
                    <as:constraint condition="not(./AppointmentID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AppointmentID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Appointment ID field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AppointmentSchedulerLocalID).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AppointmentSchedulerLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AppointmentSchedulerLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Appointment Scheduler Local ID field at positions 40-49 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (VehicleMake). Multi byte checking-->
                    <as:constraint condition="not(./VehicleMake[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./VehicleMake[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Vehicle Make field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (VehicleModel). Multi byte checking-->
                    <as:constraint condition="not(./VehicleModel[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./VehicleModel[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Vehicle Model field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (FirstName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 130-159 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (MiddleInitial).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 160 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (LastName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 161-240 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (Title).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 241-245 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AddressLine1).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 246-325 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AddressLine2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 326-405 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AddressLine3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 406-485 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (City).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 486-515 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (StateOrProvince).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the State/Province field at positions 516-545 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (ZipOrPostalCode). Multi byte checking-->
                    <as:constraint condition="not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Zip / Postal Code field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerEmail1).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 1 field at positions 629-728 of the Service Appointment Record is MultiByte.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail1)) and (not(./CustomerEmail1[matches(normalize-space(.),'@')]) or not(./CustomerEmail1[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Email 1 in the Service Appointment Record must be a valid email address.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerEmail2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 729-828 of the Service Appointment Record is MultiByte.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and (not(./CustomerEmail2[matches(normalize-space(.),'@')]) or not(./CustomerEmail2[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Email 2 in the Service Appointment Record must be a valid email address.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerEmail3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 829-928 of the Service Appointment Record is MultiByte.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and (not(./CustomerEmail3[matches(normalize-space(.),'@')]) or not(./CustomerEmail3[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Email 3 in the Service Appointment Record must be a valid email address.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AppointmentConfirmationEmail).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AppointmentConfirmationEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AppointmentConfirmationEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Service Appointment Confirmation Email field at positions 929-1028 of the Service Appointment Record is MultiByte.)"/>
                    <as:constraint condition="string(normalize-space(./AppointmentConfirmationEmail)) and (not(./AppointmentConfirmationEmail[matches(normalize-space(.),'@')]) or not(./AppointmentConfirmationEmail[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Service Appointment Confirmation Email in the Service Appointment Record must be a valid email address.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedLOP1). Multi byte checking-->
                    <as:constraint condition="not(./CustomerSelectedLOP1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #1 field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedLOP2). Multi byte checking-->
                    <as:constraint condition="not(./CustomerSelectedLOP2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #2 field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedLOP3). Multi byte checking-->
                    <as:constraint condition="not(./CustomerSelectedLOP3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #3 field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedLOP4). Multi byte checking-->
                    <as:constraint condition="not(./CustomerSelectedLOP4[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP4[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #4 field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedLOP5). Multi byte checking-->
                    <as:constraint condition="not(./CustomerSelectedLOP5[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedLOP5[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,MultiByte characters are not allowed in the Customer Selected Svc Appt Repair Labor Operation Code #5 field of the Service Appointment Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedRepair1).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #1 field at positions 1129-1158 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedRepair2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #2 field at positions 1159-1188 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedRepair3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #3 field at positions 1189-1218 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedRepair4).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair4[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair4[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #4 field at positions 1219-1248 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerSelectedRepair5).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerSelectedRepair5[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerSelectedRepair5[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Selected Svc Appt Repair #5 field at positions 1249-1278 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (LoyaltyProgramMemberNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LoyaltyProgramMemberNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1349-1368 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CompanyDescription).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 1369-1398 of the Service Appointment Record is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (BusinessEmail).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 1399-1498 of the Service Appointment Record is MultiByte.)"/>
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and (not(./BusinessEmail[matches(normalize-space(.),'@')]) or not(./BusinessEmail[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Business Email in the Service Appointment Record must be a valid email address.)"/>


                    <!--Used Vehicle Sales-->
                    <!-- New added 02-04-2014: Test fields in new UVS (USed Vehicle Sales) record -->
                    <as:constraint condition="not(./SaleDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sale Date (date the used vehicle was sold) in the Used Vehicle Sale Record must be a valid date in the format YYYYMMDD.)"/>
                    <as:constraint condition="not(string(normalize-space(./SaleType))) or not(./SaleType[matches(normalize-space(.),'^[FRC]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sale Type in the Used Vehicle Sale Record is required and must contain one of the values 'F' 'R' or 'C'.)"/>
                    <!--updated 16-04-2014 by Mikhail Tkachenko (SoldVIN).-->
                    <as:constraint condition="not(./SoldVIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sold VIN in the Used Vehicle Sale Record should be alpha-numeric only.)"/>
                    <as:constraint condition="not(./SoldOdometerReading[matches(normalize-space(.),'^[0-9]{6}$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sold Odometer Reading in the Used Vehicle Sale Record should be numeric only.)"/>
                    <as:constraint condition="not(./SoldOdometerIndicator[matches(normalize-space(.),'^[MK]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sold Odometer Indicator (miles or kilometer) in the Used Vehicle Sale Record must be either M or K.)"/>
                    <as:constraint condition="not(./TradeInOdometerReading[matches(normalize-space(.),'^[0-9]{6}$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Trade In Odometer Reading in the Used Vehicle Sale Record should be numeric only.)"/>
                    <as:constraint condition="not(./TradeInOdometerIndicator[matches(normalize-space(.),'^[MK]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Trade In Odometer Indicator (miles or kilometer) in the Used Vehicle Sale Record must be either M or K.)"/>
                    <!--removed 19-03-2014 by Mikhail Tkachenko according to HappyPath-->
                    <!--<as:constraint condition="not(./CustomerNumber[matches(normalize-space(.),'^[YNU]$')])"-->
                    <!--action="printMessage(/UDBFile/UsedVehicleSales,The Customer Number in the Used Vehicle Sale Record must contain one of the values 'Y' 'N' or 'U'.)"/>-->
                    <!-- Removed restriction per Mike 02-06-2014
                    <as:constraint condition="string(normalize-space(./FirstName)) and ./FirstName[matches(normalize-space(.),'[0-9]')]"
                      action="printMessage(/UDBFile/UsedVehicleSales,The First Name in the Used Vehicle Sale Record must not contain a number)"/> -->
                    <!--updated 24-04-2014 by Mikhail Tkachenko (MiddleInitial).-->
                    <as:constraint condition="./MiddleInitial[matches(.,'[*\d,.;:=+\-_?#$%@^\\/!>|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./MiddleInitial, &quot;'&quot;)"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Middle Initial in the Used Vehicle Sale Record must be an alpha or multibyte character.)"/>
                    <as:constraint condition="./City[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The City in the Used Vehicle Sale Record must not contain numbers.)"/>
                    <as:constraint condition="./StateOrProvince[matches(.,'[0-9]')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The State/Province in the Used Vehicle Sale Record must not contain numbers.)"/>
                    <!--updated 16-03-2014 by Mikhail Tkachenko (HomePhone)-->
                    <as:constraint condition="not(./HomePhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Home Phone in the Used Vehicle Sale Record should be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <!--updated 16-03-2014 by Mikhail Tkachenko (WorkPhone)-->
                    <as:constraint condition="not(./WorkPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Work Phone in the Used Vehicle Sale Record should be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <!--updated 16-03-2014 by Mikhail Tkachenko (CellPhone)-->
                    <as:constraint condition="not(./CellPhone[matches(normalize-space(.),'^[0-9]*$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Cell Phone in the Used Vehicle Sale Record should be numeric only. Do NOT fill in extra spaces with zeros.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail1)) and (not(./CustomerEmail1[matches(normalize-space(.),'@')]) or not(./CustomerEmail1[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,Customer Email 1 in the Used Vehicle Sale Record must be a valid email address.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and (not(./CustomerEmail2[matches(normalize-space(.),'@')]) or not(./CustomerEmail2[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,Customer Email 2 in the Used Vehicle Sale Record must be a valid email address.)"/>
                    <!--removed 08-04-2014 by Mikhail Tkachenko-->
                    <!--<as:constraint condition="string(normalize-space(./ContractType)) and (./ContractType[matches(.,'[*,.;:=+\-_?#$%@\^\\/!>|}{()]')] or contains(./ContractType,'[') or contains(./ContractType,']'))"-->
                    <!--action="printMessage(/UDBFile/UsedVehicleSales,The Contract Type in the Used Vehicle Sale Record must be an alpha-numeric value.)"/>-->
                    <!--removed 19-03-2014 by Mikhail Tkachenko according to HappyPath-->
                    <!--<as:constraint condition="string(normalize-space(./SaleTypeDescription)) and (./SaleTypeDescription[matches(.,'[*,.;:=+\-_?#$%@\^\\/!>|}{()]')] or contains(./SaleTypeDescription,'[') or contains(./SaleTypeDescription,']'))"-->
                    <!--action="printMessage(/UDBFile/UsedVehicleSales,The Sale Type Description in the Used Vehicle Sale Record must be an alpha-numeric value.)"/>-->
                    <as:constraint condition="./InventoryType[matches(.,'[*\d,.;:=+\-_?#$%@\^\\/!>|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./InventoryType, &quot;'&quot;)"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Inventory Type in the Used Vehicle Sale Record must be an alpha or multibyte characters.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerCountryCode)) and (normalize-space(./CustomerCountryCode)[matches(.,'[ *,.;:=+\-_?#$%@\^\\/!>|}{()]')] or contains(./CustomerCountryCode,'[') or contains(./CustomerCountryCode,']'))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Customer Country Code in the Used Vehicle Sale Record should be alpha-numeric.)"/>
                    <!--4.01-->
                    <!--added 17-03-2014 by Mikhail Tkachenko (SalesPersonSTARSID)-->
                    <as:constraint condition="not(./SalesPersonSTARSID[matches(.,'^([0-9]{9}|\s*)$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sales Person STARS ID in the Used Vehicle Sale Record allows numerical or spaces filled values only.)"/>
                    <!--updated 14-03-2014 by Mikhail Tkachenko (CustomerCountryCode)-->
                    <as:constraint condition="string(normalize-space(./CustomerCountryCode)) and not(./CustomerCountryCode[matches(.,'^[A-Z]{3}$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Customer Country Code in the Used Vehicle Sale Record must be upper case alpha and from the ISO 3166-1 alpha-3 list or space filled.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Mail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Mail)) and not(./OPT_DlrPerm-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Mail in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Mail)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Mail in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Mail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Mail)) and not(./OPT_CorpExp-Mail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Mail in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Mail)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Mail in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-BusEmail)) and not(./OPT_DlrPerm-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Business Email in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-BusEmail)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Business Email in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-BusEmail). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-BusEmail)) and not(./OPT_CorpExp-BusEmail[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Business Email in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-BusEmail)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Business Email in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email1). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email1)) and not(./OPT_DlrPerm-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Email 1 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email1)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Email 1 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email1). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email1)) and not(./OPT_CorpExp-Email1[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Email 1 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email1)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Email 1 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email2)) and not(./OPT_DlrPerm-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Email 2 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email2)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Email 2 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email2). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email2)) and not(./OPT_CorpExp-Email2[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Email 2 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email2)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Email 2 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-Email3)) and not(./OPT_DlrPerm-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Email 3 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-Email3)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Email 3 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-Email3). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-Email3)) and not(./OPT_CorpExp-Email3[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Email 3 in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-Email3)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Email 3 in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-HomePhone)) and not(./OPT_DlrPerm-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Home Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-HomePhone)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Home Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-HomePhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-HomePhone)) and not(./OPT_CorpExp-HomePhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Home Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-HomePhone)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Home Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-CellPhone)) and not(./OPT_DlrPerm-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Cell Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-CellPhone)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Cell Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-CellPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-CellPhone)) and not(./OPT_CorpExp-CellPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Cell Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-CellPhone)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Cell Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-WorkPhone)) and not(./OPT_DlrPerm-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/Work Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-WorkPhone)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/Work Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-WorkPhone). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-WorkPhone)) and not(./OPT_CorpExp-WorkPhone[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/Work Phone in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-WorkPhone)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/Work Phone in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-SMS)) and not(./OPT_DlrPerm-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/SMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-SMS)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/SMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-SMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-SMS)) and not(./OPT_CorpExp-SMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/SMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-SMS)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/SMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_DlrPerm-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_DlrPerm-MMS)) and not(./OPT_DlrPerm-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Dealer Permission/Opt In/MMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_DlrPerm-MMS)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Dealer Permission/Opt In/MMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--updated 27-03-2014 by Mikhail Tkachenko (OPT_CorpExp-MMS). Empty checking added-->
                    <as:constraint condition="string(normalize-space(./OPT_CorpExp-MMS)) and not(./OPT_CorpExp-MMS[matches(.,'^[YNU]$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Corporate Express/Opt In/MMS in the Used Vehicle Sale Record is not from the enumerated list ('Y', 'N', 'U').)"/>
                    <as:constraint condition="not(string(normalize-space(./OPT_CorpExp-MMS)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,WARNING: The Corporate Express/Opt In/MMS in the Used Vehicle Sale Record is empty. This field must contain a 'Y' 'N'  or 'U' value, unless it is against the local laws.)"/>
                    <!--added 08-04-2014 by Mikhail Tkachenko (SalesPersonSocialID)-->
                    <as:constraint condition="not(./SalesPersonSocialID[matches(.,'^[0-9]{6}$')]) and not(string(normalize-space(./SalesPersonSTARSID))) and //FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sales Person # (SSN OR SIN) in the Used Vehicle Sale Record is required and should be numeric only.)"/>
                    <!--updated 08-03-2014 by Mikhail Tkachenko (SalesPersonSocialID).-->
                    <as:constraint condition="string(normalize-space(./SalesPersonSocialID)) and (string(normalize-space(./SalesPersonSTARSID)) or not(//FileHeader/GeographicSalesAreaCode[matches(.,'^(USA|CAN)$')]))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sales Person # (SSN OR SIN) in the Used Vehicle Sale Record must be empty, unless the Geo Sales Area Code in the File Trailer is 'USA' or 'CAN' and the DMS is unable to send in the Sales Person - STARS ID.)"/>
                    <!--added 08-04-2014 by Mikhail Tkachenko (SalesPersonLocalID and SalesPersonSTARSID)-->
                    <as:constraint condition="not(string(normalize-space(./SalesPersonLocalID))) and not(string(normalize-space(./SalesPersonSTARSID)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sales Person Local ID or Sales Person STARS ID in the Used Vehicle Sale Record must be not empty.)"/>
                    <!--added 08-04-2014 by Mikhail Tkachenko (ContractType)-->
                    <as:constraint condition="string(normalize-space(./ContractType)) and //FileHeader/GeographicSalesAreaCode[matches(.,'^USA$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,If the Geographic Sales Area Code in the File Header record equals to 'USA' then the Contract Type in the Used Vehicle Sale Record must be empty.)"/>
                    <!--updated 08-03-2014 by Mikhail Tkachenko (ContractType).-->
                    <as:constraint condition="(./ContractType[matches(.,'[,.;:=+\-_?#$%@\^\\/!>|}{()\]\[`~&amp;&quot;&lt;]')] or contains(./ContractType, &quot;'&quot;)) and not(//FileHeader/GeographicSalesAreaCode[matches(.,'^USA$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Contract Type in the Used Vehicle Sale Record cannot contain special characters.)"/>
                    <!--added 11-04-2014 by Mikhail Tkachenko (SaleDate).-->
                    <as:constraint condition="number(substring(./SaleDate, 3)) &gt; number(concat(substring(//FileHeader/FileDate, 5), substring(//FileHeader/FileDate, 1, 4)))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sale Date (date vehicle sold) in the Used Vehicle Record must not be later than the File Date in the File Header Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (RecordType)-->
                    <as:constraint condition="not(./RecordType[matches(.,'^U1$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Record Type in the Used Vehicle Sale Record allows 'U1' value only.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (UsedVehicleInvoiceNumber). Multi byte checking-->
                    <as:constraint condition="not(./UsedVehicleInvoiceNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./UsedVehicleInvoiceNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,MultiByte characters are not allowed in the Used Vehicle Invoice Number field of the Used Vehicle Sale Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (SalesPersonLocalID).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SalesPersonLocalID[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SalesPersonLocalID[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sales Person Local ID field at positions 35-44 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (TradeInVIN).-->
                    <as:constraint condition="not(./TradeInVIN[matches(normalize-space(.),'^[a-zA-Z0-9]*$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Trade In VIN in the Used Vehicle Sale Record should be alpha-numeric only.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerNumber[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Number field at positions 102-111 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (FirstName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./FirstName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./FirstName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the First Name field at positions 112-141 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (MiddleInitial).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./MiddleInitial[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./MiddleInitial[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Middle Initial field at position 142 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (LastName).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LastName[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./LastName[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Last Name field at positions 143-222 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (Title).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./Title[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./Title[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Title field at positions 223-227 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AddressLine1).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 1 field at positions 228-307 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AddressLine2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 2 field at positions 308-387 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (City).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./City[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./City[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the City field at positions 388-417 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (StateOrProvince).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./StateOrProvince[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./StateOrProvince[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the State/Province field at positions 418-447 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (ZipOrPostalCode). Multi byte checking-->
                    <as:constraint condition="not(./ZipOrPostalCode[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ZipOrPostalCode[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,MultiByte characters are not allowed in the Zip / Postal Code field of the Used Vehicle Sale Record.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerEmail1).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail1[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail1[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 1 field at positions 508-607 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerEmail2).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail2[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail2[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 2 field at positions 608-707 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (ContractType).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and normalize-space(./ContractType) and not(./ContractType[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./ContractType[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Contract Type field at positions 708-722 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (SaleTypeDescription).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./SaleTypeDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./SaleTypeDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Sale Type Description field at positions 723-737 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (InventoryType).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./InventoryType[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./InventoryType[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Inventory Type field at positions 738-757 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (AddressLine3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./AddressLine3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./AddressLine3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Address 3 field at positions 781-860 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CompanyDescription).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CompanyDescription[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CompanyDescription[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Company Description field at positions 861-890 of the Used Vehicle Sales is MultiByte.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (BusinessEmail).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./BusinessEmail[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./BusinessEmail[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Business Email field at positions 891-990 of the Used Vehicle Sales is MultiByte.)"/>
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and (not(./BusinessEmail[matches(normalize-space(.),'@')]) or not(./BusinessEmail[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Business Email in the Used Vehicle Sale Record must be a valid email address.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (CustomerEmail3).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./CustomerEmail3[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')] or ./CustomerEmail3[matches(.,&quot;^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;'&lt;]*$&quot;)])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Customer Email 3 field at positions 991-1090 of the Used Vehicle Sale Record is MultiByte.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and (not(./CustomerEmail3[matches(normalize-space(.),'@')]) or not(./CustomerEmail3[matches(normalize-space(.),'\.')]))"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Customer Email 3 in the Used Vehicle Sale Record must be a valid email address.)"/>
                    <!--added 16-04-2014 by Mikhail Tkachenko (LoyaltyProgramMemberNumber).-->
                    <as:constraint condition="//FileHeader/MultiByteIndicator = 'S' and not(./LoyaltyProgramMemberNumber[matches(.,'^[*a-zA-Z\d,.;:=+\-_?#$%@\^\\/!>|}{\s()\]\[`~&amp;&quot;&lt;]*$')])"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Multibyte Indicator is 'S' (Single Byte) but the data in the Loyalty Program Member Number field at positions 1091-1110 of the Used Vehicle Sales is MultiByte.)"/>



                    <!-- File Trailer -->
                    <as:constraint condition="not(./PACode[matches(.,'^[0-9A-Za-z]{5}$')])"
                                   action="printMessage(/UDBFile/FileTrailer,The Ford Parts and Accessories Code in the File Trailer must be a 5 character alpha-numeric value.)"/>
                    <as:constraint condition="string(normalize-space(./SubDealerPACode)) and not(./SubDealerPACode[matches(normalize-space(.),'^[0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$|^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]$')])"
                                   action="printMessage(/UDBFile/FileTrailer,The Sub Dealer P &amp;amp; A Code in the File Trailer must be an alpha-numeric value.)"/>
                    <!--updated 14-04-2014 by Mikhail Tkachenko (GeographicSalesAreaCode).Error message updated-->
                    <as:constraint condition="not(./GeographicSalesAreaCode[matches(normalize-space(.),'^[A-Z]{3}$')])"
                                   action="printMessage(/UDBFile/FileTrailer,The Geo Sales Area Code in positions (20-22) of the File Trailer Record must be upper case.)"/>
                    <as:constraint condition="not(./FileDate[matches(.,'^((((0[13578]|1[02])(0[1-9]|[12]\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\d|30)|02(0[1-9]|1\d|2[0-8]))\d{2})|0229([02468][048]|[13579][26]))$')])"
                                   action="printMessage(/UDBFile/FileTrailer,The File Date (date the file was created) in positions (23-28) of the File Trailer Record must be a valid date in the format MMDDYY.)"/>
                    <as:constraint condition="not(./FileNumber[matches(.,'^0[1-9]|[1-9][0-9]$')])"
                                   action="printMessage(/UDBFile/FileTrailer,The File Number in positions (29-30) of the File Trailer (number of the current file in process) must be a 2 digit numeric value greater than 0.)"/>
                    <as:constraint condition="not(./RecordCount[matches(.,'^[0-9]{8}$')])"
                                   action="printMessage(/UDBFile/FileTrailer,The Record Count in the File Trailer (total number of records submitted) must be a 8 digit numeric value greater than 2.)"/>
                    <!-- 3.21R -->
                    <as:constraint condition="not(./FileTypeFlag[matches(.,'^[DH]$')])"
                                   action="printMessage(/UDBFile/FileTrailer,File Type Flag in position 39 of the Trailer Record must be from the enumerated list.)"/>


                    <!--NO FORMAT RULES Required but no format rule possible -->

                    <!-- File Header -->
                    <as:constraint condition="not(string(normalize-space(./DSPSoftwareReleaseVersion)))"
                                   action="printMessage(/UDBFile/FileHeader,The DSP Software Release Version (DSP internal software release number) is a required field.)"/>
                    <!-- RO Header -->
                    <!-- RO Service -->
                    <!-- RO Part -->
                    <!-- OTC Header -->
                    <as:constraint condition="not(string(normalize-space(./InvoiceNumber)))"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Invoice Number in the OTC Header Record was either empty or all zeros. An Invoice Number is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./CustomerTaxID))) and ./CustomerTypeCode[matches(.,'^[DFGW]$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Identification Code in the OTC Header Record was empty. This field is required if the Parts Customer Type Code is either 'D', 'F', 'G' or 'W'.)"/>

                    <!-- Part Numbers -->
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))"
                                   action="printMessage(/UDBFile/RepairOrderPart,Parts Prefix, Part Base and Part Suffix in the Repair Order Part Record are all empty. A Part Number is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,Parts Prefix, Part Base and Part Suffix in the OTC Part Record are all empty. A Part Number is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))"
                                   action="printMessage(/UDBFile/PartsInventory,Parts Prefix, Part Base and Part Suffix in the Parts Inventory Record are all empty. A Part Number is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and not(string(normalize-space(./PartNumberSuffix)))"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,Parts Prefix, Part Base and Part Suffix in the Parts Initial Quantity Record are all empty. A Part Number is required.)"/>


                    <!-- New added 5-16-2013: Check for Sublet/Misc lines missing either description or amount -->
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription01)) and ./SubletOrMiscAmount01 = 0) or (not(./SubletOrMiscAmount01 = 0) and not(string(normalize-space(./SubletOrMiscDescription01))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #1 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription02)) and ./SubletOrMiscAmount02 = 0) or (not(./SubletOrMiscAmount02 = 0) and not(string(normalize-space(./SubletOrMiscDescription02))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #2 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription03)) and ./SubletOrMiscAmount03 = 0) or (not(./SubletOrMiscAmount03 = 0) and not(string(normalize-space(./SubletOrMiscDescription03))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #3 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription04)) and ./SubletOrMiscAmount04 = 0) or (not(./SubletOrMiscAmount04 = 0) and not(string(normalize-space(./SubletOrMiscDescription04))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #4 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription05)) and ./SubletOrMiscAmount05 = 0) or (not(./SubletOrMiscAmount05 = 0) and not(string(normalize-space(./SubletOrMiscDescription05))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #5 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription06)) and ./SubletOrMiscAmount06 = 0) or (not(./SubletOrMiscAmount06 = 0) and not(string(normalize-space(./SubletOrMiscDescription06))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #6 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription07)) and ./SubletOrMiscAmount07 = 0) or (not(./SubletOrMiscAmount07 = 0) and not(string(normalize-space(./SubletOrMiscDescription07))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #7 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription08)) and ./SubletOrMiscAmount08 = 0) or (not(./SubletOrMiscAmount08 = 0) and not(string(normalize-space(./SubletOrMiscDescription08))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #8 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription09)) and ./SubletOrMiscAmount09 = 0) or (not(./SubletOrMiscAmount09 = 0) and not(string(normalize-space(./SubletOrMiscDescription09))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #9 must have both a Description and an Amount.)"/>
                    <as:constraint condition="(string(normalize-space(./SubletOrMiscDescription10)) and ./SubletOrMiscAmount10 = 0) or (not(./SubletOrMiscAmount10 = 0) and not(string(normalize-space(./SubletOrMiscDescription10))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous #10 must have both a Description and an Amount.)"/>

                    <!-- New added 5-16-2013: Check for Sublet/Misc lines out of position -->
                    <as:constraint condition="
                                    (string(normalize-space(./SubletOrMiscDescription02)) and not(string(normalize-space(./SubletOrMiscDescription01)))) or
                                    (string(normalize-space(./SubletOrMiscDescription03)) and not(string(normalize-space(./SubletOrMiscDescription02)))) or
                                    (string(normalize-space(./SubletOrMiscDescription04)) and not(string(normalize-space(./SubletOrMiscDescription03)))) or
                                    (string(normalize-space(./SubletOrMiscDescription05)) and not(string(normalize-space(./SubletOrMiscDescription04)))) or
                                    (string(normalize-space(./SubletOrMiscDescription05)) and not(string(normalize-space(./SubletOrMiscDescription05)))) or
                                    (string(normalize-space(./SubletOrMiscDescription07)) and not(string(normalize-space(./SubletOrMiscDescription06)))) or
                                    (string(normalize-space(./SubletOrMiscDescription08)) and not(string(normalize-space(./SubletOrMiscDescription07)))) or
                                    (string(normalize-space(./SubletOrMiscDescription09)) and not(string(normalize-space(./SubletOrMiscDescription08)))) or
                                    (string(normalize-space(./SubletOrMiscDescription10)) and not(string(normalize-space(./SubletOrMiscDescription09))))"
                                   action="printMessage(//RepairOrderService,Sublet / Miscellaneous Descriptions and Amounts must start at number 1 and be sent in order without skipping numbers.)"/>

                    <!-- New added 1-31-2014: Check for blank Part Base when Part Prefix and Part Suffix are populated AND lone Part Suffix -->
                    <as:constraint condition="string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/RepairOrderPart,If Parts Prefix and Part Suffix are sent in the Repair Order Part Record the Part Base is required.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,If Parts Prefix and Part Suffix are sent in the OTC Part Record the Part Base is required.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/PartsInventory,If Parts Prefix and Part Suffix are sent in the Parts Inventory Record the Part Base is required.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberPrefix)) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,If Parts Prefix and Part Suffix are sent in the Parts Initial Quantity Record the Part Base is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/RepairOrderPart,If Part Suffix is sent in the Repair Order Part Record the Part Base is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,If Part Suffix is sent in the OTC Part Record the Part Base is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/PartsInventory,If Part Suffix is sent in the Parts Inventory Record the Part Base is required.)"/>
                    <as:constraint condition="not(string(normalize-space(./PartNumberPrefix))) and not(string(normalize-space(./PartNumberBase))) and string(normalize-space(./PartNumberSuffix))"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,If Part Suffix is sent in the Parts Initial Quantity Record the Part Base is required.)"/>


                    <!-- New added 02-03-2014: Test fields in new PIQ (Initial Load) record -->
                    <as:constraint condition="not(./QuantityDate[matches(.,'^([2-9]\d{3}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)|(([2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))0229)$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Date (date the quantity is being reported for) in the Parts Initial Quantity Record must be a valid date in the format YYYYMMDD.)"/>
                    <as:constraint condition="not(./QuantityOnHand[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity On Hand (count of this part at the end of the daily processing) in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-0[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold Current Month in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-1[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold Last Month in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-2[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 2 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-3[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 3 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-4[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 4 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-5[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 5 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-6[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 6 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-7[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 7 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-8[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 8 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-9[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 9 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-10[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 10 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-11[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 11 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>
                    <as:constraint condition="not(./SaleQuantityCurrentMonth-12[matches(.,'^[-0-9][0-9]{6}$')])"
                                   action="printMessage(/UDBFile/PartsInitialQuantity,The Quantity Sold 12 Months Ago in the Parts Initial Quantity Record is invalid. Only numerals are allowed or a '-' in the first position.)"/>


                    <!--JUSTIFICATION CONSTRAINTS-->


                    <!--File Header-->
                    <!--added 28-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./SubDealerPACode)) and ./SubDealerPACode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/FileHeader,The Sub Dealer P &amp;amp; A Code field in the File Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./FranchiseCode)) and ./FranchiseCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/FileHeader,The Franchise Code field in the File Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./DSPSoftwareReleaseVersion)) and ./DSPSoftwareReleaseVersion[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/FileHeader,The DSP Software Release Number field in the File Header Record must be left justified with right space fill.)"/>



                    <!--Repair Order Header.-->
                    <!--added 16-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./VIN)) and ./VIN[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The VIN field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The First Name field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Last Name field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Title field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Address 1 field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Address 2 field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The City field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The State/Province field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Zip / Postal Code field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Home Phone field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Work Phone field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LicensePlateNumber)) and ./LicensePlateNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Vehicle License Plate Number field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./ServiceWriterLocalID)) and ./ServiceWriterLocalID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Writer - Local ID field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./ServiceWriterSTARSID)) and ./ServiceWriterSTARSID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Service Writer STARS ID field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail)) and ./CustomerEmail[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Email field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Cell Phone field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Address 3 field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Company Description field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Business Email field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Email 2 field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Email 3 field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Loyalty Program Member Number field in the Repair Order Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerNumber)) and ./CustomerNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderHeader,The Customer Number field in the Repair Order Header Record must be left justified with right space fill.)"/>


                    <!--Repair Order Service-->
                    <!--added 16-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./LaborOperationCode)) and ./LaborOperationCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Labor Operation Code field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription01)) and ./SubletOrMiscDescription01[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #01 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription02)) and ./SubletOrMiscDescription02[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #02 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription03)) and ./SubletOrMiscDescription03[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #03 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription04)) and ./SubletOrMiscDescription04[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #04 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription05)) and ./SubletOrMiscDescription05[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #05 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription06)) and ./SubletOrMiscDescription06[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #06 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription07)) and ./SubletOrMiscDescription07[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #07 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription08)) and ./SubletOrMiscDescription08[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #08 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription09)) and ./SubletOrMiscDescription09[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #09 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SubletOrMiscDescription10)) and ./SubletOrMiscDescription10[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Sublet / Misc Description #10 field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="normalize-space(./LaborDescription/LaborDescriptionText) and ./LaborDescription/LaborDescriptionText[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Labor Description field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./TechnicianLocalID)) and ./TechnicianLocalID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician Local ID field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./TechnicianSTARSID)) and ./TechnicianSTARSID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Technician STARS ID field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./DeclinedServOpCode)) and ./DeclinedServOpCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Declined Services Labor Operation Code field in the Repair Order Service Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./DeclinedServOpCodeDesc)) and ./DeclinedServOpCodeDesc[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderService,The Declined Services Labor Operation Code Description field in the Repair Order Service Record must be left justified with right space fill.)"/>


                    <!--Repair Order Part-->
                    <!--added 16-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./PartNumberPrefix)) and ./PartNumberPrefix[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Prefix field in the Repair Order Part Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberBase)) and ./PartNumberBase[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Base field in the Repair Order Part Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberSuffix)) and ./PartNumberSuffix[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Suffix field in the Repair Order Part Record must be right justified with left space fill.)"/>
                    <as:constraint condition="normalize-space(./Description/DescriptionText) and ./Description/DescriptionText[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Description field in the Repair Order Part Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CausalCode)) and ./CausalCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Causal Indicator field in the Repair Order Part Record must be left justified with right space fill.)"/>
                    <!--added 05-05-2014 by Mikhail Tkachenko.(CounterPersonLocalID)-->
                    <as:constraint condition="string(normalize-space(./CounterPersonLocalID)) and ./CounterPersonLocalID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/RepairOrderPart,The Part Person - Local ID field in the Repair Order Part Record must be left justified with right space fill.)"/>


                    <!--OTC Part Invoice Header-->
                    <!--added 17-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./InvoiceNumber)) and ./InvoiceNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Invoice Number field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Last Name field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Address 1 field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Address 2 field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The City field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The State/Province field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Zip / Postal Code field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerTaxID)) and ./CustomerTaxID[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Identification Code field in the OTC Header Record must be right justified with left space fill.)"/>
                    <!--deleted 12-05-2014 by Mikhail Tkachenko.-->
                    <!--<as:constraint condition="string(normalize-space(./CounterPersonSocialID)) and ./CounterPersonSocialID[matches(.,'^\s.*$')]"-->
                    <!--action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person Social ID field in the OTC Header Record must be left justified with right space fill.)"/>-->
                    <as:constraint condition="string(normalize-space(./CounterPersonLocalID)) and ./CounterPersonLocalID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person - Local ID field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CounterPersonSTARSID)) and ./CounterPersonSTARSID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Part Person - STARS ID field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The First Name field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Title field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Home Phone field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Work Phone field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Cell Phone field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail)) and ./CustomerEmail[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Email field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SaleType)) and ./SaleType[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Sale Type field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SaleTypeDescription)) and ./SaleTypeDescription[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Sale Type Description field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Address 3 field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Company Description field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Business Email field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Email 2 field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Email 3 field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Loyalty Program Member Number field in the OTC Header Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerNumber)) and ./CustomerNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartInvoiceHeader,The Customer Number field in the OTC Header Record must be left justified with right space fill.)"/>


                    <!--OTC Parts Invoice Part-->
                    <!--added 17-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./PartNumberPrefix)) and ./PartNumberPrefix[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Part Prefix field in the OTC Part Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberBase)) and ./PartNumberBase[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Part Base field in the OTC Part Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberSuffix)) and ./PartNumberSuffix[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Part Suffix field in the OTC Part Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./Description)) and ./Description[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/OTCPartsInvoicePart,The Part Description field in the OTC Part Record must be left justified with right space fill.)"/>


                    <!--Parts Inventory-->
                    <!--added 17-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./PartNumberPrefix)) and ./PartNumberPrefix[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/PartsInventory,The Part Prefix field in the Parts Inventory Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberBase)) and ./PartNumberBase[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/PartsInventory,The Part Base field in the Parts Inventory Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./PartNumberSuffix)) and ./PartNumberSuffix[matches(.,'^.*\s$')]"
                                   action="printMessage(/UDBFile/PartsInventory,The Part Suffix field in the Parts Inventory Record must be right justified with left space fill.)"/>
                    <as:constraint condition="string(normalize-space(./PackedServicePartNumber)) and ./PackedServicePartNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/PartsInventory,The Packed Service Part Number field in the Parts Inventory Record must be left justified with right space fill.)"/>


                    <!--Service Appointments-->
                    <!--added 17-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./AppointmentID)) and ./AppointmentID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment ID field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AppointmentSchedulerLocalID)) and ./AppointmentSchedulerLocalID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Scheduler Local ID field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AppointmentSchedulerSTARSID)) and ./AppointmentSchedulerSTARSID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Appointment Scheduler - STARS ID field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./VIN)) and ./VIN[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The VIN field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./VehicleMake)) and ./VehicleMake[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Vehicle Make field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./VehicleModel)) and ./VehicleModel[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Vehicle Model field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The First Name field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Last Name field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Title field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Address 1 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Address 2 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Address 3 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The City field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The State/Province field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Zip / Postal Code field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Home Phone field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Work Phone field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Cell Phone field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail1)) and ./CustomerEmail1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Email 1 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Email 2 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Email 3 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AppointmentConfirmationEmail)) and ./AppointmentConfirmationEmail[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Service Appointment Confirmation Email field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedLOP1)) and ./CustomerSelectedLOP1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #1 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedLOP2)) and ./CustomerSelectedLOP2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #2 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedLOP3)) and ./CustomerSelectedLOP3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #3 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedLOP4)) and ./CustomerSelectedLOP4[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #4 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedLOP5)) and ./CustomerSelectedLOP5[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair Labor Operation Code #5 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepair1)) and ./CustomerSelectedRepair1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #1 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepair2)) and ./CustomerSelectedRepair2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #2 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepair3)) and ./CustomerSelectedRepair3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #3 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepair4)) and ./CustomerSelectedRepair4[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #4 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerSelectedRepair5)) and ./CustomerSelectedRepair5[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Customer Selected Svc Appt Repair #5 field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Loyalty Program Member Number field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Company Description field in the Service Appointment Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/ServiceAppointments,The Business Email field in the Service Appointment Record must be left justified with right space fill.)"/>


                    <!--Used Vehicle Sales-->
                    <!--added 17-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./UsedVehicleInvoiceNumber)) and ./UsedVehicleInvoiceNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Used Vehicle Invoice Number field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SalesPersonLocalID)) and ./SalesPersonLocalID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sales Person Local ID field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SalesPersonSTARSID)) and ./SalesPersonSTARSID[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sales Person STARS ID field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SoldVIN)) and ./SoldVIN[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sold VIN field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./TradeInVIN)) and ./TradeInVIN[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Trade In VIN field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerNumber)) and ./CustomerNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Customer Number field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./FirstName)) and ./FirstName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The First Name field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LastName)) and ./LastName[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Last Name field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./Title)) and ./Title[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Title field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine1)) and ./AddressLine1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Address 1 field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine2)) and ./AddressLine2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Address 2 field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./City)) and ./City[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The City field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./StateOrProvince)) and ./StateOrProvince[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The State/Province field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./ZipOrPostalCode)) and ./ZipOrPostalCode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Zip / Postal Code field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./HomePhone)) and ./HomePhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Home Phone field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./WorkPhone)) and ./WorkPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Work Phone field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail1)) and ./CustomerEmail1[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Customer Email 1 field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail2)) and ./CustomerEmail2[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Customer Email 2 field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./ContractType)) and ./ContractType[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Contract Type field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SaleTypeDescription)) and ./SaleTypeDescription[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sale Type Description field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./InventoryType)) and ./InventoryType[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Inventory Type field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CellPhone)) and ./CellPhone[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Cell Phone field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./AddressLine3)) and ./AddressLine3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Address 3 field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CompanyDescription)) and ./CompanyDescription[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Company Description field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./BusinessEmail)) and ./BusinessEmail[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Business Email field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./CustomerEmail3)) and ./CustomerEmail3[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Customer Email 3 field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./LoyaltyProgramMemberNumber)) and ./LoyaltyProgramMemberNumber[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Loyalty Program Member Number field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>
                    <as:constraint condition="string(normalize-space(./SaleType)) and ./SaleType[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/UsedVehicleSales,The Sale Type field in the Used Vehicle Sale Record must be left justified with right space fill.)"/>


                    <!--File Trailer-->
                    <!--added 28-04-2014 by Mikhail Tkachenko.-->
                    <as:constraint condition="string(normalize-space(./SubDealerPACode)) and ./SubDealerPACode[matches(.,'^\s.*$')]"
                                   action="printMessage(/UDBFile/FileTrailer,The Sub Dealer P &amp;amp; A Code field in the File Trailer Record must be left justified with right space fill.)"/>


                </as:context>
            </as:default>
        </as:Rules>
    </as:BusinessUseContext>
</as:CAM>

